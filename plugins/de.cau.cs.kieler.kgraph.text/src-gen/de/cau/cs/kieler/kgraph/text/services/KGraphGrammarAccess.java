/*
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.kgraph.text.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class KGraphGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ParentKNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.ParentKNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cKgraphKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDataAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDataKIdentifierParserRuleCall_1_1_0 = (RuleCall)cDataAssignment_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cPosKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cColonKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2_0_2 = (UnorderedGroup)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_0_2_0 = (Group)cUnorderedGroup_2_0_2.eContents().get(0);
		private final Keyword cXKeyword_2_0_2_0_0 = (Keyword)cGroup_2_0_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_2_0_1 = (Keyword)cGroup_2_0_2_0.eContents().get(1);
		private final Assignment cXposAssignment_2_0_2_0_2 = (Assignment)cGroup_2_0_2_0.eContents().get(2);
		private final RuleCall cXposFloatParserRuleCall_2_0_2_0_2_0 = (RuleCall)cXposAssignment_2_0_2_0_2.eContents().get(0);
		private final Group cGroup_2_0_2_1 = (Group)cUnorderedGroup_2_0_2.eContents().get(1);
		private final Keyword cYKeyword_2_0_2_1_0 = (Keyword)cGroup_2_0_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_2_1_1 = (Keyword)cGroup_2_0_2_1.eContents().get(1);
		private final Assignment cYposAssignment_2_0_2_1_2 = (Assignment)cGroup_2_0_2_1.eContents().get(2);
		private final RuleCall cYposFloatParserRuleCall_2_0_2_1_2_0 = (RuleCall)cYposAssignment_2_0_2_1_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cSizeKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cColonKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2_1_2 = (UnorderedGroup)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_1_2_0 = (Group)cUnorderedGroup_2_1_2.eContents().get(0);
		private final Keyword cWidthKeyword_2_1_2_0_0 = (Keyword)cGroup_2_1_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_2_0_1 = (Keyword)cGroup_2_1_2_0.eContents().get(1);
		private final Assignment cWidthAssignment_2_1_2_0_2 = (Assignment)cGroup_2_1_2_0.eContents().get(2);
		private final RuleCall cWidthFloatParserRuleCall_2_1_2_0_2_0 = (RuleCall)cWidthAssignment_2_1_2_0_2.eContents().get(0);
		private final Group cGroup_2_1_2_1 = (Group)cUnorderedGroup_2_1_2.eContents().get(1);
		private final Keyword cHeightKeyword_2_1_2_1_0 = (Keyword)cGroup_2_1_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_2_1_1 = (Keyword)cGroup_2_1_2_1.eContents().get(1);
		private final Assignment cHeightAssignment_2_1_2_1_2 = (Assignment)cGroup_2_1_2_1.eContents().get(2);
		private final RuleCall cHeightFloatParserRuleCall_2_1_2_1_2_0 = (RuleCall)cHeightAssignment_2_1_2_1_2.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cPropertiesKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Keyword cColonKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cPersistentEntriesAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_2_2_2_0 = (RuleCall)cPersistentEntriesAssignment_2_2_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cInsetsKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cColonKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cInsetsAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cInsetsKInsetsParserRuleCall_3_0_2_0 = (RuleCall)cInsetsAssignment_3_0_2.eContents().get(0);
		private final Assignment cInsetsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cInsetsEmptyKInsetsParserRuleCall_3_1_0 = (RuleCall)cInsetsAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cLabelsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cLabelsKLabelParserRuleCall_4_0_0 = (RuleCall)cLabelsAssignment_4_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cChildrenKNodeParserRuleCall_4_1_0 = (RuleCall)cChildrenAssignment_4_1.eContents().get(0);
		private final Assignment cPortsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cPortsKPortParserRuleCall_4_2_0 = (RuleCall)cPortsAssignment_4_2.eContents().get(0);
		private final Assignment cOutgoingEdgesAssignment_4_3 = (Assignment)cAlternatives_4.eContents().get(3);
		private final RuleCall cOutgoingEdgesKEdgeParserRuleCall_4_3_0 = (RuleCall)cOutgoingEdgesAssignment_4_3.eContents().get(0);
		private final Assignment cDataAssignment_4_4 = (Assignment)cAlternatives_4.eContents().get(4);
		private final RuleCall cDataKRenderingParserRuleCall_4_4_0 = (RuleCall)cDataAssignment_4_4.eContents().get(0);
		private final Assignment cDataAssignment_4_5 = (Assignment)cAlternatives_4.eContents().get(5);
		private final RuleCall cDataKRenderingLibraryParserRuleCall_4_5_0 = (RuleCall)cDataAssignment_4_5.eContents().get(0);
		
		////----------------- KGraph -----------------
		//ParentKNode KNode:
		//	{KNode} ('kgraph' data+=KIdentifier?)? (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		//	& ('properties' ':' persistentEntries+=Property*)?) ('insets' ':' insets=KInsets | insets=EmptyKInsets)
		//	(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge
		//	| data+=KRendering | data+=KRenderingLibrary)*
		@Override public ParserRule getRule() { return rule; }
		
		//{KNode} ('kgraph' data+=KIdentifier?)? (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':'
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		//('insets' ':' insets=KInsets | insets=EmptyKInsets) (labels+=KLabel | children+=KNode | ports+=KPort |
		//outgoingEdges+=KEdge | data+=KRendering | data+=KRenderingLibrary)*
		public Group getGroup() { return cGroup; }
		
		//{KNode}
		public Action getKNodeAction_0() { return cKNodeAction_0; }
		
		//('kgraph' data+=KIdentifier?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'kgraph'
		public Keyword getKgraphKeyword_1_0() { return cKgraphKeyword_1_0; }
		
		//data+=KIdentifier?
		public Assignment getDataAssignment_1_1() { return cDataAssignment_1_1; }
		
		//KIdentifier
		public RuleCall getDataKIdentifierParserRuleCall_1_1_0() { return cDataKIdentifierParserRuleCall_1_1_0; }
		
		//(('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height' '='
		//height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'pos'
		public Keyword getPosKeyword_2_0_0() { return cPosKeyword_2_0_0; }
		
		//':'
		public Keyword getColonKeyword_2_0_1() { return cColonKeyword_2_0_1; }
		
		//(('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?)
		public UnorderedGroup getUnorderedGroup_2_0_2() { return cUnorderedGroup_2_0_2; }
		
		//('x' '=' xpos=Float)?
		public Group getGroup_2_0_2_0() { return cGroup_2_0_2_0; }
		
		//'x'
		public Keyword getXKeyword_2_0_2_0_0() { return cXKeyword_2_0_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_2_0_1() { return cEqualsSignKeyword_2_0_2_0_1; }
		
		//xpos=Float
		public Assignment getXposAssignment_2_0_2_0_2() { return cXposAssignment_2_0_2_0_2; }
		
		//Float
		public RuleCall getXposFloatParserRuleCall_2_0_2_0_2_0() { return cXposFloatParserRuleCall_2_0_2_0_2_0; }
		
		//('y' '=' ypos=Float)?
		public Group getGroup_2_0_2_1() { return cGroup_2_0_2_1; }
		
		//'y'
		public Keyword getYKeyword_2_0_2_1_0() { return cYKeyword_2_0_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_2_1_1() { return cEqualsSignKeyword_2_0_2_1_1; }
		
		//ypos=Float
		public Assignment getYposAssignment_2_0_2_1_2() { return cYposAssignment_2_0_2_1_2; }
		
		//Float
		public RuleCall getYposFloatParserRuleCall_2_0_2_1_2_0() { return cYposFloatParserRuleCall_2_0_2_1_2_0; }
		
		//('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'size'
		public Keyword getSizeKeyword_2_1_0() { return cSizeKeyword_2_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_1_1() { return cColonKeyword_2_1_1; }
		
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?)
		public UnorderedGroup getUnorderedGroup_2_1_2() { return cUnorderedGroup_2_1_2; }
		
		//('width' '=' width=Float)?
		public Group getGroup_2_1_2_0() { return cGroup_2_1_2_0; }
		
		//'width'
		public Keyword getWidthKeyword_2_1_2_0_0() { return cWidthKeyword_2_1_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_2_0_1() { return cEqualsSignKeyword_2_1_2_0_1; }
		
		//width=Float
		public Assignment getWidthAssignment_2_1_2_0_2() { return cWidthAssignment_2_1_2_0_2; }
		
		//Float
		public RuleCall getWidthFloatParserRuleCall_2_1_2_0_2_0() { return cWidthFloatParserRuleCall_2_1_2_0_2_0; }
		
		//('height' '=' height=Float)?
		public Group getGroup_2_1_2_1() { return cGroup_2_1_2_1; }
		
		//'height'
		public Keyword getHeightKeyword_2_1_2_1_0() { return cHeightKeyword_2_1_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_2_1_1() { return cEqualsSignKeyword_2_1_2_1_1; }
		
		//height=Float
		public Assignment getHeightAssignment_2_1_2_1_2() { return cHeightAssignment_2_1_2_1_2; }
		
		//Float
		public RuleCall getHeightFloatParserRuleCall_2_1_2_1_2_0() { return cHeightFloatParserRuleCall_2_1_2_1_2_0; }
		
		//('properties' ':' persistentEntries+=Property*)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'properties'
		public Keyword getPropertiesKeyword_2_2_0() { return cPropertiesKeyword_2_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_2_1() { return cColonKeyword_2_2_1; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_2_2_2() { return cPersistentEntriesAssignment_2_2_2; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_2_2_2_0() { return cPersistentEntriesPropertyParserRuleCall_2_2_2_0; }
		
		//('insets' ':' insets=KInsets | insets=EmptyKInsets)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'insets' ':' insets=KInsets
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'insets'
		public Keyword getInsetsKeyword_3_0_0() { return cInsetsKeyword_3_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_0_1() { return cColonKeyword_3_0_1; }
		
		//insets=KInsets
		public Assignment getInsetsAssignment_3_0_2() { return cInsetsAssignment_3_0_2; }
		
		//KInsets
		public RuleCall getInsetsKInsetsParserRuleCall_3_0_2_0() { return cInsetsKInsetsParserRuleCall_3_0_2_0; }
		
		//insets=EmptyKInsets
		public Assignment getInsetsAssignment_3_1() { return cInsetsAssignment_3_1; }
		
		//EmptyKInsets
		public RuleCall getInsetsEmptyKInsetsParserRuleCall_3_1_0() { return cInsetsEmptyKInsetsParserRuleCall_3_1_0; }
		
		//(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge | data+=KRendering | data+=KRenderingLibrary)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//labels+=KLabel
		public Assignment getLabelsAssignment_4_0() { return cLabelsAssignment_4_0; }
		
		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_4_0_0() { return cLabelsKLabelParserRuleCall_4_0_0; }
		
		//children+=KNode
		public Assignment getChildrenAssignment_4_1() { return cChildrenAssignment_4_1; }
		
		//KNode
		public RuleCall getChildrenKNodeParserRuleCall_4_1_0() { return cChildrenKNodeParserRuleCall_4_1_0; }
		
		//ports+=KPort
		public Assignment getPortsAssignment_4_2() { return cPortsAssignment_4_2; }
		
		//KPort
		public RuleCall getPortsKPortParserRuleCall_4_2_0() { return cPortsKPortParserRuleCall_4_2_0; }
		
		//outgoingEdges+=KEdge
		public Assignment getOutgoingEdgesAssignment_4_3() { return cOutgoingEdgesAssignment_4_3; }
		
		//KEdge
		public RuleCall getOutgoingEdgesKEdgeParserRuleCall_4_3_0() { return cOutgoingEdgesKEdgeParserRuleCall_4_3_0; }
		
		//data+=KRendering
		public Assignment getDataAssignment_4_4() { return cDataAssignment_4_4; }
		
		//KRendering
		public RuleCall getDataKRenderingParserRuleCall_4_4_0() { return cDataKRenderingParserRuleCall_4_4_0; }
		
		//data+=KRenderingLibrary
		public Assignment getDataAssignment_4_5() { return cDataAssignment_4_5; }
		
		//KRenderingLibrary
		public RuleCall getDataKRenderingLibraryParserRuleCall_4_5_0() { return cDataKRenderingLibraryParserRuleCall_4_5_0; }
	}
	public class KNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKnodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataKIdentifierParserRuleCall_2_0 = (RuleCall)cDataAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cPosKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3_1_0_2 = (UnorderedGroup)cGroup_3_1_0.eContents().get(2);
		private final Group cGroup_3_1_0_2_0 = (Group)cUnorderedGroup_3_1_0_2.eContents().get(0);
		private final Keyword cXKeyword_3_1_0_2_0_0 = (Keyword)cGroup_3_1_0_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_0_2_0_1 = (Keyword)cGroup_3_1_0_2_0.eContents().get(1);
		private final Assignment cXposAssignment_3_1_0_2_0_2 = (Assignment)cGroup_3_1_0_2_0.eContents().get(2);
		private final RuleCall cXposFloatParserRuleCall_3_1_0_2_0_2_0 = (RuleCall)cXposAssignment_3_1_0_2_0_2.eContents().get(0);
		private final Group cGroup_3_1_0_2_1 = (Group)cUnorderedGroup_3_1_0_2.eContents().get(1);
		private final Keyword cYKeyword_3_1_0_2_1_0 = (Keyword)cGroup_3_1_0_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_0_2_1_1 = (Keyword)cGroup_3_1_0_2_1.eContents().get(1);
		private final Assignment cYposAssignment_3_1_0_2_1_2 = (Assignment)cGroup_3_1_0_2_1.eContents().get(2);
		private final RuleCall cYposFloatParserRuleCall_3_1_0_2_1_2_0 = (RuleCall)cYposAssignment_3_1_0_2_1_2.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cSizeKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_1 = (Keyword)cGroup_3_1_1.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3_1_1_2 = (UnorderedGroup)cGroup_3_1_1.eContents().get(2);
		private final Group cGroup_3_1_1_2_0 = (Group)cUnorderedGroup_3_1_1_2.eContents().get(0);
		private final Keyword cWidthKeyword_3_1_1_2_0_0 = (Keyword)cGroup_3_1_1_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1_2_0_1 = (Keyword)cGroup_3_1_1_2_0.eContents().get(1);
		private final Assignment cWidthAssignment_3_1_1_2_0_2 = (Assignment)cGroup_3_1_1_2_0.eContents().get(2);
		private final RuleCall cWidthFloatParserRuleCall_3_1_1_2_0_2_0 = (RuleCall)cWidthAssignment_3_1_1_2_0_2.eContents().get(0);
		private final Group cGroup_3_1_1_2_1 = (Group)cUnorderedGroup_3_1_1_2.eContents().get(1);
		private final Keyword cHeightKeyword_3_1_1_2_1_0 = (Keyword)cGroup_3_1_1_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1_2_1_1 = (Keyword)cGroup_3_1_1_2_1.eContents().get(1);
		private final Assignment cHeightAssignment_3_1_1_2_1_2 = (Assignment)cGroup_3_1_1_2_1.eContents().get(2);
		private final RuleCall cHeightFloatParserRuleCall_3_1_1_2_1_2_0 = (RuleCall)cHeightAssignment_3_1_1_2_1_2.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Keyword cColonKeyword_3_1_2_1 = (Keyword)cGroup_3_1_2.eContents().get(1);
		private final Assignment cPersistentEntriesAssignment_3_1_2_2 = (Assignment)cGroup_3_1_2.eContents().get(2);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_3_1_2_2_0 = (RuleCall)cPersistentEntriesAssignment_3_1_2_2.eContents().get(0);
		private final Alternatives cAlternatives_3_2 = (Alternatives)cGroup_3.eContents().get(2);
		private final Group cGroup_3_2_0 = (Group)cAlternatives_3_2.eContents().get(0);
		private final Keyword cInsetsKeyword_3_2_0_0 = (Keyword)cGroup_3_2_0.eContents().get(0);
		private final Keyword cColonKeyword_3_2_0_1 = (Keyword)cGroup_3_2_0.eContents().get(1);
		private final Assignment cInsetsAssignment_3_2_0_2 = (Assignment)cGroup_3_2_0.eContents().get(2);
		private final RuleCall cInsetsKInsetsParserRuleCall_3_2_0_2_0 = (RuleCall)cInsetsAssignment_3_2_0_2.eContents().get(0);
		private final Assignment cInsetsAssignment_3_2_1 = (Assignment)cAlternatives_3_2.eContents().get(1);
		private final RuleCall cInsetsEmptyKInsetsParserRuleCall_3_2_1_0 = (RuleCall)cInsetsAssignment_3_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3_3 = (Alternatives)cGroup_3.eContents().get(3);
		private final Assignment cLabelsAssignment_3_3_0 = (Assignment)cAlternatives_3_3.eContents().get(0);
		private final RuleCall cLabelsKLabelParserRuleCall_3_3_0_0 = (RuleCall)cLabelsAssignment_3_3_0.eContents().get(0);
		private final Assignment cChildrenAssignment_3_3_1 = (Assignment)cAlternatives_3_3.eContents().get(1);
		private final RuleCall cChildrenKNodeParserRuleCall_3_3_1_0 = (RuleCall)cChildrenAssignment_3_3_1.eContents().get(0);
		private final Assignment cPortsAssignment_3_3_2 = (Assignment)cAlternatives_3_3.eContents().get(2);
		private final RuleCall cPortsKPortParserRuleCall_3_3_2_0 = (RuleCall)cPortsAssignment_3_3_2.eContents().get(0);
		private final Assignment cOutgoingEdgesAssignment_3_3_3 = (Assignment)cAlternatives_3_3.eContents().get(3);
		private final RuleCall cOutgoingEdgesKEdgeParserRuleCall_3_3_3_0 = (RuleCall)cOutgoingEdgesAssignment_3_3_3.eContents().get(0);
		private final Assignment cDataAssignment_3_3_4 = (Assignment)cAlternatives_3_3.eContents().get(4);
		private final RuleCall cDataKRenderingParserRuleCall_3_3_4_0 = (RuleCall)cDataAssignment_3_3_4.eContents().get(0);
		private final Assignment cDataAssignment_3_3_5 = (Assignment)cAlternatives_3_3.eContents().get(5);
		private final RuleCall cDataKRenderingLibraryParserRuleCall_3_3_5_0 = (RuleCall)cDataAssignment_3_3_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//KNode:
		//	{KNode}
		//	'knode' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		//	& ('properties' ':' persistentEntries+=Property*)?) ('insets' ':' insets=KInsets | insets=EmptyKInsets)
		//	(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge
		//	| data+=KRendering | data+=KRenderingLibrary)*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KNode} 'knode' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':'
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		//('insets' ':' insets=KInsets | insets=EmptyKInsets) (labels+=KLabel | children+=KNode | ports+=KPort |
		//outgoingEdges+=KEdge | data+=KRendering | data+=KRenderingLibrary)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{KNode}
		public Action getKNodeAction_0() { return cKNodeAction_0; }
		
		//'knode'
		public Keyword getKnodeKeyword_1() { return cKnodeKeyword_1; }
		
		//data+=KIdentifier?
		public Assignment getDataAssignment_2() { return cDataAssignment_2; }
		
		//KIdentifier
		public RuleCall getDataKIdentifierParserRuleCall_2_0() { return cDataKIdentifierParserRuleCall_2_0; }
		
		//('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height'
		//'=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?) ('insets' ':' insets=KInsets |
		//insets=EmptyKInsets) (labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge | data+=KRendering |
		//data+=KRenderingLibrary)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height' '='
		//height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'pos'
		public Keyword getPosKeyword_3_1_0_0() { return cPosKeyword_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_0_1() { return cColonKeyword_3_1_0_1; }
		
		//(('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?)
		public UnorderedGroup getUnorderedGroup_3_1_0_2() { return cUnorderedGroup_3_1_0_2; }
		
		//('x' '=' xpos=Float)?
		public Group getGroup_3_1_0_2_0() { return cGroup_3_1_0_2_0; }
		
		//'x'
		public Keyword getXKeyword_3_1_0_2_0_0() { return cXKeyword_3_1_0_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0_2_0_1() { return cEqualsSignKeyword_3_1_0_2_0_1; }
		
		//xpos=Float
		public Assignment getXposAssignment_3_1_0_2_0_2() { return cXposAssignment_3_1_0_2_0_2; }
		
		//Float
		public RuleCall getXposFloatParserRuleCall_3_1_0_2_0_2_0() { return cXposFloatParserRuleCall_3_1_0_2_0_2_0; }
		
		//('y' '=' ypos=Float)?
		public Group getGroup_3_1_0_2_1() { return cGroup_3_1_0_2_1; }
		
		//'y'
		public Keyword getYKeyword_3_1_0_2_1_0() { return cYKeyword_3_1_0_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0_2_1_1() { return cEqualsSignKeyword_3_1_0_2_1_1; }
		
		//ypos=Float
		public Assignment getYposAssignment_3_1_0_2_1_2() { return cYposAssignment_3_1_0_2_1_2; }
		
		//Float
		public RuleCall getYposFloatParserRuleCall_3_1_0_2_1_2_0() { return cYposFloatParserRuleCall_3_1_0_2_1_2_0; }
		
		//('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'size'
		public Keyword getSizeKeyword_3_1_1_0() { return cSizeKeyword_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1() { return cColonKeyword_3_1_1_1; }
		
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?)
		public UnorderedGroup getUnorderedGroup_3_1_1_2() { return cUnorderedGroup_3_1_1_2; }
		
		//('width' '=' width=Float)?
		public Group getGroup_3_1_1_2_0() { return cGroup_3_1_1_2_0; }
		
		//'width'
		public Keyword getWidthKeyword_3_1_1_2_0_0() { return cWidthKeyword_3_1_1_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1_2_0_1() { return cEqualsSignKeyword_3_1_1_2_0_1; }
		
		//width=Float
		public Assignment getWidthAssignment_3_1_1_2_0_2() { return cWidthAssignment_3_1_1_2_0_2; }
		
		//Float
		public RuleCall getWidthFloatParserRuleCall_3_1_1_2_0_2_0() { return cWidthFloatParserRuleCall_3_1_1_2_0_2_0; }
		
		//('height' '=' height=Float)?
		public Group getGroup_3_1_1_2_1() { return cGroup_3_1_1_2_1; }
		
		//'height'
		public Keyword getHeightKeyword_3_1_1_2_1_0() { return cHeightKeyword_3_1_1_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1_2_1_1() { return cEqualsSignKeyword_3_1_1_2_1_1; }
		
		//height=Float
		public Assignment getHeightAssignment_3_1_1_2_1_2() { return cHeightAssignment_3_1_1_2_1_2; }
		
		//Float
		public RuleCall getHeightFloatParserRuleCall_3_1_1_2_1_2_0() { return cHeightFloatParserRuleCall_3_1_1_2_1_2_0; }
		
		//('properties' ':' persistentEntries+=Property*)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//'properties'
		public Keyword getPropertiesKeyword_3_1_2_0() { return cPropertiesKeyword_3_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_2_1() { return cColonKeyword_3_1_2_1; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_3_1_2_2() { return cPersistentEntriesAssignment_3_1_2_2; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_3_1_2_2_0() { return cPersistentEntriesPropertyParserRuleCall_3_1_2_2_0; }
		
		//('insets' ':' insets=KInsets | insets=EmptyKInsets)
		public Alternatives getAlternatives_3_2() { return cAlternatives_3_2; }
		
		//'insets' ':' insets=KInsets
		public Group getGroup_3_2_0() { return cGroup_3_2_0; }
		
		//'insets'
		public Keyword getInsetsKeyword_3_2_0_0() { return cInsetsKeyword_3_2_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_2_0_1() { return cColonKeyword_3_2_0_1; }
		
		//insets=KInsets
		public Assignment getInsetsAssignment_3_2_0_2() { return cInsetsAssignment_3_2_0_2; }
		
		//KInsets
		public RuleCall getInsetsKInsetsParserRuleCall_3_2_0_2_0() { return cInsetsKInsetsParserRuleCall_3_2_0_2_0; }
		
		//insets=EmptyKInsets
		public Assignment getInsetsAssignment_3_2_1() { return cInsetsAssignment_3_2_1; }
		
		//EmptyKInsets
		public RuleCall getInsetsEmptyKInsetsParserRuleCall_3_2_1_0() { return cInsetsEmptyKInsetsParserRuleCall_3_2_1_0; }
		
		//(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge | data+=KRendering | data+=KRenderingLibrary)*
		public Alternatives getAlternatives_3_3() { return cAlternatives_3_3; }
		
		//labels+=KLabel
		public Assignment getLabelsAssignment_3_3_0() { return cLabelsAssignment_3_3_0; }
		
		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_3_3_0_0() { return cLabelsKLabelParserRuleCall_3_3_0_0; }
		
		//children+=KNode
		public Assignment getChildrenAssignment_3_3_1() { return cChildrenAssignment_3_3_1; }
		
		//KNode
		public RuleCall getChildrenKNodeParserRuleCall_3_3_1_0() { return cChildrenKNodeParserRuleCall_3_3_1_0; }
		
		//ports+=KPort
		public Assignment getPortsAssignment_3_3_2() { return cPortsAssignment_3_3_2; }
		
		//KPort
		public RuleCall getPortsKPortParserRuleCall_3_3_2_0() { return cPortsKPortParserRuleCall_3_3_2_0; }
		
		//outgoingEdges+=KEdge
		public Assignment getOutgoingEdgesAssignment_3_3_3() { return cOutgoingEdgesAssignment_3_3_3; }
		
		//KEdge
		public RuleCall getOutgoingEdgesKEdgeParserRuleCall_3_3_3_0() { return cOutgoingEdgesKEdgeParserRuleCall_3_3_3_0; }
		
		//data+=KRendering
		public Assignment getDataAssignment_3_3_4() { return cDataAssignment_3_3_4; }
		
		//KRendering
		public RuleCall getDataKRenderingParserRuleCall_3_3_4_0() { return cDataKRenderingParserRuleCall_3_3_4_0; }
		
		//data+=KRenderingLibrary
		public Assignment getDataAssignment_3_3_5() { return cDataAssignment_3_3_5; }
		
		//KRenderingLibrary
		public RuleCall getDataKRenderingLibraryParserRuleCall_3_3_5_0() { return cDataKRenderingLibraryParserRuleCall_3_3_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
	}
	public class KEdgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KEdge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKedgeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDataAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDataKIdentifierParserRuleCall_1_0 = (RuleCall)cDataAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourcePortAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSourcePortKPortCrossReference_3_1_0 = (CrossReference)cSourcePortAssignment_3_1.eContents().get(0);
		private final RuleCall cSourcePortKPortQualifiedIDParserRuleCall_3_1_0_1 = (RuleCall)cSourcePortKPortCrossReference_3_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetKNodeCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetKNodeQualifiedIDParserRuleCall_5_0_1 = (RuleCall)cTargetKNodeCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetPortAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTargetPortKPortCrossReference_6_1_0 = (CrossReference)cTargetPortAssignment_6_1.eContents().get(0);
		private final RuleCall cTargetPortKPortQualifiedIDParserRuleCall_6_1_0_1 = (RuleCall)cTargetPortKPortCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Alternatives cAlternatives_8_1 = (Alternatives)cGroup_8.eContents().get(1);
		private final Group cGroup_8_1_0 = (Group)cAlternatives_8_1.eContents().get(0);
		private final Keyword cPointsKeyword_8_1_0_0 = (Keyword)cGroup_8_1_0.eContents().get(0);
		private final Keyword cColonKeyword_8_1_0_1 = (Keyword)cGroup_8_1_0.eContents().get(1);
		private final Alternatives cAlternatives_8_1_0_2 = (Alternatives)cGroup_8_1_0.eContents().get(2);
		private final Group cGroup_8_1_0_2_0 = (Group)cAlternatives_8_1_0_2.eContents().get(0);
		private final Assignment cSourcePointAssignment_8_1_0_2_0_0 = (Assignment)cGroup_8_1_0_2_0.eContents().get(0);
		private final RuleCall cSourcePointKPointParserRuleCall_8_1_0_2_0_0_0 = (RuleCall)cSourcePointAssignment_8_1_0_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_8_1_0_2_0_1 = (Alternatives)cGroup_8_1_0_2_0.eContents().get(1);
		private final Group cGroup_8_1_0_2_0_1_0 = (Group)cAlternatives_8_1_0_2_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_1_0_2_0_1_0_0 = (Keyword)cGroup_8_1_0_2_0_1_0.eContents().get(0);
		private final Group cGroup_8_1_0_2_0_1_0_1 = (Group)cGroup_8_1_0_2_0_1_0.eContents().get(1);
		private final Assignment cBendPointsAssignment_8_1_0_2_0_1_0_1_0 = (Assignment)cGroup_8_1_0_2_0_1_0_1.eContents().get(0);
		private final RuleCall cBendPointsKPointParserRuleCall_8_1_0_2_0_1_0_1_0_0 = (RuleCall)cBendPointsAssignment_8_1_0_2_0_1_0_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_1_0_2_0_1_0_1_1 = (Keyword)cGroup_8_1_0_2_0_1_0_1.eContents().get(1);
		private final Assignment cTargetPointAssignment_8_1_0_2_0_1_0_2 = (Assignment)cGroup_8_1_0_2_0_1_0.eContents().get(2);
		private final RuleCall cTargetPointKPointParserRuleCall_8_1_0_2_0_1_0_2_0 = (RuleCall)cTargetPointAssignment_8_1_0_2_0_1_0_2.eContents().get(0);
		private final Assignment cTargetPointAssignment_8_1_0_2_0_1_1 = (Assignment)cAlternatives_8_1_0_2_0_1.eContents().get(1);
		private final RuleCall cTargetPointEmptyKPointParserRuleCall_8_1_0_2_0_1_1_0 = (RuleCall)cTargetPointAssignment_8_1_0_2_0_1_1.eContents().get(0);
		private final Group cGroup_8_1_0_2_1 = (Group)cAlternatives_8_1_0_2.eContents().get(1);
		private final Assignment cSourcePointAssignment_8_1_0_2_1_0 = (Assignment)cGroup_8_1_0_2_1.eContents().get(0);
		private final RuleCall cSourcePointEmptyKPointParserRuleCall_8_1_0_2_1_0_0 = (RuleCall)cSourcePointAssignment_8_1_0_2_1_0.eContents().get(0);
		private final Assignment cTargetPointAssignment_8_1_0_2_1_1 = (Assignment)cGroup_8_1_0_2_1.eContents().get(1);
		private final RuleCall cTargetPointEmptyKPointParserRuleCall_8_1_0_2_1_1_0 = (RuleCall)cTargetPointAssignment_8_1_0_2_1_1.eContents().get(0);
		private final Group cGroup_8_1_1 = (Group)cAlternatives_8_1.eContents().get(1);
		private final Assignment cSourcePointAssignment_8_1_1_0 = (Assignment)cGroup_8_1_1.eContents().get(0);
		private final RuleCall cSourcePointEmptyKPointParserRuleCall_8_1_1_0_0 = (RuleCall)cSourcePointAssignment_8_1_1_0.eContents().get(0);
		private final Assignment cTargetPointAssignment_8_1_1_1 = (Assignment)cGroup_8_1_1.eContents().get(1);
		private final RuleCall cTargetPointEmptyKPointParserRuleCall_8_1_1_1_0 = (RuleCall)cTargetPointAssignment_8_1_1_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cPropertiesKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Keyword cColonKeyword_8_2_1 = (Keyword)cGroup_8_2.eContents().get(1);
		private final Assignment cPersistentEntriesAssignment_8_2_2 = (Assignment)cGroup_8_2.eContents().get(2);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_8_2_2_0 = (RuleCall)cPersistentEntriesAssignment_8_2_2.eContents().get(0);
		private final Alternatives cAlternatives_8_3 = (Alternatives)cGroup_8.eContents().get(3);
		private final Assignment cLabelsAssignment_8_3_0 = (Assignment)cAlternatives_8_3.eContents().get(0);
		private final RuleCall cLabelsKLabelParserRuleCall_8_3_0_0 = (RuleCall)cLabelsAssignment_8_3_0.eContents().get(0);
		private final Assignment cDataAssignment_8_3_1 = (Assignment)cAlternatives_8_3.eContents().get(1);
		private final RuleCall cDataKRenderingParserRuleCall_8_3_1_0 = (RuleCall)cDataAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		
		//KEdge:
		//	'kedge' data+=KIdentifier? '(' (':' sourcePort=[KPort|QualifiedID])?
		//	'->' target=[KNode|QualifiedID] (':' targetPort=[KPort|QualifiedID])? ')' ('{' ('points' ':' (sourcePoint=KPoint (';'
		//	(bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint
		//	targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) ('properties' ':'
		//	persistentEntries+=Property*)? (labels+=KLabel | data+=KRendering)*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'kedge' data+=KIdentifier? '(' (':' sourcePort=[KPort|QualifiedID])? '->' target=[KNode|QualifiedID] (':'
		//targetPort=[KPort|QualifiedID])? ')' ('{' ('points' ':' (sourcePoint=KPoint (';' (bendPoints+=KPoint ';')*
		//targetPoint=KPoint | targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) |
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) ('properties' ':' persistentEntries+=Property*)? (labels+=KLabel |
		//data+=KRendering)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'kedge'
		public Keyword getKedgeKeyword_0() { return cKedgeKeyword_0; }
		
		//data+=KIdentifier?
		public Assignment getDataAssignment_1() { return cDataAssignment_1; }
		
		//KIdentifier
		public RuleCall getDataKIdentifierParserRuleCall_1_0() { return cDataKIdentifierParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(':' sourcePort=[KPort|QualifiedID])?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//sourcePort=[KPort|QualifiedID]
		public Assignment getSourcePortAssignment_3_1() { return cSourcePortAssignment_3_1; }
		
		//[KPort|QualifiedID]
		public CrossReference getSourcePortKPortCrossReference_3_1_0() { return cSourcePortKPortCrossReference_3_1_0; }
		
		//QualifiedID
		public RuleCall getSourcePortKPortQualifiedIDParserRuleCall_3_1_0_1() { return cSourcePortKPortQualifiedIDParserRuleCall_3_1_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }
		
		//target=[KNode|QualifiedID]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }
		
		//[KNode|QualifiedID]
		public CrossReference getTargetKNodeCrossReference_5_0() { return cTargetKNodeCrossReference_5_0; }
		
		//QualifiedID
		public RuleCall getTargetKNodeQualifiedIDParserRuleCall_5_0_1() { return cTargetKNodeQualifiedIDParserRuleCall_5_0_1; }
		
		//(':' targetPort=[KPort|QualifiedID])?
		public Group getGroup_6() { return cGroup_6; }
		
		//':'
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }
		
		//targetPort=[KPort|QualifiedID]
		public Assignment getTargetPortAssignment_6_1() { return cTargetPortAssignment_6_1; }
		
		//[KPort|QualifiedID]
		public CrossReference getTargetPortKPortCrossReference_6_1_0() { return cTargetPortKPortCrossReference_6_1_0; }
		
		//QualifiedID
		public RuleCall getTargetPortKPortQualifiedIDParserRuleCall_6_1_0_1() { return cTargetPortKPortQualifiedIDParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//('{' ('points' ':' (sourcePoint=KPoint (';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) |
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) ('properties' ':'
		//persistentEntries+=Property*)? (labels+=KLabel | data+=KRendering)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_0() { return cLeftCurlyBracketKeyword_8_0; }
		
		//('points' ':' (sourcePoint=KPoint (';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) |
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint targetPoint=EmptyKPoint)
		public Alternatives getAlternatives_8_1() { return cAlternatives_8_1; }
		
		//'points' ':' (sourcePoint=KPoint (';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) |
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint)
		public Group getGroup_8_1_0() { return cGroup_8_1_0; }
		
		//'points'
		public Keyword getPointsKeyword_8_1_0_0() { return cPointsKeyword_8_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_8_1_0_1() { return cColonKeyword_8_1_0_1; }
		
		//(sourcePoint=KPoint (';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) |
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint)
		public Alternatives getAlternatives_8_1_0_2() { return cAlternatives_8_1_0_2; }
		
		//sourcePoint=KPoint (';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint)
		public Group getGroup_8_1_0_2_0() { return cGroup_8_1_0_2_0; }
		
		//sourcePoint=KPoint
		public Assignment getSourcePointAssignment_8_1_0_2_0_0() { return cSourcePointAssignment_8_1_0_2_0_0; }
		
		//KPoint
		public RuleCall getSourcePointKPointParserRuleCall_8_1_0_2_0_0_0() { return cSourcePointKPointParserRuleCall_8_1_0_2_0_0_0; }
		
		//(';' (bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint)
		public Alternatives getAlternatives_8_1_0_2_0_1() { return cAlternatives_8_1_0_2_0_1; }
		
		//';' (bendPoints+=KPoint ';')* targetPoint=KPoint
		public Group getGroup_8_1_0_2_0_1_0() { return cGroup_8_1_0_2_0_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8_1_0_2_0_1_0_0() { return cSemicolonKeyword_8_1_0_2_0_1_0_0; }
		
		//(bendPoints+=KPoint ';')*
		public Group getGroup_8_1_0_2_0_1_0_1() { return cGroup_8_1_0_2_0_1_0_1; }
		
		//bendPoints+=KPoint
		public Assignment getBendPointsAssignment_8_1_0_2_0_1_0_1_0() { return cBendPointsAssignment_8_1_0_2_0_1_0_1_0; }
		
		//KPoint
		public RuleCall getBendPointsKPointParserRuleCall_8_1_0_2_0_1_0_1_0_0() { return cBendPointsKPointParserRuleCall_8_1_0_2_0_1_0_1_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8_1_0_2_0_1_0_1_1() { return cSemicolonKeyword_8_1_0_2_0_1_0_1_1; }
		
		//targetPoint=KPoint
		public Assignment getTargetPointAssignment_8_1_0_2_0_1_0_2() { return cTargetPointAssignment_8_1_0_2_0_1_0_2; }
		
		//KPoint
		public RuleCall getTargetPointKPointParserRuleCall_8_1_0_2_0_1_0_2_0() { return cTargetPointKPointParserRuleCall_8_1_0_2_0_1_0_2_0; }
		
		//targetPoint=EmptyKPoint
		public Assignment getTargetPointAssignment_8_1_0_2_0_1_1() { return cTargetPointAssignment_8_1_0_2_0_1_1; }
		
		//EmptyKPoint
		public RuleCall getTargetPointEmptyKPointParserRuleCall_8_1_0_2_0_1_1_0() { return cTargetPointEmptyKPointParserRuleCall_8_1_0_2_0_1_1_0; }
		
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint
		public Group getGroup_8_1_0_2_1() { return cGroup_8_1_0_2_1; }
		
		//sourcePoint=EmptyKPoint
		public Assignment getSourcePointAssignment_8_1_0_2_1_0() { return cSourcePointAssignment_8_1_0_2_1_0; }
		
		//EmptyKPoint
		public RuleCall getSourcePointEmptyKPointParserRuleCall_8_1_0_2_1_0_0() { return cSourcePointEmptyKPointParserRuleCall_8_1_0_2_1_0_0; }
		
		//targetPoint=EmptyKPoint
		public Assignment getTargetPointAssignment_8_1_0_2_1_1() { return cTargetPointAssignment_8_1_0_2_1_1; }
		
		//EmptyKPoint
		public RuleCall getTargetPointEmptyKPointParserRuleCall_8_1_0_2_1_1_0() { return cTargetPointEmptyKPointParserRuleCall_8_1_0_2_1_1_0; }
		
		//sourcePoint=EmptyKPoint targetPoint=EmptyKPoint
		public Group getGroup_8_1_1() { return cGroup_8_1_1; }
		
		//sourcePoint=EmptyKPoint
		public Assignment getSourcePointAssignment_8_1_1_0() { return cSourcePointAssignment_8_1_1_0; }
		
		//EmptyKPoint
		public RuleCall getSourcePointEmptyKPointParserRuleCall_8_1_1_0_0() { return cSourcePointEmptyKPointParserRuleCall_8_1_1_0_0; }
		
		//targetPoint=EmptyKPoint
		public Assignment getTargetPointAssignment_8_1_1_1() { return cTargetPointAssignment_8_1_1_1; }
		
		//EmptyKPoint
		public RuleCall getTargetPointEmptyKPointParserRuleCall_8_1_1_1_0() { return cTargetPointEmptyKPointParserRuleCall_8_1_1_1_0; }
		
		//('properties' ':' persistentEntries+=Property*)?
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//'properties'
		public Keyword getPropertiesKeyword_8_2_0() { return cPropertiesKeyword_8_2_0; }
		
		//':'
		public Keyword getColonKeyword_8_2_1() { return cColonKeyword_8_2_1; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_8_2_2() { return cPersistentEntriesAssignment_8_2_2; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_8_2_2_0() { return cPersistentEntriesPropertyParserRuleCall_8_2_2_0; }
		
		//(labels+=KLabel | data+=KRendering)*
		public Alternatives getAlternatives_8_3() { return cAlternatives_8_3; }
		
		//labels+=KLabel
		public Assignment getLabelsAssignment_8_3_0() { return cLabelsAssignment_8_3_0; }
		
		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_8_3_0_0() { return cLabelsKLabelParserRuleCall_8_3_0_0; }
		
		//data+=KRendering
		public Assignment getDataAssignment_8_3_1() { return cDataAssignment_8_3_1; }
		
		//KRendering
		public RuleCall getDataKRenderingParserRuleCall_8_3_1_0() { return cDataKRenderingParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
	}
	public class KLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLabel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKLabelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKlabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataKIdentifierParserRuleCall_2_0 = (RuleCall)cDataAssignment_2.eContents().get(0);
		private final Assignment cTextAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTextSTRINGTerminalRuleCall_3_0 = (RuleCall)cTextAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cPosKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final Keyword cColonKeyword_4_1_0_1 = (Keyword)cGroup_4_1_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4_1_0_2 = (UnorderedGroup)cGroup_4_1_0.eContents().get(2);
		private final Group cGroup_4_1_0_2_0 = (Group)cUnorderedGroup_4_1_0_2.eContents().get(0);
		private final Keyword cXKeyword_4_1_0_2_0_0 = (Keyword)cGroup_4_1_0_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_0_2_0_1 = (Keyword)cGroup_4_1_0_2_0.eContents().get(1);
		private final Assignment cXposAssignment_4_1_0_2_0_2 = (Assignment)cGroup_4_1_0_2_0.eContents().get(2);
		private final RuleCall cXposFloatParserRuleCall_4_1_0_2_0_2_0 = (RuleCall)cXposAssignment_4_1_0_2_0_2.eContents().get(0);
		private final Group cGroup_4_1_0_2_1 = (Group)cUnorderedGroup_4_1_0_2.eContents().get(1);
		private final Keyword cYKeyword_4_1_0_2_1_0 = (Keyword)cGroup_4_1_0_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_0_2_1_1 = (Keyword)cGroup_4_1_0_2_1.eContents().get(1);
		private final Assignment cYposAssignment_4_1_0_2_1_2 = (Assignment)cGroup_4_1_0_2_1.eContents().get(2);
		private final RuleCall cYposFloatParserRuleCall_4_1_0_2_1_2_0 = (RuleCall)cYposAssignment_4_1_0_2_1_2.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cUnorderedGroup_4_1.eContents().get(1);
		private final Keyword cSizeKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Keyword cColonKeyword_4_1_1_1 = (Keyword)cGroup_4_1_1.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4_1_1_2 = (UnorderedGroup)cGroup_4_1_1.eContents().get(2);
		private final Group cGroup_4_1_1_2_0 = (Group)cUnorderedGroup_4_1_1_2.eContents().get(0);
		private final Keyword cWidthKeyword_4_1_1_2_0_0 = (Keyword)cGroup_4_1_1_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1_2_0_1 = (Keyword)cGroup_4_1_1_2_0.eContents().get(1);
		private final Assignment cWidthAssignment_4_1_1_2_0_2 = (Assignment)cGroup_4_1_1_2_0.eContents().get(2);
		private final RuleCall cWidthFloatParserRuleCall_4_1_1_2_0_2_0 = (RuleCall)cWidthAssignment_4_1_1_2_0_2.eContents().get(0);
		private final Group cGroup_4_1_1_2_1 = (Group)cUnorderedGroup_4_1_1_2.eContents().get(1);
		private final Keyword cHeightKeyword_4_1_1_2_1_0 = (Keyword)cGroup_4_1_1_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1_2_1_1 = (Keyword)cGroup_4_1_1_2_1.eContents().get(1);
		private final Assignment cHeightAssignment_4_1_1_2_1_2 = (Assignment)cGroup_4_1_1_2_1.eContents().get(2);
		private final RuleCall cHeightFloatParserRuleCall_4_1_1_2_1_2_0 = (RuleCall)cHeightAssignment_4_1_1_2_1_2.eContents().get(0);
		private final Group cGroup_4_1_2 = (Group)cUnorderedGroup_4_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_4_1_2_0 = (Keyword)cGroup_4_1_2.eContents().get(0);
		private final Keyword cColonKeyword_4_1_2_1 = (Keyword)cGroup_4_1_2.eContents().get(1);
		private final Assignment cPersistentEntriesAssignment_4_1_2_2 = (Assignment)cGroup_4_1_2.eContents().get(2);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_4_1_2_2_0 = (RuleCall)cPersistentEntriesAssignment_4_1_2_2.eContents().get(0);
		private final Assignment cDataAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDataKRenderingParserRuleCall_4_2_0 = (RuleCall)cDataAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//KLabel:
		//	{KLabel}
		//	'klabel' data+=KIdentifier? text=STRING? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		//	& ('properties' ':' persistentEntries+=Property*)?) data+=KRendering*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KLabel} 'klabel' data+=KIdentifier? text=STRING? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? &
		//('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))? & ('properties' ':'
		//persistentEntries+=Property*)?) data+=KRendering* '}')?
		public Group getGroup() { return cGroup; }
		
		//{KLabel}
		public Action getKLabelAction_0() { return cKLabelAction_0; }
		
		//'klabel'
		public Keyword getKlabelKeyword_1() { return cKlabelKeyword_1; }
		
		//data+=KIdentifier?
		public Assignment getDataAssignment_2() { return cDataAssignment_2; }
		
		//KIdentifier
		public RuleCall getDataKIdentifierParserRuleCall_2_0() { return cDataKIdentifierParserRuleCall_2_0; }
		
		//text=STRING?
		public Assignment getTextAssignment_3() { return cTextAssignment_3; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_3_0() { return cTextSTRINGTerminalRuleCall_3_0; }
		
		//('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height'
		//'=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?) data+=KRendering* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//(('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height' '='
		//height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }
		
		//('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }
		
		//'pos'
		public Keyword getPosKeyword_4_1_0_0() { return cPosKeyword_4_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_4_1_0_1() { return cColonKeyword_4_1_0_1; }
		
		//(('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?)
		public UnorderedGroup getUnorderedGroup_4_1_0_2() { return cUnorderedGroup_4_1_0_2; }
		
		//('x' '=' xpos=Float)?
		public Group getGroup_4_1_0_2_0() { return cGroup_4_1_0_2_0; }
		
		//'x'
		public Keyword getXKeyword_4_1_0_2_0_0() { return cXKeyword_4_1_0_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_0_2_0_1() { return cEqualsSignKeyword_4_1_0_2_0_1; }
		
		//xpos=Float
		public Assignment getXposAssignment_4_1_0_2_0_2() { return cXposAssignment_4_1_0_2_0_2; }
		
		//Float
		public RuleCall getXposFloatParserRuleCall_4_1_0_2_0_2_0() { return cXposFloatParserRuleCall_4_1_0_2_0_2_0; }
		
		//('y' '=' ypos=Float)?
		public Group getGroup_4_1_0_2_1() { return cGroup_4_1_0_2_1; }
		
		//'y'
		public Keyword getYKeyword_4_1_0_2_1_0() { return cYKeyword_4_1_0_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_0_2_1_1() { return cEqualsSignKeyword_4_1_0_2_1_1; }
		
		//ypos=Float
		public Assignment getYposAssignment_4_1_0_2_1_2() { return cYposAssignment_4_1_0_2_1_2; }
		
		//Float
		public RuleCall getYposFloatParserRuleCall_4_1_0_2_1_2_0() { return cYposFloatParserRuleCall_4_1_0_2_1_2_0; }
		
		//('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//'size'
		public Keyword getSizeKeyword_4_1_1_0() { return cSizeKeyword_4_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_4_1_1_1() { return cColonKeyword_4_1_1_1; }
		
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?)
		public UnorderedGroup getUnorderedGroup_4_1_1_2() { return cUnorderedGroup_4_1_1_2; }
		
		//('width' '=' width=Float)?
		public Group getGroup_4_1_1_2_0() { return cGroup_4_1_1_2_0; }
		
		//'width'
		public Keyword getWidthKeyword_4_1_1_2_0_0() { return cWidthKeyword_4_1_1_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1_2_0_1() { return cEqualsSignKeyword_4_1_1_2_0_1; }
		
		//width=Float
		public Assignment getWidthAssignment_4_1_1_2_0_2() { return cWidthAssignment_4_1_1_2_0_2; }
		
		//Float
		public RuleCall getWidthFloatParserRuleCall_4_1_1_2_0_2_0() { return cWidthFloatParserRuleCall_4_1_1_2_0_2_0; }
		
		//('height' '=' height=Float)?
		public Group getGroup_4_1_1_2_1() { return cGroup_4_1_1_2_1; }
		
		//'height'
		public Keyword getHeightKeyword_4_1_1_2_1_0() { return cHeightKeyword_4_1_1_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1_2_1_1() { return cEqualsSignKeyword_4_1_1_2_1_1; }
		
		//height=Float
		public Assignment getHeightAssignment_4_1_1_2_1_2() { return cHeightAssignment_4_1_1_2_1_2; }
		
		//Float
		public RuleCall getHeightFloatParserRuleCall_4_1_1_2_1_2_0() { return cHeightFloatParserRuleCall_4_1_1_2_1_2_0; }
		
		//('properties' ':' persistentEntries+=Property*)?
		public Group getGroup_4_1_2() { return cGroup_4_1_2; }
		
		//'properties'
		public Keyword getPropertiesKeyword_4_1_2_0() { return cPropertiesKeyword_4_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_4_1_2_1() { return cColonKeyword_4_1_2_1; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_4_1_2_2() { return cPersistentEntriesAssignment_4_1_2_2; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_4_1_2_2_0() { return cPersistentEntriesPropertyParserRuleCall_4_1_2_2_0; }
		
		//data+=KRendering*
		public Assignment getDataAssignment_4_2() { return cDataAssignment_4_2; }
		
		//KRendering
		public RuleCall getDataKRenderingParserRuleCall_4_2_0() { return cDataKRenderingParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class KPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataKIdentifierParserRuleCall_2_0 = (RuleCall)cDataAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cPosKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3_1_0_2 = (UnorderedGroup)cGroup_3_1_0.eContents().get(2);
		private final Group cGroup_3_1_0_2_0 = (Group)cUnorderedGroup_3_1_0_2.eContents().get(0);
		private final Keyword cXKeyword_3_1_0_2_0_0 = (Keyword)cGroup_3_1_0_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_0_2_0_1 = (Keyword)cGroup_3_1_0_2_0.eContents().get(1);
		private final Assignment cXposAssignment_3_1_0_2_0_2 = (Assignment)cGroup_3_1_0_2_0.eContents().get(2);
		private final RuleCall cXposFloatParserRuleCall_3_1_0_2_0_2_0 = (RuleCall)cXposAssignment_3_1_0_2_0_2.eContents().get(0);
		private final Group cGroup_3_1_0_2_1 = (Group)cUnorderedGroup_3_1_0_2.eContents().get(1);
		private final Keyword cYKeyword_3_1_0_2_1_0 = (Keyword)cGroup_3_1_0_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_0_2_1_1 = (Keyword)cGroup_3_1_0_2_1.eContents().get(1);
		private final Assignment cYposAssignment_3_1_0_2_1_2 = (Assignment)cGroup_3_1_0_2_1.eContents().get(2);
		private final RuleCall cYposFloatParserRuleCall_3_1_0_2_1_2_0 = (RuleCall)cYposAssignment_3_1_0_2_1_2.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cSizeKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_1 = (Keyword)cGroup_3_1_1.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3_1_1_2 = (UnorderedGroup)cGroup_3_1_1.eContents().get(2);
		private final Group cGroup_3_1_1_2_0 = (Group)cUnorderedGroup_3_1_1_2.eContents().get(0);
		private final Keyword cWidthKeyword_3_1_1_2_0_0 = (Keyword)cGroup_3_1_1_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1_2_0_1 = (Keyword)cGroup_3_1_1_2_0.eContents().get(1);
		private final Assignment cWidthAssignment_3_1_1_2_0_2 = (Assignment)cGroup_3_1_1_2_0.eContents().get(2);
		private final RuleCall cWidthFloatParserRuleCall_3_1_1_2_0_2_0 = (RuleCall)cWidthAssignment_3_1_1_2_0_2.eContents().get(0);
		private final Group cGroup_3_1_1_2_1 = (Group)cUnorderedGroup_3_1_1_2.eContents().get(1);
		private final Keyword cHeightKeyword_3_1_1_2_1_0 = (Keyword)cGroup_3_1_1_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1_2_1_1 = (Keyword)cGroup_3_1_1_2_1.eContents().get(1);
		private final Assignment cHeightAssignment_3_1_1_2_1_2 = (Assignment)cGroup_3_1_1_2_1.eContents().get(2);
		private final RuleCall cHeightFloatParserRuleCall_3_1_1_2_1_2_0 = (RuleCall)cHeightAssignment_3_1_1_2_1_2.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Keyword cColonKeyword_3_1_2_1 = (Keyword)cGroup_3_1_2.eContents().get(1);
		private final Assignment cPersistentEntriesAssignment_3_1_2_2 = (Assignment)cGroup_3_1_2.eContents().get(2);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_3_1_2_2_0 = (RuleCall)cPersistentEntriesAssignment_3_1_2_2.eContents().get(0);
		private final Alternatives cAlternatives_3_2 = (Alternatives)cGroup_3.eContents().get(2);
		private final Assignment cLabelsAssignment_3_2_0 = (Assignment)cAlternatives_3_2.eContents().get(0);
		private final RuleCall cLabelsKLabelParserRuleCall_3_2_0_0 = (RuleCall)cLabelsAssignment_3_2_0.eContents().get(0);
		private final Assignment cDataAssignment_3_2_1 = (Assignment)cAlternatives_3_2.eContents().get(1);
		private final RuleCall cDataKRenderingParserRuleCall_3_2_1_0 = (RuleCall)cDataAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//KPort:
		//	{KPort}
		//	'kport' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		//	& ('properties' ':' persistentEntries+=Property*)?) (labels+=KLabel | data+=KRendering)*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KPort} 'kport' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':'
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		//(labels+=KLabel | data+=KRendering)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{KPort}
		public Action getKPortAction_0() { return cKPortAction_0; }
		
		//'kport'
		public Keyword getKportKeyword_1() { return cKportKeyword_1; }
		
		//data+=KIdentifier?
		public Assignment getDataAssignment_2() { return cDataAssignment_2; }
		
		//KIdentifier
		public RuleCall getDataKIdentifierParserRuleCall_2_0() { return cDataKIdentifierParserRuleCall_2_0; }
		
		//('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height'
		//'=' height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?) (labels+=KLabel | data+=KRendering)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))? & ('size' ':' (('width' '=' width=Float)? & ('height' '='
		//height=Float)?))? & ('properties' ':' persistentEntries+=Property*)?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'pos'
		public Keyword getPosKeyword_3_1_0_0() { return cPosKeyword_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_0_1() { return cColonKeyword_3_1_0_1; }
		
		//(('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?)
		public UnorderedGroup getUnorderedGroup_3_1_0_2() { return cUnorderedGroup_3_1_0_2; }
		
		//('x' '=' xpos=Float)?
		public Group getGroup_3_1_0_2_0() { return cGroup_3_1_0_2_0; }
		
		//'x'
		public Keyword getXKeyword_3_1_0_2_0_0() { return cXKeyword_3_1_0_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0_2_0_1() { return cEqualsSignKeyword_3_1_0_2_0_1; }
		
		//xpos=Float
		public Assignment getXposAssignment_3_1_0_2_0_2() { return cXposAssignment_3_1_0_2_0_2; }
		
		//Float
		public RuleCall getXposFloatParserRuleCall_3_1_0_2_0_2_0() { return cXposFloatParserRuleCall_3_1_0_2_0_2_0; }
		
		//('y' '=' ypos=Float)?
		public Group getGroup_3_1_0_2_1() { return cGroup_3_1_0_2_1; }
		
		//'y'
		public Keyword getYKeyword_3_1_0_2_1_0() { return cYKeyword_3_1_0_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0_2_1_1() { return cEqualsSignKeyword_3_1_0_2_1_1; }
		
		//ypos=Float
		public Assignment getYposAssignment_3_1_0_2_1_2() { return cYposAssignment_3_1_0_2_1_2; }
		
		//Float
		public RuleCall getYposFloatParserRuleCall_3_1_0_2_1_2_0() { return cYposFloatParserRuleCall_3_1_0_2_1_2_0; }
		
		//('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'size'
		public Keyword getSizeKeyword_3_1_1_0() { return cSizeKeyword_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1() { return cColonKeyword_3_1_1_1; }
		
		//(('width' '=' width=Float)? & ('height' '=' height=Float)?)
		public UnorderedGroup getUnorderedGroup_3_1_1_2() { return cUnorderedGroup_3_1_1_2; }
		
		//('width' '=' width=Float)?
		public Group getGroup_3_1_1_2_0() { return cGroup_3_1_1_2_0; }
		
		//'width'
		public Keyword getWidthKeyword_3_1_1_2_0_0() { return cWidthKeyword_3_1_1_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1_2_0_1() { return cEqualsSignKeyword_3_1_1_2_0_1; }
		
		//width=Float
		public Assignment getWidthAssignment_3_1_1_2_0_2() { return cWidthAssignment_3_1_1_2_0_2; }
		
		//Float
		public RuleCall getWidthFloatParserRuleCall_3_1_1_2_0_2_0() { return cWidthFloatParserRuleCall_3_1_1_2_0_2_0; }
		
		//('height' '=' height=Float)?
		public Group getGroup_3_1_1_2_1() { return cGroup_3_1_1_2_1; }
		
		//'height'
		public Keyword getHeightKeyword_3_1_1_2_1_0() { return cHeightKeyword_3_1_1_2_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1_2_1_1() { return cEqualsSignKeyword_3_1_1_2_1_1; }
		
		//height=Float
		public Assignment getHeightAssignment_3_1_1_2_1_2() { return cHeightAssignment_3_1_1_2_1_2; }
		
		//Float
		public RuleCall getHeightFloatParserRuleCall_3_1_1_2_1_2_0() { return cHeightFloatParserRuleCall_3_1_1_2_1_2_0; }
		
		//('properties' ':' persistentEntries+=Property*)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//'properties'
		public Keyword getPropertiesKeyword_3_1_2_0() { return cPropertiesKeyword_3_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_2_1() { return cColonKeyword_3_1_2_1; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_3_1_2_2() { return cPersistentEntriesAssignment_3_1_2_2; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_3_1_2_2_0() { return cPersistentEntriesPropertyParserRuleCall_3_1_2_2_0; }
		
		//(labels+=KLabel | data+=KRendering)*
		public Alternatives getAlternatives_3_2() { return cAlternatives_3_2; }
		
		//labels+=KLabel
		public Assignment getLabelsAssignment_3_2_0() { return cLabelsAssignment_3_2_0; }
		
		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_3_2_0_0() { return cLabelsKLabelParserRuleCall_3_2_0_0; }
		
		//data+=KRendering
		public Assignment getDataAssignment_3_2_1() { return cDataAssignment_3_2_1; }
		
		//KRendering
		public RuleCall getDataKRenderingParserRuleCall_3_2_1_0() { return cDataKRenderingParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyQualifiedIDParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePropertyValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////-------------- KLayoutData ---------------
		//Property PersistentEntry:
		//	key=QualifiedID '=' value=PropertyValue
		@Override public ParserRule getRule() { return rule; }
		
		//key=QualifiedID '=' value=PropertyValue
		public Group getGroup() { return cGroup; }
		
		//key=QualifiedID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//QualifiedID
		public RuleCall getKeyQualifiedIDParserRuleCall_0_0() { return cKeyQualifiedIDParserRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=PropertyValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PropertyValue
		public RuleCall getValuePropertyValueParserRuleCall_2_0() { return cValuePropertyValueParserRuleCall_2_0; }
	}
	public class KIdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KIdentifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdQualifiedIDParserRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_1_1_0 = (RuleCall)cPersistentEntriesAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//KIdentifier:
		//	id=QualifiedID ('[' persistentEntries+=Property* ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//id=QualifiedID ('[' persistentEntries+=Property* ']')?
		public Group getGroup() { return cGroup; }
		
		//id=QualifiedID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//QualifiedID
		public RuleCall getIdQualifiedIDParserRuleCall_0_0() { return cIdQualifiedIDParserRuleCall_0_0; }
		
		//('[' persistentEntries+=Property* ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_1_1() { return cPersistentEntriesAssignment_1_1; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_1_1_0() { return cPersistentEntriesPropertyParserRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class KInsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KInsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKInsetsAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTopKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cTopAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cTopFloatParserRuleCall_1_0_2_0 = (RuleCall)cTopAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cBottomKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cBottomAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cBottomFloatParserRuleCall_1_1_2_0 = (RuleCall)cBottomAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cLeftKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cLeftAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cLeftFloatParserRuleCall_1_2_2_0 = (RuleCall)cLeftAssignment_1_2_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cRightKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cRightAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cRightFloatParserRuleCall_1_3_2_0 = (RuleCall)cRightAssignment_1_3_2.eContents().get(0);
		
		//KInsets:
		//	{KInsets} (('top' '=' top=Float)? & ('bottom' '=' bottom=Float)?
		//	& ('left' '=' left=Float)? & ('right' '=' right=Float)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KInsets} (('top' '=' top=Float)? & ('bottom' '=' bottom=Float)? & ('left' '=' left=Float)? & ('right' '='
		//right=Float)?)
		public Group getGroup() { return cGroup; }
		
		//{KInsets}
		public Action getKInsetsAction_0() { return cKInsetsAction_0; }
		
		//(('top' '=' top=Float)? & ('bottom' '=' bottom=Float)? & ('left' '=' left=Float)? & ('right' '=' right=Float)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('top' '=' top=Float)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'top'
		public Keyword getTopKeyword_1_0_0() { return cTopKeyword_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_0_1() { return cEqualsSignKeyword_1_0_1; }
		
		//top=Float
		public Assignment getTopAssignment_1_0_2() { return cTopAssignment_1_0_2; }
		
		//Float
		public RuleCall getTopFloatParserRuleCall_1_0_2_0() { return cTopFloatParserRuleCall_1_0_2_0; }
		
		//('bottom' '=' bottom=Float)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'bottom'
		public Keyword getBottomKeyword_1_1_0() { return cBottomKeyword_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1_1() { return cEqualsSignKeyword_1_1_1; }
		
		//bottom=Float
		public Assignment getBottomAssignment_1_1_2() { return cBottomAssignment_1_1_2; }
		
		//Float
		public RuleCall getBottomFloatParserRuleCall_1_1_2_0() { return cBottomFloatParserRuleCall_1_1_2_0; }
		
		//('left' '=' left=Float)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'left'
		public Keyword getLeftKeyword_1_2_0() { return cLeftKeyword_1_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_2_1() { return cEqualsSignKeyword_1_2_1; }
		
		//left=Float
		public Assignment getLeftAssignment_1_2_2() { return cLeftAssignment_1_2_2; }
		
		//Float
		public RuleCall getLeftFloatParserRuleCall_1_2_2_0() { return cLeftFloatParserRuleCall_1_2_2_0; }
		
		//('right' '=' right=Float)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'right'
		public Keyword getRightKeyword_1_3_0() { return cRightKeyword_1_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_3_1() { return cEqualsSignKeyword_1_3_1; }
		
		//right=Float
		public Assignment getRightAssignment_1_3_2() { return cRightAssignment_1_3_2; }
		
		//Float
		public RuleCall getRightFloatParserRuleCall_1_3_2_0() { return cRightFloatParserRuleCall_1_3_2_0; }
	}
	public class EmptyKInsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.EmptyKInsets");
		private final Action cKInsetsAction = (Action)rule.eContents().get(1);
		
		//EmptyKInsets KInsets:
		//	{KInsets}
		@Override public ParserRule getRule() { return rule; }
		
		//{KInsets}
		public Action getKInsetsAction() { return cKInsetsAction; }
	}
	public class KPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cXFloatParserRuleCall_0_0 = (RuleCall)cXAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cYAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYFloatParserRuleCall_2_0 = (RuleCall)cYAssignment_2.eContents().get(0);
		
		//KPoint:
		//	x=Float ',' y=Float;
		@Override public ParserRule getRule() { return rule; }
		
		//x=Float ',' y=Float
		public Group getGroup() { return cGroup; }
		
		//x=Float
		public Assignment getXAssignment_0() { return cXAssignment_0; }
		
		//Float
		public RuleCall getXFloatParserRuleCall_0_0() { return cXFloatParserRuleCall_0_0; }
		
		//','
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
		
		//y=Float
		public Assignment getYAssignment_2() { return cYAssignment_2; }
		
		//Float
		public RuleCall getYFloatParserRuleCall_2_0() { return cYFloatParserRuleCall_2_0; }
	}
	public class EmptyKPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.EmptyKPoint");
		private final Action cKPointAction = (Action)rule.eContents().get(1);
		
		//EmptyKPoint KPoint:
		//	{KPoint}
		@Override public ParserRule getRule() { return rule; }
		
		//{KPoint}
		public Action getKPointAction() { return cKPointAction; }
	}
	public class KRenderingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRendering");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cKSimpleRenderingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKContainerRenderingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKPolylineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////--------------- KRendering ---------------
		//KRendering:
		//	KSimpleRendering | KContainerRendering | KPolyline;
		@Override public ParserRule getRule() { return rule; }
		
		//KSimpleRendering | KContainerRendering | KPolyline
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//KSimpleRendering
		public RuleCall getKSimpleRenderingParserRuleCall_0() { return cKSimpleRenderingParserRuleCall_0; }
		
		//KContainerRendering
		public RuleCall getKContainerRenderingParserRuleCall_1() { return cKContainerRenderingParserRuleCall_1; }
		
		//KPolyline
		public RuleCall getKPolylineParserRuleCall_2() { return cKPolylineParserRuleCall_2; }
	}
	public class KSimpleRenderingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KSimpleRendering");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKRenderingRefParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKChildAreaParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cKTextParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdQualifiedIDParserRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_2_1_0 = (RuleCall)cPersistentEntriesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cStylesKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final Assignment cStylesAssignment_3_1_0_2 = (Assignment)cGroup_3_1_0.eContents().get(2);
		private final RuleCall cStylesKStyleParserRuleCall_3_1_0_2_0 = (RuleCall)cStylesAssignment_3_1_0_2.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cActionsKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_1 = (Keyword)cGroup_3_1_1.eContents().get(1);
		private final Assignment cActionsAssignment_3_1_1_2 = (Assignment)cGroup_3_1_1.eContents().get(2);
		private final RuleCall cActionsKActionParserRuleCall_3_1_1_2_0 = (RuleCall)cActionsAssignment_3_1_1_2.eContents().get(0);
		private final Assignment cPlacementDataAssignment_3_1_2 = (Assignment)cUnorderedGroup_3_1.eContents().get(2);
		private final RuleCall cPlacementDataKPlacementDataParserRuleCall_3_1_2_0 = (RuleCall)cPlacementDataAssignment_3_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//KSimpleRendering KRendering:
		//	(KRenderingRef | KChildArea | KText) id=QualifiedID? ('[' persistentEntries+=Property* ']')? ('{' (('styles' ':'
		//	styles+=KStyle*)?
		//	& ('actions' ':' actions+=KAction*)?
		//	& placementData=KPlacementData?)
		//	'}')?
		@Override public ParserRule getRule() { return rule; }
		
		//(KRenderingRef | KChildArea | KText) id=QualifiedID? ('[' persistentEntries+=Property* ']')? ('{' (('styles' ':'
		//styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? & placementData=KPlacementData?) '}')?
		public Group getGroup() { return cGroup; }
		
		//(KRenderingRef | KChildArea | KText)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KRenderingRef
		public RuleCall getKRenderingRefParserRuleCall_0_0() { return cKRenderingRefParserRuleCall_0_0; }
		
		//KChildArea
		public RuleCall getKChildAreaParserRuleCall_0_1() { return cKChildAreaParserRuleCall_0_1; }
		
		//KText
		public RuleCall getKTextParserRuleCall_0_2() { return cKTextParserRuleCall_0_2; }
		
		//id=QualifiedID?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//QualifiedID
		public RuleCall getIdQualifiedIDParserRuleCall_1_0() { return cIdQualifiedIDParserRuleCall_1_0; }
		
		//('[' persistentEntries+=Property* ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_2_1() { return cPersistentEntriesAssignment_2_1; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_2_1_0() { return cPersistentEntriesPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//('{' (('styles' ':' styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? & placementData=KPlacementData?) '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(('styles' ':' styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? & placementData=KPlacementData?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('styles' ':' styles+=KStyle*)?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'styles'
		public Keyword getStylesKeyword_3_1_0_0() { return cStylesKeyword_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_0_1() { return cColonKeyword_3_1_0_1; }
		
		//styles+=KStyle*
		public Assignment getStylesAssignment_3_1_0_2() { return cStylesAssignment_3_1_0_2; }
		
		//KStyle
		public RuleCall getStylesKStyleParserRuleCall_3_1_0_2_0() { return cStylesKStyleParserRuleCall_3_1_0_2_0; }
		
		//('actions' ':' actions+=KAction*)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'actions'
		public Keyword getActionsKeyword_3_1_1_0() { return cActionsKeyword_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1() { return cColonKeyword_3_1_1_1; }
		
		//actions+=KAction*
		public Assignment getActionsAssignment_3_1_1_2() { return cActionsAssignment_3_1_1_2; }
		
		//KAction
		public RuleCall getActionsKActionParserRuleCall_3_1_1_2_0() { return cActionsKActionParserRuleCall_3_1_1_2_0; }
		
		//placementData=KPlacementData?
		public Assignment getPlacementDataAssignment_3_1_2() { return cPlacementDataAssignment_3_1_2; }
		
		//KPlacementData
		public RuleCall getPlacementDataKPlacementDataParserRuleCall_3_1_2_0() { return cPlacementDataKPlacementDataParserRuleCall_3_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}
	public class KContainerRenderingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KContainerRendering");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKRectangleParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKRoundedRectangleParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cKEllipseParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cKArcParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final RuleCall cKCustomRenderingParserRuleCall_0_4 = (RuleCall)cAlternatives_0.eContents().get(4);
		private final RuleCall cKImageParserRuleCall_0_5 = (RuleCall)cAlternatives_0.eContents().get(5);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdQualifiedIDParserRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_2_1_0 = (RuleCall)cPersistentEntriesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cStylesKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final Assignment cStylesAssignment_3_1_0_2 = (Assignment)cGroup_3_1_0.eContents().get(2);
		private final RuleCall cStylesKStyleParserRuleCall_3_1_0_2_0 = (RuleCall)cStylesAssignment_3_1_0_2.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cActionsKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_1 = (Keyword)cGroup_3_1_1.eContents().get(1);
		private final Assignment cActionsAssignment_3_1_1_2 = (Assignment)cGroup_3_1_1.eContents().get(2);
		private final RuleCall cActionsKActionParserRuleCall_3_1_1_2_0 = (RuleCall)cActionsAssignment_3_1_1_2.eContents().get(0);
		private final Assignment cPlacementDataAssignment_3_1_2 = (Assignment)cUnorderedGroup_3_1.eContents().get(2);
		private final RuleCall cPlacementDataKPlacementDataParserRuleCall_3_1_2_0 = (RuleCall)cPlacementDataAssignment_3_1_2.eContents().get(0);
		private final Assignment cChildPlacementAssignment_3_1_3 = (Assignment)cUnorderedGroup_3_1.eContents().get(3);
		private final RuleCall cChildPlacementKPlacementParserRuleCall_3_1_3_0 = (RuleCall)cChildPlacementAssignment_3_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cChildrenKRenderingParserRuleCall_3_2_0 = (RuleCall)cChildrenAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//KContainerRendering:
		//	(KRectangle | KRoundedRectangle | KEllipse | KArc | KCustomRendering | KImage) id=QualifiedID? ('['
		//	persistentEntries+=Property* ']')? ('{' (('styles' ':' styles+=KStyle*)?
		//	& ('actions' ':' actions+=KAction*)?
		//	& placementData=KPlacementData?
		//	& childPlacement=KPlacement?) children+=KRendering*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(KRectangle | KRoundedRectangle | KEllipse | KArc | KCustomRendering | KImage) id=QualifiedID? ('['
		//persistentEntries+=Property* ']')? ('{' (('styles' ':' styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? &
		//placementData=KPlacementData? & childPlacement=KPlacement?) children+=KRendering* '}')?
		public Group getGroup() { return cGroup; }
		
		//(KRectangle | KRoundedRectangle | KEllipse | KArc | KCustomRendering | KImage)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KRectangle
		public RuleCall getKRectangleParserRuleCall_0_0() { return cKRectangleParserRuleCall_0_0; }
		
		//KRoundedRectangle
		public RuleCall getKRoundedRectangleParserRuleCall_0_1() { return cKRoundedRectangleParserRuleCall_0_1; }
		
		//KEllipse
		public RuleCall getKEllipseParserRuleCall_0_2() { return cKEllipseParserRuleCall_0_2; }
		
		//KArc
		public RuleCall getKArcParserRuleCall_0_3() { return cKArcParserRuleCall_0_3; }
		
		//KCustomRendering
		public RuleCall getKCustomRenderingParserRuleCall_0_4() { return cKCustomRenderingParserRuleCall_0_4; }
		
		//KImage
		public RuleCall getKImageParserRuleCall_0_5() { return cKImageParserRuleCall_0_5; }
		
		//id=QualifiedID?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//QualifiedID
		public RuleCall getIdQualifiedIDParserRuleCall_1_0() { return cIdQualifiedIDParserRuleCall_1_0; }
		
		//('[' persistentEntries+=Property* ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_2_1() { return cPersistentEntriesAssignment_2_1; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_2_1_0() { return cPersistentEntriesPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//('{' (('styles' ':' styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? & placementData=KPlacementData? &
		//childPlacement=KPlacement?) children+=KRendering* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(('styles' ':' styles+=KStyle*)? & ('actions' ':' actions+=KAction*)? & placementData=KPlacementData? &
		//childPlacement=KPlacement?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('styles' ':' styles+=KStyle*)?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'styles'
		public Keyword getStylesKeyword_3_1_0_0() { return cStylesKeyword_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_0_1() { return cColonKeyword_3_1_0_1; }
		
		//styles+=KStyle*
		public Assignment getStylesAssignment_3_1_0_2() { return cStylesAssignment_3_1_0_2; }
		
		//KStyle
		public RuleCall getStylesKStyleParserRuleCall_3_1_0_2_0() { return cStylesKStyleParserRuleCall_3_1_0_2_0; }
		
		//('actions' ':' actions+=KAction*)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'actions'
		public Keyword getActionsKeyword_3_1_1_0() { return cActionsKeyword_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1() { return cColonKeyword_3_1_1_1; }
		
		//actions+=KAction*
		public Assignment getActionsAssignment_3_1_1_2() { return cActionsAssignment_3_1_1_2; }
		
		//KAction
		public RuleCall getActionsKActionParserRuleCall_3_1_1_2_0() { return cActionsKActionParserRuleCall_3_1_1_2_0; }
		
		//placementData=KPlacementData?
		public Assignment getPlacementDataAssignment_3_1_2() { return cPlacementDataAssignment_3_1_2; }
		
		//KPlacementData
		public RuleCall getPlacementDataKPlacementDataParserRuleCall_3_1_2_0() { return cPlacementDataKPlacementDataParserRuleCall_3_1_2_0; }
		
		//childPlacement=KPlacement?
		public Assignment getChildPlacementAssignment_3_1_3() { return cChildPlacementAssignment_3_1_3; }
		
		//KPlacement
		public RuleCall getChildPlacementKPlacementParserRuleCall_3_1_3_0() { return cChildPlacementKPlacementParserRuleCall_3_1_3_0; }
		
		//children+=KRendering*
		public Assignment getChildrenAssignment_3_2() { return cChildrenAssignment_3_2; }
		
		//KRendering
		public RuleCall getChildrenKRenderingParserRuleCall_3_2_0() { return cChildrenKRenderingParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class KRenderingRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRenderingRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKrenderingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRenderingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRenderingKRenderingCrossReference_2_0 = (CrossReference)cRenderingAssignment_2.eContents().get(0);
		private final RuleCall cRenderingKRenderingQualifiedIDParserRuleCall_2_0_1 = (RuleCall)cRenderingKRenderingCrossReference_2_0.eContents().get(1);
		
		//KRenderingRef:
		//	'krendering' '*' rendering=[KRendering|QualifiedID];
		@Override public ParserRule getRule() { return rule; }
		
		//'krendering' '*' rendering=[KRendering|QualifiedID]
		public Group getGroup() { return cGroup; }
		
		//'krendering'
		public Keyword getKrenderingKeyword_0() { return cKrenderingKeyword_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
		
		//rendering=[KRendering|QualifiedID]
		public Assignment getRenderingAssignment_2() { return cRenderingAssignment_2; }
		
		//[KRendering|QualifiedID]
		public CrossReference getRenderingKRenderingCrossReference_2_0() { return cRenderingKRenderingCrossReference_2_0; }
		
		//QualifiedID
		public RuleCall getRenderingKRenderingQualifiedIDParserRuleCall_2_0_1() { return cRenderingKRenderingQualifiedIDParserRuleCall_2_0_1; }
	}
	public class KChildAreaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KChildArea");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKChildAreaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKchildAreaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KChildArea:
		//	{KChildArea}
		//	'kchildArea';
		@Override public ParserRule getRule() { return rule; }
		
		//{KChildArea} 'kchildArea'
		public Group getGroup() { return cGroup; }
		
		//{KChildArea}
		public Action getKChildAreaAction_0() { return cKChildAreaAction_0; }
		
		//'kchildArea'
		public Keyword getKchildAreaKeyword_1() { return cKchildAreaKeyword_1; }
	}
	public class KTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KText");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKTextAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKtextKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTextAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cTextAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cCursorSelectableAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cCursorSelectableBOOLEANTerminalRuleCall_2_2_1_0 = (RuleCall)cCursorSelectableAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//KText:
		//	{KText}
		//	'ktext' ('(' text=STRING (',' cursorSelectable=BOOLEAN)? ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KText} 'ktext' ('(' text=STRING (',' cursorSelectable=BOOLEAN)? ')')?
		public Group getGroup() { return cGroup; }
		
		//{KText}
		public Action getKTextAction_0() { return cKTextAction_0; }
		
		//'ktext'
		public Keyword getKtextKeyword_1() { return cKtextKeyword_1; }
		
		//('(' text=STRING (',' cursorSelectable=BOOLEAN)? ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//text=STRING
		public Assignment getTextAssignment_2_1() { return cTextAssignment_2_1; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_1_0() { return cTextSTRINGTerminalRuleCall_2_1_0; }
		
		//(',' cursorSelectable=BOOLEAN)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//cursorSelectable=BOOLEAN
		public Assignment getCursorSelectableAssignment_2_2_1() { return cCursorSelectableAssignment_2_2_1; }
		
		//BOOLEAN
		public RuleCall getCursorSelectableBOOLEANTerminalRuleCall_2_2_1_0() { return cCursorSelectableBOOLEANTerminalRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}
	public class KRectangleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRectangle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKRectangleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKrectangleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KRectangle:
		//	{KRectangle}
		//	'krectangle';
		@Override public ParserRule getRule() { return rule; }
		
		//{KRectangle} 'krectangle'
		public Group getGroup() { return cGroup; }
		
		//{KRectangle}
		public Action getKRectangleAction_0() { return cKRectangleAction_0; }
		
		//'krectangle'
		public Keyword getKrectangleKeyword_1() { return cKrectangleKeyword_1; }
	}
	public class KRoundedRectangleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRoundedRectangle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKRoundedRectangleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKroundedRectangleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCornerWidthAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCornerWidthFloatParserRuleCall_2_1_0 = (RuleCall)cCornerWidthAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cCornerHeightAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cCornerHeightFloatParserRuleCall_2_3_0 = (RuleCall)cCornerHeightAssignment_2_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//KRoundedRectangle:
		//	{KRoundedRectangle}
		//	'kroundedRectangle' ('(' cornerWidth=Float ',' cornerHeight=Float ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KRoundedRectangle} 'kroundedRectangle' ('(' cornerWidth=Float ',' cornerHeight=Float ')')?
		public Group getGroup() { return cGroup; }
		
		//{KRoundedRectangle}
		public Action getKRoundedRectangleAction_0() { return cKRoundedRectangleAction_0; }
		
		//'kroundedRectangle'
		public Keyword getKroundedRectangleKeyword_1() { return cKroundedRectangleKeyword_1; }
		
		//('(' cornerWidth=Float ',' cornerHeight=Float ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//cornerWidth=Float
		public Assignment getCornerWidthAssignment_2_1() { return cCornerWidthAssignment_2_1; }
		
		//Float
		public RuleCall getCornerWidthFloatParserRuleCall_2_1_0() { return cCornerWidthFloatParserRuleCall_2_1_0; }
		
		//','
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }
		
		//cornerHeight=Float
		public Assignment getCornerHeightAssignment_2_3() { return cCornerHeightAssignment_2_3; }
		
		//Float
		public RuleCall getCornerHeightFloatParserRuleCall_2_3_0() { return cCornerHeightFloatParserRuleCall_2_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
	}
	public class KEllipseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KEllipse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKEllipseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKellipseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KEllipse:
		//	{KEllipse}
		//	'kellipse';
		@Override public ParserRule getRule() { return rule; }
		
		//{KEllipse} 'kellipse'
		public Group getGroup() { return cGroup; }
		
		//{KEllipse}
		public Action getKEllipseAction_0() { return cKEllipseAction_0; }
		
		//'kellipse'
		public Keyword getKellipseKeyword_1() { return cKellipseKeyword_1; }
	}
	public class KArcElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KArc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKArcAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKarcKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStartAngleAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStartAngleDEGREESTerminalRuleCall_2_1_0 = (RuleCall)cStartAngleAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cArcAngleAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cArcAngleDEGREESTerminalRuleCall_2_3_0 = (RuleCall)cArcAngleAssignment_2_3.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cGroup_2.eContents().get(4);
		private final Keyword cCommaKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cArcTypeAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cArcTypeArcEnumRuleCall_2_4_1_0 = (RuleCall)cArcTypeAssignment_2_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//KArc:
		//	{KArc}
		//	'karc' ('(' startAngle=DEGREES ',' arcAngle=DEGREES (',' arcType=Arc)? ')');
		@Override public ParserRule getRule() { return rule; }
		
		//{KArc} 'karc' ('(' startAngle=DEGREES ',' arcAngle=DEGREES (',' arcType=Arc)? ')')
		public Group getGroup() { return cGroup; }
		
		//{KArc}
		public Action getKArcAction_0() { return cKArcAction_0; }
		
		//'karc'
		public Keyword getKarcKeyword_1() { return cKarcKeyword_1; }
		
		//('(' startAngle=DEGREES ',' arcAngle=DEGREES (',' arcType=Arc)? ')')
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//startAngle=DEGREES
		public Assignment getStartAngleAssignment_2_1() { return cStartAngleAssignment_2_1; }
		
		//DEGREES
		public RuleCall getStartAngleDEGREESTerminalRuleCall_2_1_0() { return cStartAngleDEGREESTerminalRuleCall_2_1_0; }
		
		//','
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }
		
		//arcAngle=DEGREES
		public Assignment getArcAngleAssignment_2_3() { return cArcAngleAssignment_2_3; }
		
		//DEGREES
		public RuleCall getArcAngleDEGREESTerminalRuleCall_2_3_0() { return cArcAngleDEGREESTerminalRuleCall_2_3_0; }
		
		//(',' arcType=Arc)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//','
		public Keyword getCommaKeyword_2_4_0() { return cCommaKeyword_2_4_0; }
		
		//arcType=Arc
		public Assignment getArcTypeAssignment_2_4_1() { return cArcTypeAssignment_2_4_1; }
		
		//Arc
		public RuleCall getArcTypeArcEnumRuleCall_2_4_1_0() { return cArcTypeArcEnumRuleCall_2_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_5() { return cRightParenthesisKeyword_2_5; }
	}
	public class KCustomRenderingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KCustomRendering");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKCustomRenderingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKcustomRenderingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cBundleNameAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cBundleNameQualifiedIDParserRuleCall_2_1_0_0 = (RuleCall)cBundleNameAssignment_2_1_0.eContents().get(0);
		private final Keyword cColonKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cClassNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cClassNameQualifiedIDParserRuleCall_2_2_0 = (RuleCall)cClassNameAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//KCustomRendering:
		//	{KCustomRendering}
		//	'kcustomRendering' ('(' (bundleName=QualifiedID ':')? className=QualifiedID ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KCustomRendering} 'kcustomRendering' ('(' (bundleName=QualifiedID ':')? className=QualifiedID ')')?
		public Group getGroup() { return cGroup; }
		
		//{KCustomRendering}
		public Action getKCustomRenderingAction_0() { return cKCustomRenderingAction_0; }
		
		//'kcustomRendering'
		public Keyword getKcustomRenderingKeyword_1() { return cKcustomRenderingKeyword_1; }
		
		//('(' (bundleName=QualifiedID ':')? className=QualifiedID ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(bundleName=QualifiedID ':')?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//bundleName=QualifiedID
		public Assignment getBundleNameAssignment_2_1_0() { return cBundleNameAssignment_2_1_0; }
		
		//QualifiedID
		public RuleCall getBundleNameQualifiedIDParserRuleCall_2_1_0_0() { return cBundleNameQualifiedIDParserRuleCall_2_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_2_1_1() { return cColonKeyword_2_1_1; }
		
		//className=QualifiedID
		public Assignment getClassNameAssignment_2_2() { return cClassNameAssignment_2_2; }
		
		//QualifiedID
		public RuleCall getClassNameQualifiedIDParserRuleCall_2_2_0() { return cClassNameQualifiedIDParserRuleCall_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}
	public class KImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KImage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKImageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKimageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cBundleNameAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cBundleNameQualifiedIDParserRuleCall_2_1_0_0 = (RuleCall)cBundleNameAssignment_2_1_0.eContents().get(0);
		private final Keyword cColonKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cImagePathAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cImagePathSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cImagePathAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cClipShapeKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cClipShapeAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cClipShapeKRenderingParserRuleCall_2_3_1_0 = (RuleCall)cClipShapeAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//KImage:
		//	{KImage}
		//	'kimage' ('(' (bundleName=QualifiedID ':')? imagePath=STRING ('clipShape' clipShape=KRendering)? ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KImage} 'kimage' ('(' (bundleName=QualifiedID ':')? imagePath=STRING ('clipShape' clipShape=KRendering)? ')')?
		public Group getGroup() { return cGroup; }
		
		//{KImage}
		public Action getKImageAction_0() { return cKImageAction_0; }
		
		//'kimage'
		public Keyword getKimageKeyword_1() { return cKimageKeyword_1; }
		
		//('(' (bundleName=QualifiedID ':')? imagePath=STRING ('clipShape' clipShape=KRendering)? ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(bundleName=QualifiedID ':')?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//bundleName=QualifiedID
		public Assignment getBundleNameAssignment_2_1_0() { return cBundleNameAssignment_2_1_0; }
		
		//QualifiedID
		public RuleCall getBundleNameQualifiedIDParserRuleCall_2_1_0_0() { return cBundleNameQualifiedIDParserRuleCall_2_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_2_1_1() { return cColonKeyword_2_1_1; }
		
		//imagePath=STRING
		public Assignment getImagePathAssignment_2_2() { return cImagePathAssignment_2_2; }
		
		//STRING
		public RuleCall getImagePathSTRINGTerminalRuleCall_2_2_0() { return cImagePathSTRINGTerminalRuleCall_2_2_0; }
		
		//('clipShape' clipShape=KRendering)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'clipShape'
		public Keyword getClipShapeKeyword_2_3_0() { return cClipShapeKeyword_2_3_0; }
		
		//clipShape=KRendering
		public Assignment getClipShapeAssignment_2_3_1() { return cClipShapeAssignment_2_3_1; }
		
		//KRendering
		public RuleCall getClipShapeKRenderingParserRuleCall_2_3_1_0() { return cClipShapeKRenderingParserRuleCall_2_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
	}
	public class KPolylineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPolyline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKSimplePolylineParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKPolygonParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cKRoundedBendsPolylineParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cKSplineParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdQualifiedIDParserRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_2_1_0 = (RuleCall)cPersistentEntriesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cPointsKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final Group cGroup_3_1_0_2 = (Group)cGroup_3_1_0.eContents().get(2);
		private final Assignment cPointsAssignment_3_1_0_2_0 = (Assignment)cGroup_3_1_0_2.eContents().get(0);
		private final RuleCall cPointsKPositionParserRuleCall_3_1_0_2_0_0 = (RuleCall)cPointsAssignment_3_1_0_2_0.eContents().get(0);
		private final Group cGroup_3_1_0_2_1 = (Group)cGroup_3_1_0_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_1_0_2_1_0 = (Keyword)cGroup_3_1_0_2_1.eContents().get(0);
		private final Assignment cPointsAssignment_3_1_0_2_1_1 = (Assignment)cGroup_3_1_0_2_1.eContents().get(1);
		private final RuleCall cPointsKPositionParserRuleCall_3_1_0_2_1_1_0 = (RuleCall)cPointsAssignment_3_1_0_2_1_1.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cStylesKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_1 = (Keyword)cGroup_3_1_1.eContents().get(1);
		private final Assignment cStylesAssignment_3_1_1_2 = (Assignment)cGroup_3_1_1.eContents().get(2);
		private final RuleCall cStylesKStyleParserRuleCall_3_1_1_2_0 = (RuleCall)cStylesAssignment_3_1_1_2.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cActionsKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Keyword cColonKeyword_3_1_2_1 = (Keyword)cGroup_3_1_2.eContents().get(1);
		private final Assignment cActionsAssignment_3_1_2_2 = (Assignment)cGroup_3_1_2.eContents().get(2);
		private final RuleCall cActionsKActionParserRuleCall_3_1_2_2_0 = (RuleCall)cActionsAssignment_3_1_2_2.eContents().get(0);
		private final Assignment cPlacementDataAssignment_3_1_3 = (Assignment)cUnorderedGroup_3_1.eContents().get(3);
		private final RuleCall cPlacementDataKPlacementDataParserRuleCall_3_1_3_0 = (RuleCall)cPlacementDataAssignment_3_1_3.eContents().get(0);
		private final Assignment cChildPlacementAssignment_3_1_4 = (Assignment)cUnorderedGroup_3_1.eContents().get(4);
		private final RuleCall cChildPlacementKPlacementParserRuleCall_3_1_4_0 = (RuleCall)cChildPlacementAssignment_3_1_4.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cJunctionKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cJunctionPointRenderingAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cJunctionPointRenderingKRenderingParserRuleCall_3_2_1_0 = (RuleCall)cJunctionPointRenderingAssignment_3_2_1.eContents().get(0);
		private final Assignment cChildrenAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cChildrenKRenderingParserRuleCall_3_3_0 = (RuleCall)cChildrenAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//KPolyline:
		//	(KSimplePolyline | KPolygon | KRoundedBendsPolyline | KSpline) id=QualifiedID? ('[' persistentEntries+=Property* ']')?
		//	('{' (('points' ':' (points+=KPosition (';' points+=KPosition)*)?)?
		//	& ('styles' ':' styles+=KStyle*)?
		//	& ('actions' ':' actions+=KAction*)?
		//	& placementData=KPlacementData?
		//	& childPlacement=KPlacement?) ('junction' junctionPointRendering=KRendering)?
		//	children+=KRendering*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(KSimplePolyline | KPolygon | KRoundedBendsPolyline | KSpline) id=QualifiedID? ('[' persistentEntries+=Property* ']')?
		//('{' (('points' ':' (points+=KPosition (';' points+=KPosition)*)?)? & ('styles' ':' styles+=KStyle*)? & ('actions' ':'
		//actions+=KAction*)? & placementData=KPlacementData? & childPlacement=KPlacement?) ('junction'
		//junctionPointRendering=KRendering)? children+=KRendering* '}')?
		public Group getGroup() { return cGroup; }
		
		//(KSimplePolyline | KPolygon | KRoundedBendsPolyline | KSpline)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KSimplePolyline
		public RuleCall getKSimplePolylineParserRuleCall_0_0() { return cKSimplePolylineParserRuleCall_0_0; }
		
		//KPolygon
		public RuleCall getKPolygonParserRuleCall_0_1() { return cKPolygonParserRuleCall_0_1; }
		
		//KRoundedBendsPolyline
		public RuleCall getKRoundedBendsPolylineParserRuleCall_0_2() { return cKRoundedBendsPolylineParserRuleCall_0_2; }
		
		//KSpline
		public RuleCall getKSplineParserRuleCall_0_3() { return cKSplineParserRuleCall_0_3; }
		
		//id=QualifiedID?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//QualifiedID
		public RuleCall getIdQualifiedIDParserRuleCall_1_0() { return cIdQualifiedIDParserRuleCall_1_0; }
		
		//('[' persistentEntries+=Property* ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_2_1() { return cPersistentEntriesAssignment_2_1; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_2_1_0() { return cPersistentEntriesPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//('{' (('points' ':' (points+=KPosition (';' points+=KPosition)*)?)? & ('styles' ':' styles+=KStyle*)? & ('actions' ':'
		//actions+=KAction*)? & placementData=KPlacementData? & childPlacement=KPlacement?) ('junction'
		//junctionPointRendering=KRendering)? children+=KRendering* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(('points' ':' (points+=KPosition (';' points+=KPosition)*)?)? & ('styles' ':' styles+=KStyle*)? & ('actions' ':'
		//actions+=KAction*)? & placementData=KPlacementData? & childPlacement=KPlacement?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('points' ':' (points+=KPosition (';' points+=KPosition)*)?)?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'points'
		public Keyword getPointsKeyword_3_1_0_0() { return cPointsKeyword_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_0_1() { return cColonKeyword_3_1_0_1; }
		
		//(points+=KPosition (';' points+=KPosition)*)?
		public Group getGroup_3_1_0_2() { return cGroup_3_1_0_2; }
		
		//points+=KPosition
		public Assignment getPointsAssignment_3_1_0_2_0() { return cPointsAssignment_3_1_0_2_0; }
		
		//KPosition
		public RuleCall getPointsKPositionParserRuleCall_3_1_0_2_0_0() { return cPointsKPositionParserRuleCall_3_1_0_2_0_0; }
		
		//(';' points+=KPosition)*
		public Group getGroup_3_1_0_2_1() { return cGroup_3_1_0_2_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1_0_2_1_0() { return cSemicolonKeyword_3_1_0_2_1_0; }
		
		//points+=KPosition
		public Assignment getPointsAssignment_3_1_0_2_1_1() { return cPointsAssignment_3_1_0_2_1_1; }
		
		//KPosition
		public RuleCall getPointsKPositionParserRuleCall_3_1_0_2_1_1_0() { return cPointsKPositionParserRuleCall_3_1_0_2_1_1_0; }
		
		//('styles' ':' styles+=KStyle*)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'styles'
		public Keyword getStylesKeyword_3_1_1_0() { return cStylesKeyword_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1() { return cColonKeyword_3_1_1_1; }
		
		//styles+=KStyle*
		public Assignment getStylesAssignment_3_1_1_2() { return cStylesAssignment_3_1_1_2; }
		
		//KStyle
		public RuleCall getStylesKStyleParserRuleCall_3_1_1_2_0() { return cStylesKStyleParserRuleCall_3_1_1_2_0; }
		
		//('actions' ':' actions+=KAction*)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//'actions'
		public Keyword getActionsKeyword_3_1_2_0() { return cActionsKeyword_3_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_2_1() { return cColonKeyword_3_1_2_1; }
		
		//actions+=KAction*
		public Assignment getActionsAssignment_3_1_2_2() { return cActionsAssignment_3_1_2_2; }
		
		//KAction
		public RuleCall getActionsKActionParserRuleCall_3_1_2_2_0() { return cActionsKActionParserRuleCall_3_1_2_2_0; }
		
		//placementData=KPlacementData?
		public Assignment getPlacementDataAssignment_3_1_3() { return cPlacementDataAssignment_3_1_3; }
		
		//KPlacementData
		public RuleCall getPlacementDataKPlacementDataParserRuleCall_3_1_3_0() { return cPlacementDataKPlacementDataParserRuleCall_3_1_3_0; }
		
		//childPlacement=KPlacement?
		public Assignment getChildPlacementAssignment_3_1_4() { return cChildPlacementAssignment_3_1_4; }
		
		//KPlacement
		public RuleCall getChildPlacementKPlacementParserRuleCall_3_1_4_0() { return cChildPlacementKPlacementParserRuleCall_3_1_4_0; }
		
		//('junction' junctionPointRendering=KRendering)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'junction'
		public Keyword getJunctionKeyword_3_2_0() { return cJunctionKeyword_3_2_0; }
		
		//junctionPointRendering=KRendering
		public Assignment getJunctionPointRenderingAssignment_3_2_1() { return cJunctionPointRenderingAssignment_3_2_1; }
		
		//KRendering
		public RuleCall getJunctionPointRenderingKRenderingParserRuleCall_3_2_1_0() { return cJunctionPointRenderingKRenderingParserRuleCall_3_2_1_0; }
		
		//children+=KRendering*
		public Assignment getChildrenAssignment_3_3() { return cChildrenAssignment_3_3; }
		
		//KRendering
		public RuleCall getChildrenKRenderingParserRuleCall_3_3_0() { return cChildrenKRenderingParserRuleCall_3_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
	}
	public class KSimplePolylineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KSimplePolyline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKPolylineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKpolylineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KSimplePolyline KPolyline:
		//	{KPolyline}
		//	'kpolyline'
		@Override public ParserRule getRule() { return rule; }
		
		//{KPolyline} 'kpolyline'
		public Group getGroup() { return cGroup; }
		
		//{KPolyline}
		public Action getKPolylineAction_0() { return cKPolylineAction_0; }
		
		//'kpolyline'
		public Keyword getKpolylineKeyword_1() { return cKpolylineKeyword_1; }
	}
	public class KPolygonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPolygon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKPolygonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKpolygonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KPolygon:
		//	{KPolygon}
		//	'kpolygon';
		@Override public ParserRule getRule() { return rule; }
		
		//{KPolygon} 'kpolygon'
		public Group getGroup() { return cGroup; }
		
		//{KPolygon}
		public Action getKPolygonAction_0() { return cKPolygonAction_0; }
		
		//'kpolygon'
		public Keyword getKpolygonKeyword_1() { return cKpolygonKeyword_1; }
	}
	public class KRoundedBendsPolylineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRoundedBendsPolyline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKRoundedBendsPolylineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKroundedPolylineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBendRadiusAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBendRadiusFloatParserRuleCall_2_1_0 = (RuleCall)cBendRadiusAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//KRoundedBendsPolyline:
		//	{KRoundedBendsPolyline}
		//	'kroundedPolyline' ('(' bendRadius=Float ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KRoundedBendsPolyline} 'kroundedPolyline' ('(' bendRadius=Float ')')?
		public Group getGroup() { return cGroup; }
		
		//{KRoundedBendsPolyline}
		public Action getKRoundedBendsPolylineAction_0() { return cKRoundedBendsPolylineAction_0; }
		
		//'kroundedPolyline'
		public Keyword getKroundedPolylineKeyword_1() { return cKroundedPolylineKeyword_1; }
		
		//('(' bendRadius=Float ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//bendRadius=Float
		public Assignment getBendRadiusAssignment_2_1() { return cBendRadiusAssignment_2_1; }
		
		//Float
		public RuleCall getBendRadiusFloatParserRuleCall_2_1_0() { return cBendRadiusFloatParserRuleCall_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class KSplineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KSpline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKSplineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKsplineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KSpline:
		//	{KSpline}
		//	'kspline';
		@Override public ParserRule getRule() { return rule; }
		
		//{KSpline} 'kspline'
		public Group getGroup() { return cGroup; }
		
		//{KSpline}
		public Action getKSplineAction_0() { return cKSplineAction_0; }
		
		//'kspline'
		public Keyword getKsplineKeyword_1() { return cKsplineKeyword_1; }
	}
	public class KStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KStyle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKColoringParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKFontBoldParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cKFontItalicParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cKFontNameParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final RuleCall cKFontSizeParserRuleCall_0_4 = (RuleCall)cAlternatives_0.eContents().get(4);
		private final RuleCall cKTextUnderlineParserRuleCall_0_5 = (RuleCall)cAlternatives_0.eContents().get(5);
		private final RuleCall cKHorizontalAlignmentParserRuleCall_0_6 = (RuleCall)cAlternatives_0.eContents().get(6);
		private final RuleCall cKVerticalAlignmentParserRuleCall_0_7 = (RuleCall)cAlternatives_0.eContents().get(7);
		private final RuleCall cKInvisibilityParserRuleCall_0_8 = (RuleCall)cAlternatives_0.eContents().get(8);
		private final RuleCall cKLineCapParserRuleCall_0_9 = (RuleCall)cAlternatives_0.eContents().get(9);
		private final RuleCall cKLineJoinParserRuleCall_0_10 = (RuleCall)cAlternatives_0.eContents().get(10);
		private final RuleCall cKLineStyleParserRuleCall_0_11 = (RuleCall)cAlternatives_0.eContents().get(11);
		private final RuleCall cKLineWidthParserRuleCall_0_12 = (RuleCall)cAlternatives_0.eContents().get(12);
		private final RuleCall cKRotationParserRuleCall_0_13 = (RuleCall)cAlternatives_0.eContents().get(13);
		private final RuleCall cKShadowParserRuleCall_0_14 = (RuleCall)cAlternatives_0.eContents().get(14);
		private final RuleCall cKStyleRefParserRuleCall_0_15 = (RuleCall)cAlternatives_0.eContents().get(15);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cModifierKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cModifierIdAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cModifierIdQualifiedIDParserRuleCall_1_1_0 = (RuleCall)cModifierIdAssignment_1_1.eContents().get(0);
		
		////----------------- KStyle -----------------
		//KStyle:
		//	(KColoring | KFontBold | KFontItalic | KFontName | KFontSize | KTextUnderline
		//	| KHorizontalAlignment | KVerticalAlignment | KInvisibility | KLineCap | KLineJoin
		//	| KLineStyle | KLineWidth | KRotation | KShadow | KStyleRef) ('modifier' modifierId=QualifiedID)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(KColoring | KFontBold | KFontItalic | KFontName | KFontSize | KTextUnderline | KHorizontalAlignment |
		//KVerticalAlignment | KInvisibility | KLineCap | KLineJoin | KLineStyle | KLineWidth | KRotation | KShadow | KStyleRef)
		//('modifier' modifierId=QualifiedID)?
		public Group getGroup() { return cGroup; }
		
		//(KColoring | KFontBold | KFontItalic | KFontName | KFontSize | KTextUnderline | KHorizontalAlignment |
		//KVerticalAlignment | KInvisibility | KLineCap | KLineJoin | KLineStyle | KLineWidth | KRotation | KShadow | KStyleRef)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KColoring
		public RuleCall getKColoringParserRuleCall_0_0() { return cKColoringParserRuleCall_0_0; }
		
		//KFontBold
		public RuleCall getKFontBoldParserRuleCall_0_1() { return cKFontBoldParserRuleCall_0_1; }
		
		//KFontItalic
		public RuleCall getKFontItalicParserRuleCall_0_2() { return cKFontItalicParserRuleCall_0_2; }
		
		//KFontName
		public RuleCall getKFontNameParserRuleCall_0_3() { return cKFontNameParserRuleCall_0_3; }
		
		//KFontSize
		public RuleCall getKFontSizeParserRuleCall_0_4() { return cKFontSizeParserRuleCall_0_4; }
		
		//KTextUnderline
		public RuleCall getKTextUnderlineParserRuleCall_0_5() { return cKTextUnderlineParserRuleCall_0_5; }
		
		//KHorizontalAlignment
		public RuleCall getKHorizontalAlignmentParserRuleCall_0_6() { return cKHorizontalAlignmentParserRuleCall_0_6; }
		
		//KVerticalAlignment
		public RuleCall getKVerticalAlignmentParserRuleCall_0_7() { return cKVerticalAlignmentParserRuleCall_0_7; }
		
		//KInvisibility
		public RuleCall getKInvisibilityParserRuleCall_0_8() { return cKInvisibilityParserRuleCall_0_8; }
		
		//KLineCap
		public RuleCall getKLineCapParserRuleCall_0_9() { return cKLineCapParserRuleCall_0_9; }
		
		//KLineJoin
		public RuleCall getKLineJoinParserRuleCall_0_10() { return cKLineJoinParserRuleCall_0_10; }
		
		//KLineStyle
		public RuleCall getKLineStyleParserRuleCall_0_11() { return cKLineStyleParserRuleCall_0_11; }
		
		//KLineWidth
		public RuleCall getKLineWidthParserRuleCall_0_12() { return cKLineWidthParserRuleCall_0_12; }
		
		//KRotation
		public RuleCall getKRotationParserRuleCall_0_13() { return cKRotationParserRuleCall_0_13; }
		
		//KShadow
		public RuleCall getKShadowParserRuleCall_0_14() { return cKShadowParserRuleCall_0_14; }
		
		//KStyleRef
		public RuleCall getKStyleRefParserRuleCall_0_15() { return cKStyleRefParserRuleCall_0_15; }
		
		//('modifier' modifierId=QualifiedID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'modifier'
		public Keyword getModifierKeyword_1_0() { return cModifierKeyword_1_0; }
		
		//modifierId=QualifiedID
		public Assignment getModifierIdAssignment_1_1() { return cModifierIdAssignment_1_1; }
		
		//QualifiedID
		public RuleCall getModifierIdQualifiedIDParserRuleCall_1_1_0() { return cModifierIdQualifiedIDParserRuleCall_1_1_0; }
	}
	public class KColoringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KColoring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKForegroundParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKBackgroundParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cNullKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cColorAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cColorKColorParserRuleCall_2_1_0_0 = (RuleCall)cColorAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cAlphaAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cAlphaALPHATerminalRuleCall_2_1_1_1_0 = (RuleCall)cAlphaAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTargetColorAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cTargetColorKColorParserRuleCall_2_1_2_1_0 = (RuleCall)cTargetColorAssignment_2_1_2_1.eContents().get(0);
		private final Group cGroup_2_1_2_2 = (Group)cGroup_2_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_2_0 = (Keyword)cGroup_2_1_2_2.eContents().get(0);
		private final Assignment cTargetAlphaAssignment_2_1_2_2_1 = (Assignment)cGroup_2_1_2_2.eContents().get(1);
		private final RuleCall cTargetAlphaALPHATerminalRuleCall_2_1_2_2_1_0 = (RuleCall)cTargetAlphaAssignment_2_1_2_2_1.eContents().get(0);
		private final Group cGroup_2_1_2_3 = (Group)cGroup_2_1_2.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_2_1_2_3_0 = (Keyword)cGroup_2_1_2_3.eContents().get(0);
		private final Assignment cGradientAngleAssignment_2_1_2_3_1 = (Assignment)cGroup_2_1_2_3.eContents().get(1);
		private final RuleCall cGradientAngleFloatParserRuleCall_2_1_2_3_1_0 = (RuleCall)cGradientAngleAssignment_2_1_2_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_2_3_2 = (Keyword)cGroup_2_1_2_3.eContents().get(2);
		
		//KColoring:
		//	(KForeground | KBackground) '=' ('null' | color=KColor (',' alpha=ALPHA)? ('->' targetColor=KColor (','
		//	targetAlpha=ALPHA)? ('(' gradientAngle=Float ')')?)?);
		@Override public ParserRule getRule() { return rule; }
		
		//(KForeground | KBackground) '=' ('null' | color=KColor (',' alpha=ALPHA)? ('->' targetColor=KColor (','
		//targetAlpha=ALPHA)? ('(' gradientAngle=Float ')')?)?)
		public Group getGroup() { return cGroup; }
		
		//(KForeground | KBackground)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KForeground
		public RuleCall getKForegroundParserRuleCall_0_0() { return cKForegroundParserRuleCall_0_0; }
		
		//KBackground
		public RuleCall getKBackgroundParserRuleCall_0_1() { return cKBackgroundParserRuleCall_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//('null' | color=KColor (',' alpha=ALPHA)? ('->' targetColor=KColor (',' targetAlpha=ALPHA)? ('(' gradientAngle=Float
		//')')?)?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'null'
		public Keyword getNullKeyword_2_0() { return cNullKeyword_2_0; }
		
		//color=KColor (',' alpha=ALPHA)? ('->' targetColor=KColor (',' targetAlpha=ALPHA)? ('(' gradientAngle=Float ')')?)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//color=KColor
		public Assignment getColorAssignment_2_1_0() { return cColorAssignment_2_1_0; }
		
		//KColor
		public RuleCall getColorKColorParserRuleCall_2_1_0_0() { return cColorKColorParserRuleCall_2_1_0_0; }
		
		//(',' alpha=ALPHA)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }
		
		//alpha=ALPHA
		public Assignment getAlphaAssignment_2_1_1_1() { return cAlphaAssignment_2_1_1_1; }
		
		//ALPHA
		public RuleCall getAlphaALPHATerminalRuleCall_2_1_1_1_0() { return cAlphaALPHATerminalRuleCall_2_1_1_1_0; }
		
		//('->' targetColor=KColor (',' targetAlpha=ALPHA)? ('(' gradientAngle=Float ')')?)?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_1_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_1_2_0; }
		
		//targetColor=KColor
		public Assignment getTargetColorAssignment_2_1_2_1() { return cTargetColorAssignment_2_1_2_1; }
		
		//KColor
		public RuleCall getTargetColorKColorParserRuleCall_2_1_2_1_0() { return cTargetColorKColorParserRuleCall_2_1_2_1_0; }
		
		//(',' targetAlpha=ALPHA)?
		public Group getGroup_2_1_2_2() { return cGroup_2_1_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_2_2_0() { return cCommaKeyword_2_1_2_2_0; }
		
		//targetAlpha=ALPHA
		public Assignment getTargetAlphaAssignment_2_1_2_2_1() { return cTargetAlphaAssignment_2_1_2_2_1; }
		
		//ALPHA
		public RuleCall getTargetAlphaALPHATerminalRuleCall_2_1_2_2_1_0() { return cTargetAlphaALPHATerminalRuleCall_2_1_2_2_1_0; }
		
		//('(' gradientAngle=Float ')')?
		public Group getGroup_2_1_2_3() { return cGroup_2_1_2_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1_2_3_0() { return cLeftParenthesisKeyword_2_1_2_3_0; }
		
		//gradientAngle=Float
		public Assignment getGradientAngleAssignment_2_1_2_3_1() { return cGradientAngleAssignment_2_1_2_3_1; }
		
		//Float
		public RuleCall getGradientAngleFloatParserRuleCall_2_1_2_3_1_0() { return cGradientAngleFloatParserRuleCall_2_1_2_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_1_2_3_2() { return cRightParenthesisKeyword_2_1_2_3_2; }
	}
	public class KForegroundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KForeground");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKForegroundAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPropagateToChildrenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPropagateToChildrenPropagateKeyword_1_0 = (Keyword)cPropagateToChildrenAssignment_1.eContents().get(0);
		private final Assignment cSelectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cSelectionSelectionKeyword_2_0 = (Keyword)cSelectionAssignment_2.eContents().get(0);
		private final Keyword cForegroundKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//KForeground:
		//	{KForeground} propagateToChildren?='propagate'? selection?='selection'? 'foreground';
		@Override public ParserRule getRule() { return rule; }
		
		//{KForeground} propagateToChildren?='propagate'? selection?='selection'? 'foreground'
		public Group getGroup() { return cGroup; }
		
		//{KForeground}
		public Action getKForegroundAction_0() { return cKForegroundAction_0; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_1() { return cPropagateToChildrenAssignment_1; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_1_0() { return cPropagateToChildrenPropagateKeyword_1_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_2() { return cSelectionAssignment_2; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_2_0() { return cSelectionSelectionKeyword_2_0; }
		
		//'foreground'
		public Keyword getForegroundKeyword_3() { return cForegroundKeyword_3; }
	}
	public class KBackgroundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KBackground");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKBackgroundAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPropagateToChildrenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPropagateToChildrenPropagateKeyword_1_0 = (Keyword)cPropagateToChildrenAssignment_1.eContents().get(0);
		private final Assignment cSelectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cSelectionSelectionKeyword_2_0 = (Keyword)cSelectionAssignment_2.eContents().get(0);
		private final Keyword cBackgroundKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//KBackground:
		//	{KBackground} propagateToChildren?='propagate'? selection?='selection'? 'background';
		@Override public ParserRule getRule() { return rule; }
		
		//{KBackground} propagateToChildren?='propagate'? selection?='selection'? 'background'
		public Group getGroup() { return cGroup; }
		
		//{KBackground}
		public Action getKBackgroundAction_0() { return cKBackgroundAction_0; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_1() { return cPropagateToChildrenAssignment_1; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_1_0() { return cPropagateToChildrenPropagateKeyword_1_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_2() { return cSelectionAssignment_2; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_2_0() { return cSelectionSelectionKeyword_2_0; }
		
		//'background'
		public Keyword getBackgroundKeyword_3() { return cBackgroundKeyword_3; }
	}
	public class KFontBoldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KFontBold");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cBoldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBoldAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBoldBOOLEANTerminalRuleCall_4_0 = (RuleCall)cBoldAssignment_4.eContents().get(0);
		
		//KFontBold:
		//	propagateToChildren?='propagate'? selection?='selection'? 'bold' '=' bold=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'bold' '=' bold=BOOLEAN
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'bold'
		public Keyword getBoldKeyword_2() { return cBoldKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//bold=BOOLEAN
		public Assignment getBoldAssignment_4() { return cBoldAssignment_4; }
		
		//BOOLEAN
		public RuleCall getBoldBOOLEANTerminalRuleCall_4_0() { return cBoldBOOLEANTerminalRuleCall_4_0; }
	}
	public class KFontItalicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KFontItalic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cItalicKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cItalicAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cItalicBOOLEANTerminalRuleCall_4_0 = (RuleCall)cItalicAssignment_4.eContents().get(0);
		
		//KFontItalic:
		//	propagateToChildren?='propagate'? selection?='selection'? 'italic' '=' italic=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'italic' '=' italic=BOOLEAN
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'italic'
		public Keyword getItalicKeyword_2() { return cItalicKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//italic=BOOLEAN
		public Assignment getItalicAssignment_4() { return cItalicAssignment_4; }
		
		//BOOLEAN
		public RuleCall getItalicBOOLEANTerminalRuleCall_4_0() { return cItalicBOOLEANTerminalRuleCall_4_0; }
	}
	public class KFontNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KFontName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cFontNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		
		//KFontName:
		//	propagateToChildren?='propagate'? selection?='selection'? 'fontName' '=' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'fontName' '=' name=STRING
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'fontName'
		public Keyword getFontNameKeyword_2() { return cFontNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
	}
	public class KFontSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KFontSize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Assignment cScaleWithZoomAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cScaleWithZoomScaleKeyword_2_0 = (Keyword)cScaleWithZoomAssignment_2.eContents().get(0);
		private final Keyword cFontSizeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSizeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSizeFSIZETerminalRuleCall_5_0 = (RuleCall)cSizeAssignment_5.eContents().get(0);
		
		//KFontSize:
		//	propagateToChildren?='propagate'? selection?='selection'? scaleWithZoom?='scale'?
		//	'fontSize' '=' size=FSIZE;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? scaleWithZoom?='scale'? 'fontSize' '=' size=FSIZE
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//scaleWithZoom?='scale'?
		public Assignment getScaleWithZoomAssignment_2() { return cScaleWithZoomAssignment_2; }
		
		//'scale'
		public Keyword getScaleWithZoomScaleKeyword_2_0() { return cScaleWithZoomScaleKeyword_2_0; }
		
		//'fontSize'
		public Keyword getFontSizeKeyword_3() { return cFontSizeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//size=FSIZE
		public Assignment getSizeAssignment_5() { return cSizeAssignment_5; }
		
		//FSIZE
		public RuleCall getSizeFSIZETerminalRuleCall_5_0() { return cSizeFSIZETerminalRuleCall_5_0; }
	}
	public class KTextUnderlineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KTextUnderline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cUnderlineKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUnderlineAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUnderlineUnderlineEnumRuleCall_4_0 = (RuleCall)cUnderlineAssignment_4.eContents().get(0);
		
		//KTextUnderline:
		//	propagateToChildren?='propagate'? selection?='selection'? 'underline' '=' underline=Underline;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'underline' '=' underline=Underline
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'underline'
		public Keyword getUnderlineKeyword_2() { return cUnderlineKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//underline=Underline
		public Assignment getUnderlineAssignment_4() { return cUnderlineAssignment_4; }
		
		//Underline
		public RuleCall getUnderlineUnderlineEnumRuleCall_4_0() { return cUnderlineUnderlineEnumRuleCall_4_0; }
	}
	public class KHorizontalAlignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KHorizontalAlignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cHAlignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHorizontalAlignmentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHorizontalAlignmentHorizontalAlignmentEnumRuleCall_4_0 = (RuleCall)cHorizontalAlignmentAssignment_4.eContents().get(0);
		
		//KHorizontalAlignment:
		//	propagateToChildren?='propagate'? selection?='selection'? 'hAlign' '=' horizontalAlignment=HorizontalAlignment;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'hAlign' '=' horizontalAlignment=HorizontalAlignment
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'hAlign'
		public Keyword getHAlignKeyword_2() { return cHAlignKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//horizontalAlignment=HorizontalAlignment
		public Assignment getHorizontalAlignmentAssignment_4() { return cHorizontalAlignmentAssignment_4; }
		
		//HorizontalAlignment
		public RuleCall getHorizontalAlignmentHorizontalAlignmentEnumRuleCall_4_0() { return cHorizontalAlignmentHorizontalAlignmentEnumRuleCall_4_0; }
	}
	public class KVerticalAlignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KVerticalAlignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cVAlignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVerticalAlignmentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVerticalAlignmentVerticalAlignmentEnumRuleCall_4_0 = (RuleCall)cVerticalAlignmentAssignment_4.eContents().get(0);
		
		//KVerticalAlignment:
		//	propagateToChildren?='propagate'? selection?='selection'? 'vAlign' '=' verticalAlignment=VerticalAlignment;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'vAlign' '=' verticalAlignment=VerticalAlignment
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'vAlign'
		public Keyword getVAlignKeyword_2() { return cVAlignKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//verticalAlignment=VerticalAlignment
		public Assignment getVerticalAlignmentAssignment_4() { return cVerticalAlignmentAssignment_4; }
		
		//VerticalAlignment
		public RuleCall getVerticalAlignmentVerticalAlignmentEnumRuleCall_4_0() { return cVerticalAlignmentVerticalAlignmentEnumRuleCall_4_0; }
	}
	public class KInvisibilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KInvisibility");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cInvisibleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInvisibleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInvisibleBOOLEANTerminalRuleCall_4_0 = (RuleCall)cInvisibleAssignment_4.eContents().get(0);
		
		//KInvisibility:
		//	propagateToChildren?='propagate'? selection?='selection'? 'invisible' '=' invisible=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'invisible' '=' invisible=BOOLEAN
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'invisible'
		public Keyword getInvisibleKeyword_2() { return cInvisibleKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//invisible=BOOLEAN
		public Assignment getInvisibleAssignment_4() { return cInvisibleAssignment_4; }
		
		//BOOLEAN
		public RuleCall getInvisibleBOOLEANTerminalRuleCall_4_0() { return cInvisibleBOOLEANTerminalRuleCall_4_0; }
	}
	public class KLineCapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLineCap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cLineCapKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineCapAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineCapLineCapEnumRuleCall_4_0 = (RuleCall)cLineCapAssignment_4.eContents().get(0);
		
		//KLineCap:
		//	propagateToChildren?='propagate'? selection?='selection'? 'lineCap' '=' lineCap=LineCap;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'lineCap' '=' lineCap=LineCap
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'lineCap'
		public Keyword getLineCapKeyword_2() { return cLineCapKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lineCap=LineCap
		public Assignment getLineCapAssignment_4() { return cLineCapAssignment_4; }
		
		//LineCap
		public RuleCall getLineCapLineCapEnumRuleCall_4_0() { return cLineCapLineCapEnumRuleCall_4_0; }
	}
	public class KLineJoinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLineJoin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cLineJoinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineJoinAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineJoinLineJoinEnumRuleCall_4_0 = (RuleCall)cLineJoinAssignment_4.eContents().get(0);
		
		//KLineJoin:
		//	propagateToChildren?='propagate'? selection?='selection'? 'lineJoin' '=' lineJoin=LineJoin;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'lineJoin' '=' lineJoin=LineJoin
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'lineJoin'
		public Keyword getLineJoinKeyword_2() { return cLineJoinKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lineJoin=LineJoin
		public Assignment getLineJoinAssignment_4() { return cLineJoinAssignment_4; }
		
		//LineJoin
		public RuleCall getLineJoinLineJoinEnumRuleCall_4_0() { return cLineJoinLineJoinEnumRuleCall_4_0; }
	}
	public class KLineStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLineStyle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cLineStyleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineStyleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineStyleLineStyleEnumRuleCall_4_0 = (RuleCall)cLineStyleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDashOffsetKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDashOffsetAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDashOffsetFloatParserRuleCall_5_2_0 = (RuleCall)cDashOffsetAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDashPatternKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDashPatternAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDashPatternFloatParserRuleCall_6_2_0 = (RuleCall)cDashPatternAssignment_6_2.eContents().get(0);
		
		//KLineStyle:
		//	propagateToChildren?='propagate'? selection?='selection'? 'lineStyle' '=' lineStyle=LineStyle ('dashOffset' '='
		//	dashOffset=Float)? ('dashPattern' '=' dashPattern+=Float*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'lineStyle' '=' lineStyle=LineStyle ('dashOffset' '='
		//dashOffset=Float)? ('dashPattern' '=' dashPattern+=Float*)?
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'lineStyle'
		public Keyword getLineStyleKeyword_2() { return cLineStyleKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lineStyle=LineStyle
		public Assignment getLineStyleAssignment_4() { return cLineStyleAssignment_4; }
		
		//LineStyle
		public RuleCall getLineStyleLineStyleEnumRuleCall_4_0() { return cLineStyleLineStyleEnumRuleCall_4_0; }
		
		//('dashOffset' '=' dashOffset=Float)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dashOffset'
		public Keyword getDashOffsetKeyword_5_0() { return cDashOffsetKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//dashOffset=Float
		public Assignment getDashOffsetAssignment_5_2() { return cDashOffsetAssignment_5_2; }
		
		//Float
		public RuleCall getDashOffsetFloatParserRuleCall_5_2_0() { return cDashOffsetFloatParserRuleCall_5_2_0; }
		
		//('dashPattern' '=' dashPattern+=Float*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dashPattern'
		public Keyword getDashPatternKeyword_6_0() { return cDashPatternKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//dashPattern+=Float*
		public Assignment getDashPatternAssignment_6_2() { return cDashPatternAssignment_6_2; }
		
		//Float
		public RuleCall getDashPatternFloatParserRuleCall_6_2_0() { return cDashPatternFloatParserRuleCall_6_2_0; }
	}
	public class KLineWidthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLineWidth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cLineWidthKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineWidthAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineWidthFloatParserRuleCall_4_0 = (RuleCall)cLineWidthAssignment_4.eContents().get(0);
		
		//KLineWidth:
		//	propagateToChildren?='propagate'? selection?='selection'? 'lineWidth' '=' lineWidth=Float;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'lineWidth' '=' lineWidth=Float
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'lineWidth'
		public Keyword getLineWidthKeyword_2() { return cLineWidthKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lineWidth=Float
		public Assignment getLineWidthAssignment_4() { return cLineWidthAssignment_4; }
		
		//Float
		public RuleCall getLineWidthFloatParserRuleCall_4_0() { return cLineWidthFloatParserRuleCall_4_0; }
	}
	public class KRotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropagateToChildrenAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropagateToChildrenPropagateKeyword_0_0 = (Keyword)cPropagateToChildrenAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Keyword cRotationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRotationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRotationFloatParserRuleCall_4_0 = (RuleCall)cRotationAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cAnchorKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cEqualsSignKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cRotationAnchorAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cRotationAnchorKPositionParserRuleCall_5_3_0 = (RuleCall)cRotationAnchorAssignment_5_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		
		//KRotation:
		//	propagateToChildren?='propagate'? selection?='selection'? 'rotation' '=' rotation=Float ('(' 'anchor' '='
		//	rotationAnchor=KPosition ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//propagateToChildren?='propagate'? selection?='selection'? 'rotation' '=' rotation=Float ('(' 'anchor' '='
		//rotationAnchor=KPosition ')')?
		public Group getGroup() { return cGroup; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_0() { return cPropagateToChildrenAssignment_0; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_0_0() { return cPropagateToChildrenPropagateKeyword_0_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }
		
		//'rotation'
		public Keyword getRotationKeyword_2() { return cRotationKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//rotation=Float
		public Assignment getRotationAssignment_4() { return cRotationAssignment_4; }
		
		//Float
		public RuleCall getRotationFloatParserRuleCall_4_0() { return cRotationFloatParserRuleCall_4_0; }
		
		//('(' 'anchor' '=' rotationAnchor=KPosition ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }
		
		//'anchor'
		public Keyword getAnchorKeyword_5_1() { return cAnchorKeyword_5_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_2() { return cEqualsSignKeyword_5_2; }
		
		//rotationAnchor=KPosition
		public Assignment getRotationAnchorAssignment_5_3() { return cRotationAnchorAssignment_5_3; }
		
		//KPosition
		public RuleCall getRotationAnchorKPositionParserRuleCall_5_3_0() { return cRotationAnchorKPositionParserRuleCall_5_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
	}
	public class KShadowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KShadow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKShadowAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPropagateToChildrenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPropagateToChildrenPropagateKeyword_1_0 = (Keyword)cPropagateToChildrenAssignment_1.eContents().get(0);
		private final Assignment cSelectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cSelectionSelectionKeyword_2_0 = (Keyword)cSelectionAssignment_2.eContents().get(0);
		private final Keyword cShadowKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cColorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cColorKColorParserRuleCall_5_0 = (RuleCall)cColorAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cXOffsetAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cXOffsetFloatParserRuleCall_6_1_0 = (RuleCall)cXOffsetAssignment_6_1.eContents().get(0);
		private final Keyword cCommaKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cYOffsetAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cYOffsetFloatParserRuleCall_6_3_0 = (RuleCall)cYOffsetAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cBlurAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cBlurFloatParserRuleCall_6_4_1_0 = (RuleCall)cBlurAssignment_6_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		
		//KShadow:
		//	{KShadow} propagateToChildren?='propagate'? selection?='selection'? 'shadow' '=' color=KColor? ('(' xOffset=Float ','
		//	yOffset=Float (',' blur=Float)? ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{KShadow} propagateToChildren?='propagate'? selection?='selection'? 'shadow' '=' color=KColor? ('(' xOffset=Float ','
		//yOffset=Float (',' blur=Float)? ')')?
		public Group getGroup() { return cGroup; }
		
		//{KShadow}
		public Action getKShadowAction_0() { return cKShadowAction_0; }
		
		//propagateToChildren?='propagate'?
		public Assignment getPropagateToChildrenAssignment_1() { return cPropagateToChildrenAssignment_1; }
		
		//'propagate'
		public Keyword getPropagateToChildrenPropagateKeyword_1_0() { return cPropagateToChildrenPropagateKeyword_1_0; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_2() { return cSelectionAssignment_2; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_2_0() { return cSelectionSelectionKeyword_2_0; }
		
		//'shadow'
		public Keyword getShadowKeyword_3() { return cShadowKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//color=KColor?
		public Assignment getColorAssignment_5() { return cColorAssignment_5; }
		
		//KColor
		public RuleCall getColorKColorParserRuleCall_5_0() { return cColorKColorParserRuleCall_5_0; }
		
		//('(' xOffset=Float ',' yOffset=Float (',' blur=Float)? ')')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }
		
		//xOffset=Float
		public Assignment getXOffsetAssignment_6_1() { return cXOffsetAssignment_6_1; }
		
		//Float
		public RuleCall getXOffsetFloatParserRuleCall_6_1_0() { return cXOffsetFloatParserRuleCall_6_1_0; }
		
		//','
		public Keyword getCommaKeyword_6_2() { return cCommaKeyword_6_2; }
		
		//yOffset=Float
		public Assignment getYOffsetAssignment_6_3() { return cYOffsetAssignment_6_3; }
		
		//Float
		public RuleCall getYOffsetFloatParserRuleCall_6_3_0() { return cYOffsetFloatParserRuleCall_6_3_0; }
		
		//(',' blur=Float)?
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//','
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//blur=Float
		public Assignment getBlurAssignment_6_4_1() { return cBlurAssignment_6_4_1; }
		
		//Float
		public RuleCall getBlurFloatParserRuleCall_6_4_1_0() { return cBlurFloatParserRuleCall_6_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6_5() { return cRightParenthesisKeyword_6_5; }
	}
	public class KStyleRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KStyleRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSelectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSelectionSelectionKeyword_0_0 = (Keyword)cSelectionAssignment_0.eContents().get(0);
		private final Keyword cReferenceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStyleHolderAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cStyleHolderKStyleHolderCrossReference_3_0 = (CrossReference)cStyleHolderAssignment_3.eContents().get(0);
		private final RuleCall cStyleHolderKStyleHolderQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cStyleHolderKStyleHolderCrossReference_3_0.eContents().get(1);
		
		//KStyleRef:
		//	selection?='selection'? 'reference' '=' styleHolder=[KStyleHolder|QualifiedID];
		@Override public ParserRule getRule() { return rule; }
		
		//selection?='selection'? 'reference' '=' styleHolder=[KStyleHolder|QualifiedID]
		public Group getGroup() { return cGroup; }
		
		//selection?='selection'?
		public Assignment getSelectionAssignment_0() { return cSelectionAssignment_0; }
		
		//'selection'
		public Keyword getSelectionSelectionKeyword_0_0() { return cSelectionSelectionKeyword_0_0; }
		
		//'reference'
		public Keyword getReferenceKeyword_1() { return cReferenceKeyword_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//styleHolder=[KStyleHolder|QualifiedID]
		public Assignment getStyleHolderAssignment_3() { return cStyleHolderAssignment_3; }
		
		//[KStyleHolder|QualifiedID]
		public CrossReference getStyleHolderKStyleHolderCrossReference_3_0() { return cStyleHolderKStyleHolderCrossReference_3_0; }
		
		//QualifiedID
		public RuleCall getStyleHolderKStyleHolderQualifiedIDParserRuleCall_3_0_1() { return cStyleHolderKStyleHolderQualifiedIDParserRuleCall_3_0_1; }
	}
	public class KRenderingLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRenderingLibrary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKRenderingLibraryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKrenderingLibraryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistentEntriesPropertyParserRuleCall_2_1_0 = (RuleCall)cPersistentEntriesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cRenderingsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cRenderingsKRenderingParserRuleCall_4_0_0 = (RuleCall)cRenderingsAssignment_4_0.eContents().get(0);
		private final Assignment cRenderingsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cRenderingsKStyleHolderParserRuleCall_4_1_0 = (RuleCall)cRenderingsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////----------- KRendering Utility ------------
		//KRenderingLibrary:
		//	{KRenderingLibrary}
		//	'krenderingLibrary' ('[' persistentEntries+=Property* ']')? '{' (renderings+=KRendering | renderings+=KStyleHolder)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{KRenderingLibrary} 'krenderingLibrary' ('[' persistentEntries+=Property* ']')? '{' (renderings+=KRendering |
		//renderings+=KStyleHolder)* '}'
		public Group getGroup() { return cGroup; }
		
		//{KRenderingLibrary}
		public Action getKRenderingLibraryAction_0() { return cKRenderingLibraryAction_0; }
		
		//'krenderingLibrary'
		public Keyword getKrenderingLibraryKeyword_1() { return cKrenderingLibraryKeyword_1; }
		
		//('[' persistentEntries+=Property* ']')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//persistentEntries+=Property*
		public Assignment getPersistentEntriesAssignment_2_1() { return cPersistentEntriesAssignment_2_1; }
		
		//Property
		public RuleCall getPersistentEntriesPropertyParserRuleCall_2_1_0() { return cPersistentEntriesPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(renderings+=KRendering | renderings+=KStyleHolder)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//renderings+=KRendering
		public Assignment getRenderingsAssignment_4_0() { return cRenderingsAssignment_4_0; }
		
		//KRendering
		public RuleCall getRenderingsKRenderingParserRuleCall_4_0_0() { return cRenderingsKRenderingParserRuleCall_4_0_0; }
		
		//renderings+=KStyleHolder
		public Assignment getRenderingsAssignment_4_1() { return cRenderingsAssignment_4_1; }
		
		//KStyleHolder
		public RuleCall getRenderingsKStyleHolderParserRuleCall_4_1_0() { return cRenderingsKStyleHolderParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class KStyleHolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KStyleHolder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKStyleHolderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKstylesTemplateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdQualifiedIDParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStylesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStylesKStyleParserRuleCall_4_0 = (RuleCall)cStylesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//KStyleHolder:
		//	{KStyleHolder}
		//	'kstylesTemplate' id=QualifiedID? '{'
		//	styles+=KStyle*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{KStyleHolder} 'kstylesTemplate' id=QualifiedID? '{' styles+=KStyle* '}'
		public Group getGroup() { return cGroup; }
		
		//{KStyleHolder}
		public Action getKStyleHolderAction_0() { return cKStyleHolderAction_0; }
		
		//'kstylesTemplate'
		public Keyword getKstylesTemplateKeyword_1() { return cKstylesTemplateKeyword_1; }
		
		//id=QualifiedID?
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//QualifiedID
		public RuleCall getIdQualifiedIDParserRuleCall_2_0() { return cIdQualifiedIDParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//styles+=KStyle*
		public Assignment getStylesAssignment_4() { return cStylesAssignment_4; }
		
		//KStyle
		public RuleCall getStylesKStyleParserRuleCall_4_0() { return cStylesKStyleParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class KPlacementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPlacement");
		private final RuleCall cKGridPlacementParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//KPlacement:
		//	KGridPlacement;
		@Override public ParserRule getRule() { return rule; }
		
		//KGridPlacement
		public RuleCall getKGridPlacementParserRuleCall() { return cKGridPlacementParserRuleCall; }
	}
	public class KGridPlacementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KGridPlacement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKGridPlacementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGridKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cTopLeftAnchorKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cTopLeftAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cTopLeftKPositionParserRuleCall_3_0_2_0 = (RuleCall)cTopLeftAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cBottomRightAnchorKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cBottomRightAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cBottomRightKPositionParserRuleCall_3_1_2_0 = (RuleCall)cBottomRightAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cColumnsKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cNumColumnsAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cNumColumnsNATURALTerminalRuleCall_3_2_2_0 = (RuleCall)cNumColumnsAssignment_3_2_2.eContents().get(0);
		
		//KGridPlacement:
		//	{KGridPlacement}
		//	'grid' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
		//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?
		//	& ('columns' '=' numColumns=NATURAL)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KGridPlacement} 'grid' ':' (('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '=' bottomRight=KPosition)?
		//& ('columns' '=' numColumns=NATURAL)?)
		public Group getGroup() { return cGroup; }
		
		//{KGridPlacement}
		public Action getKGridPlacementAction_0() { return cKGridPlacementAction_0; }
		
		//'grid'
		public Keyword getGridKeyword_1() { return cGridKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '=' bottomRight=KPosition)? & ('columns' '='
		//numColumns=NATURAL)?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('topLeftAnchor' '=' topLeft=KPosition)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'topLeftAnchor'
		public Keyword getTopLeftAnchorKeyword_3_0_0() { return cTopLeftAnchorKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }
		
		//topLeft=KPosition
		public Assignment getTopLeftAssignment_3_0_2() { return cTopLeftAssignment_3_0_2; }
		
		//KPosition
		public RuleCall getTopLeftKPositionParserRuleCall_3_0_2_0() { return cTopLeftKPositionParserRuleCall_3_0_2_0; }
		
		//('bottomRightAnchor' '=' bottomRight=KPosition)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'bottomRightAnchor'
		public Keyword getBottomRightAnchorKeyword_3_1_0() { return cBottomRightAnchorKeyword_3_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }
		
		//bottomRight=KPosition
		public Assignment getBottomRightAssignment_3_1_2() { return cBottomRightAssignment_3_1_2; }
		
		//KPosition
		public RuleCall getBottomRightKPositionParserRuleCall_3_1_2_0() { return cBottomRightKPositionParserRuleCall_3_1_2_0; }
		
		//('columns' '=' numColumns=NATURAL)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'columns'
		public Keyword getColumnsKeyword_3_2_0() { return cColumnsKeyword_3_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }
		
		//numColumns=NATURAL
		public Assignment getNumColumnsAssignment_3_2_2() { return cNumColumnsAssignment_3_2_2; }
		
		//NATURAL
		public RuleCall getNumColumnsNATURALTerminalRuleCall_3_2_2_0() { return cNumColumnsNATURALTerminalRuleCall_3_2_2_0; }
	}
	public class KPlacementDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPlacementData");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cKAreaPlacementDataParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKPointPlacementDataParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKGridPlacementDataParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cKDecoratorPlacementDataParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//KPlacementData:
		//	KAreaPlacementData | KPointPlacementData | KGridPlacementData | KDecoratorPlacementData;
		@Override public ParserRule getRule() { return rule; }
		
		//KAreaPlacementData | KPointPlacementData | KGridPlacementData | KDecoratorPlacementData
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//KAreaPlacementData
		public RuleCall getKAreaPlacementDataParserRuleCall_0() { return cKAreaPlacementDataParserRuleCall_0; }
		
		//KPointPlacementData
		public RuleCall getKPointPlacementDataParserRuleCall_1() { return cKPointPlacementDataParserRuleCall_1; }
		
		//KGridPlacementData
		public RuleCall getKGridPlacementDataParserRuleCall_2() { return cKGridPlacementDataParserRuleCall_2; }
		
		//KDecoratorPlacementData
		public RuleCall getKDecoratorPlacementDataParserRuleCall_3() { return cKDecoratorPlacementDataParserRuleCall_3; }
	}
	public class KAreaPlacementDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KAreaPlacementData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKAreaPlacementDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAreaDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cTopLeftAnchorKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cTopLeftAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cTopLeftKPositionParserRuleCall_3_0_2_0 = (RuleCall)cTopLeftAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cBottomRightAnchorKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cBottomRightAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cBottomRightKPositionParserRuleCall_3_1_2_0 = (RuleCall)cBottomRightAssignment_3_1_2.eContents().get(0);
		
		//KAreaPlacementData:
		//	{KAreaPlacementData}
		//	'areaData' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
		//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KAreaPlacementData} 'areaData' ':' (('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '='
		//bottomRight=KPosition)?)
		public Group getGroup() { return cGroup; }
		
		//{KAreaPlacementData}
		public Action getKAreaPlacementDataAction_0() { return cKAreaPlacementDataAction_0; }
		
		//'areaData'
		public Keyword getAreaDataKeyword_1() { return cAreaDataKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '=' bottomRight=KPosition)?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('topLeftAnchor' '=' topLeft=KPosition)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'topLeftAnchor'
		public Keyword getTopLeftAnchorKeyword_3_0_0() { return cTopLeftAnchorKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }
		
		//topLeft=KPosition
		public Assignment getTopLeftAssignment_3_0_2() { return cTopLeftAssignment_3_0_2; }
		
		//KPosition
		public RuleCall getTopLeftKPositionParserRuleCall_3_0_2_0() { return cTopLeftKPositionParserRuleCall_3_0_2_0; }
		
		//('bottomRightAnchor' '=' bottomRight=KPosition)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'bottomRightAnchor'
		public Keyword getBottomRightAnchorKeyword_3_1_0() { return cBottomRightAnchorKeyword_3_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }
		
		//bottomRight=KPosition
		public Assignment getBottomRightAssignment_3_1_2() { return cBottomRightAssignment_3_1_2; }
		
		//KPosition
		public RuleCall getBottomRightKPositionParserRuleCall_3_1_2_0() { return cBottomRightKPositionParserRuleCall_3_1_2_0; }
	}
	public class KPointPlacementDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPointPlacementData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKPointPlacementDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPointDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cReferencePointKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cReferencePointAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cReferencePointKPositionParserRuleCall_3_0_2_0 = (RuleCall)cReferencePointAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cMinimalWidthKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cMinWidthAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cMinWidthFloatParserRuleCall_3_1_2_0 = (RuleCall)cMinWidthAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cMinimalHeightKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cMinHeightAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cMinHeightFloatParserRuleCall_3_2_2_0 = (RuleCall)cMinHeightAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cHorizontalAlignmentKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cHorizontalAlignmentAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cHorizontalAlignmentHorizontalAlignmentEnumRuleCall_3_3_2_0 = (RuleCall)cHorizontalAlignmentAssignment_3_3_2.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cVerticalAlignmentKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cVerticalAlignmentAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cVerticalAlignmentVerticalAlignmentEnumRuleCall_3_4_2_0 = (RuleCall)cVerticalAlignmentAssignment_3_4_2.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cHorizontalMarginKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Assignment cHorizontalMarginAssignment_3_5_2 = (Assignment)cGroup_3_5.eContents().get(2);
		private final RuleCall cHorizontalMarginFloatParserRuleCall_3_5_2_0 = (RuleCall)cHorizontalMarginAssignment_3_5_2.eContents().get(0);
		private final Group cGroup_3_6 = (Group)cUnorderedGroup_3.eContents().get(6);
		private final Keyword cVerticalMarginKeyword_3_6_0 = (Keyword)cGroup_3_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_6_1 = (Keyword)cGroup_3_6.eContents().get(1);
		private final Assignment cVerticalMarginAssignment_3_6_2 = (Assignment)cGroup_3_6.eContents().get(2);
		private final RuleCall cVerticalMarginFloatParserRuleCall_3_6_2_0 = (RuleCall)cVerticalMarginAssignment_3_6_2.eContents().get(0);
		
		//KPointPlacementData:
		//	{KPointPlacementData}
		//	'pointData' ':' (('referencePoint' '=' referencePoint=KPosition)?
		//	& ('minimalWidth' '=' minWidth=Float)?
		//	& ('minimalHeight' '=' minHeight=Float)?
		//	& ('horizontalAlignment' '=' horizontalAlignment=HorizontalAlignment)?
		//	& ('verticalAlignment' '=' verticalAlignment=VerticalAlignment)?
		//	& ('horizontalMargin' '=' horizontalMargin=Float)?
		//	& ('verticalMargin' '=' verticalMargin=Float)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KPointPlacementData} 'pointData' ':' (('referencePoint' '=' referencePoint=KPosition)? & ('minimalWidth' '='
		//minWidth=Float)? & ('minimalHeight' '=' minHeight=Float)? & ('horizontalAlignment' '='
		//horizontalAlignment=HorizontalAlignment)? & ('verticalAlignment' '=' verticalAlignment=VerticalAlignment)? &
		//('horizontalMargin' '=' horizontalMargin=Float)? & ('verticalMargin' '=' verticalMargin=Float)?)
		public Group getGroup() { return cGroup; }
		
		//{KPointPlacementData}
		public Action getKPointPlacementDataAction_0() { return cKPointPlacementDataAction_0; }
		
		//'pointData'
		public Keyword getPointDataKeyword_1() { return cPointDataKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(('referencePoint' '=' referencePoint=KPosition)? & ('minimalWidth' '=' minWidth=Float)? & ('minimalHeight' '='
		//minHeight=Float)? & ('horizontalAlignment' '=' horizontalAlignment=HorizontalAlignment)? & ('verticalAlignment' '='
		//verticalAlignment=VerticalAlignment)? & ('horizontalMargin' '=' horizontalMargin=Float)? & ('verticalMargin' '='
		//verticalMargin=Float)?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('referencePoint' '=' referencePoint=KPosition)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'referencePoint'
		public Keyword getReferencePointKeyword_3_0_0() { return cReferencePointKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }
		
		//referencePoint=KPosition
		public Assignment getReferencePointAssignment_3_0_2() { return cReferencePointAssignment_3_0_2; }
		
		//KPosition
		public RuleCall getReferencePointKPositionParserRuleCall_3_0_2_0() { return cReferencePointKPositionParserRuleCall_3_0_2_0; }
		
		//('minimalWidth' '=' minWidth=Float)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'minimalWidth'
		public Keyword getMinimalWidthKeyword_3_1_0() { return cMinimalWidthKeyword_3_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }
		
		//minWidth=Float
		public Assignment getMinWidthAssignment_3_1_2() { return cMinWidthAssignment_3_1_2; }
		
		//Float
		public RuleCall getMinWidthFloatParserRuleCall_3_1_2_0() { return cMinWidthFloatParserRuleCall_3_1_2_0; }
		
		//('minimalHeight' '=' minHeight=Float)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'minimalHeight'
		public Keyword getMinimalHeightKeyword_3_2_0() { return cMinimalHeightKeyword_3_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }
		
		//minHeight=Float
		public Assignment getMinHeightAssignment_3_2_2() { return cMinHeightAssignment_3_2_2; }
		
		//Float
		public RuleCall getMinHeightFloatParserRuleCall_3_2_2_0() { return cMinHeightFloatParserRuleCall_3_2_2_0; }
		
		//('horizontalAlignment' '=' horizontalAlignment=HorizontalAlignment)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'horizontalAlignment'
		public Keyword getHorizontalAlignmentKeyword_3_3_0() { return cHorizontalAlignmentKeyword_3_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_3_1() { return cEqualsSignKeyword_3_3_1; }
		
		//horizontalAlignment=HorizontalAlignment
		public Assignment getHorizontalAlignmentAssignment_3_3_2() { return cHorizontalAlignmentAssignment_3_3_2; }
		
		//HorizontalAlignment
		public RuleCall getHorizontalAlignmentHorizontalAlignmentEnumRuleCall_3_3_2_0() { return cHorizontalAlignmentHorizontalAlignmentEnumRuleCall_3_3_2_0; }
		
		//('verticalAlignment' '=' verticalAlignment=VerticalAlignment)?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'verticalAlignment'
		public Keyword getVerticalAlignmentKeyword_3_4_0() { return cVerticalAlignmentKeyword_3_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_4_1() { return cEqualsSignKeyword_3_4_1; }
		
		//verticalAlignment=VerticalAlignment
		public Assignment getVerticalAlignmentAssignment_3_4_2() { return cVerticalAlignmentAssignment_3_4_2; }
		
		//VerticalAlignment
		public RuleCall getVerticalAlignmentVerticalAlignmentEnumRuleCall_3_4_2_0() { return cVerticalAlignmentVerticalAlignmentEnumRuleCall_3_4_2_0; }
		
		//('horizontalMargin' '=' horizontalMargin=Float)?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'horizontalMargin'
		public Keyword getHorizontalMarginKeyword_3_5_0() { return cHorizontalMarginKeyword_3_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_5_1() { return cEqualsSignKeyword_3_5_1; }
		
		//horizontalMargin=Float
		public Assignment getHorizontalMarginAssignment_3_5_2() { return cHorizontalMarginAssignment_3_5_2; }
		
		//Float
		public RuleCall getHorizontalMarginFloatParserRuleCall_3_5_2_0() { return cHorizontalMarginFloatParserRuleCall_3_5_2_0; }
		
		//('verticalMargin' '=' verticalMargin=Float)?
		public Group getGroup_3_6() { return cGroup_3_6; }
		
		//'verticalMargin'
		public Keyword getVerticalMarginKeyword_3_6_0() { return cVerticalMarginKeyword_3_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_6_1() { return cEqualsSignKeyword_3_6_1; }
		
		//verticalMargin=Float
		public Assignment getVerticalMarginAssignment_3_6_2() { return cVerticalMarginAssignment_3_6_2; }
		
		//Float
		public RuleCall getVerticalMarginFloatParserRuleCall_3_6_2_0() { return cVerticalMarginFloatParserRuleCall_3_6_2_0; }
	}
	public class KGridPlacementDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KGridPlacementData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKGridPlacementDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGridDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cTopLeftAnchorKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cTopLeftAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cTopLeftKPositionParserRuleCall_3_0_2_0 = (RuleCall)cTopLeftAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cBottomRightAnchorKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cBottomRightAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cBottomRightKPositionParserRuleCall_3_1_2_0 = (RuleCall)cBottomRightAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cMinCellWidthKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cMinCellWidthAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cMinCellWidthFloatParserRuleCall_3_2_2_0 = (RuleCall)cMinCellWidthAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cMinCellHeightKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cMinCellHeightAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cMinCellHeightFloatParserRuleCall_3_3_2_0 = (RuleCall)cMinCellHeightAssignment_3_3_2.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cFlexibleWidthKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cFlexibleWidthAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cFlexibleWidthBOOLEANTerminalRuleCall_3_4_2_0 = (RuleCall)cFlexibleWidthAssignment_3_4_2.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cFlexibleHeightKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Assignment cFlexibleHeightAssignment_3_5_2 = (Assignment)cGroup_3_5.eContents().get(2);
		private final RuleCall cFlexibleHeightBOOLEANTerminalRuleCall_3_5_2_0 = (RuleCall)cFlexibleHeightAssignment_3_5_2.eContents().get(0);
		
		//KGridPlacementData:
		//	{KGridPlacementData}
		//	'gridData' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
		//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?
		//	& ('minCellWidth' '=' minCellWidth=Float)?
		//	& ('minCellHeight' '=' minCellHeight=Float)?
		//	& ('flexibleWidth' '=' flexibleWidth=BOOLEAN)?
		//	& ('flexibleHeight' '=' flexibleHeight=BOOLEAN)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KGridPlacementData} 'gridData' ':' (('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '='
		//bottomRight=KPosition)? & ('minCellWidth' '=' minCellWidth=Float)? & ('minCellHeight' '=' minCellHeight=Float)? &
		//('flexibleWidth' '=' flexibleWidth=BOOLEAN)? & ('flexibleHeight' '=' flexibleHeight=BOOLEAN)?)
		public Group getGroup() { return cGroup; }
		
		//{KGridPlacementData}
		public Action getKGridPlacementDataAction_0() { return cKGridPlacementDataAction_0; }
		
		//'gridData'
		public Keyword getGridDataKeyword_1() { return cGridDataKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(('topLeftAnchor' '=' topLeft=KPosition)? & ('bottomRightAnchor' '=' bottomRight=KPosition)? & ('minCellWidth' '='
		//minCellWidth=Float)? & ('minCellHeight' '=' minCellHeight=Float)? & ('flexibleWidth' '=' flexibleWidth=BOOLEAN)? &
		//('flexibleHeight' '=' flexibleHeight=BOOLEAN)?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('topLeftAnchor' '=' topLeft=KPosition)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'topLeftAnchor'
		public Keyword getTopLeftAnchorKeyword_3_0_0() { return cTopLeftAnchorKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }
		
		//topLeft=KPosition
		public Assignment getTopLeftAssignment_3_0_2() { return cTopLeftAssignment_3_0_2; }
		
		//KPosition
		public RuleCall getTopLeftKPositionParserRuleCall_3_0_2_0() { return cTopLeftKPositionParserRuleCall_3_0_2_0; }
		
		//('bottomRightAnchor' '=' bottomRight=KPosition)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'bottomRightAnchor'
		public Keyword getBottomRightAnchorKeyword_3_1_0() { return cBottomRightAnchorKeyword_3_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }
		
		//bottomRight=KPosition
		public Assignment getBottomRightAssignment_3_1_2() { return cBottomRightAssignment_3_1_2; }
		
		//KPosition
		public RuleCall getBottomRightKPositionParserRuleCall_3_1_2_0() { return cBottomRightKPositionParserRuleCall_3_1_2_0; }
		
		//('minCellWidth' '=' minCellWidth=Float)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'minCellWidth'
		public Keyword getMinCellWidthKeyword_3_2_0() { return cMinCellWidthKeyword_3_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }
		
		//minCellWidth=Float
		public Assignment getMinCellWidthAssignment_3_2_2() { return cMinCellWidthAssignment_3_2_2; }
		
		//Float
		public RuleCall getMinCellWidthFloatParserRuleCall_3_2_2_0() { return cMinCellWidthFloatParserRuleCall_3_2_2_0; }
		
		//('minCellHeight' '=' minCellHeight=Float)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'minCellHeight'
		public Keyword getMinCellHeightKeyword_3_3_0() { return cMinCellHeightKeyword_3_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_3_1() { return cEqualsSignKeyword_3_3_1; }
		
		//minCellHeight=Float
		public Assignment getMinCellHeightAssignment_3_3_2() { return cMinCellHeightAssignment_3_3_2; }
		
		//Float
		public RuleCall getMinCellHeightFloatParserRuleCall_3_3_2_0() { return cMinCellHeightFloatParserRuleCall_3_3_2_0; }
		
		//('flexibleWidth' '=' flexibleWidth=BOOLEAN)?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'flexibleWidth'
		public Keyword getFlexibleWidthKeyword_3_4_0() { return cFlexibleWidthKeyword_3_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_4_1() { return cEqualsSignKeyword_3_4_1; }
		
		//flexibleWidth=BOOLEAN
		public Assignment getFlexibleWidthAssignment_3_4_2() { return cFlexibleWidthAssignment_3_4_2; }
		
		//BOOLEAN
		public RuleCall getFlexibleWidthBOOLEANTerminalRuleCall_3_4_2_0() { return cFlexibleWidthBOOLEANTerminalRuleCall_3_4_2_0; }
		
		//('flexibleHeight' '=' flexibleHeight=BOOLEAN)?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'flexibleHeight'
		public Keyword getFlexibleHeightKeyword_3_5_0() { return cFlexibleHeightKeyword_3_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_5_1() { return cEqualsSignKeyword_3_5_1; }
		
		//flexibleHeight=BOOLEAN
		public Assignment getFlexibleHeightAssignment_3_5_2() { return cFlexibleHeightAssignment_3_5_2; }
		
		//BOOLEAN
		public RuleCall getFlexibleHeightBOOLEANTerminalRuleCall_3_5_2_0() { return cFlexibleHeightBOOLEANTerminalRuleCall_3_5_2_0; }
	}
	public class KDecoratorPlacementDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KDecoratorPlacementData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKDecoratorPlacementDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDecoratorDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cXoffsetKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cXOffsetAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cXOffsetFloatParserRuleCall_3_0_2_0 = (RuleCall)cXOffsetAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cYoffsetKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cYOffsetAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cYOffsetFloatParserRuleCall_3_1_2_0 = (RuleCall)cYOffsetAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cWidthKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cWidthAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cWidthFloatParserRuleCall_3_2_2_0 = (RuleCall)cWidthAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cHeightKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cHeightAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cHeightFloatParserRuleCall_3_3_2_0 = (RuleCall)cHeightAssignment_3_3_2.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cRelativePosKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cRelativeAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cRelativeFloatParserRuleCall_3_4_2_0 = (RuleCall)cRelativeAssignment_3_4_2.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cAbsolutePosKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Assignment cAbsoluteAssignment_3_5_2 = (Assignment)cGroup_3_5.eContents().get(2);
		private final RuleCall cAbsoluteFloatParserRuleCall_3_5_2_0 = (RuleCall)cAbsoluteAssignment_3_5_2.eContents().get(0);
		private final Group cGroup_3_6 = (Group)cUnorderedGroup_3.eContents().get(6);
		private final Keyword cRotateWithLineKeyword_3_6_0 = (Keyword)cGroup_3_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_6_1 = (Keyword)cGroup_3_6.eContents().get(1);
		private final Assignment cRotateWithLineAssignment_3_6_2 = (Assignment)cGroup_3_6.eContents().get(2);
		private final RuleCall cRotateWithLineBOOLEANTerminalRuleCall_3_6_2_0 = (RuleCall)cRotateWithLineAssignment_3_6_2.eContents().get(0);
		
		//KDecoratorPlacementData:
		//	{KDecoratorPlacementData}
		//	'decoratorData' ':' (('xoffset' '=' xOffset=Float)?
		//	& ('yoffset' '=' yOffset=Float)?
		//	& ('width' '=' width=Float)?
		//	& ('height' '=' height=Float)?
		//	& ('relativePos' '=' relative=Float)?
		//	& ('absolutePos' '=' absolute=Float)?
		//	& ('rotateWithLine' '=' rotateWithLine=BOOLEAN)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{KDecoratorPlacementData} 'decoratorData' ':' (('xoffset' '=' xOffset=Float)? & ('yoffset' '=' yOffset=Float)? &
		//('width' '=' width=Float)? & ('height' '=' height=Float)? & ('relativePos' '=' relative=Float)? & ('absolutePos' '='
		//absolute=Float)? & ('rotateWithLine' '=' rotateWithLine=BOOLEAN)?)
		public Group getGroup() { return cGroup; }
		
		//{KDecoratorPlacementData}
		public Action getKDecoratorPlacementDataAction_0() { return cKDecoratorPlacementDataAction_0; }
		
		//'decoratorData'
		public Keyword getDecoratorDataKeyword_1() { return cDecoratorDataKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(('xoffset' '=' xOffset=Float)? & ('yoffset' '=' yOffset=Float)? & ('width' '=' width=Float)? & ('height' '='
		//height=Float)? & ('relativePos' '=' relative=Float)? & ('absolutePos' '=' absolute=Float)? & ('rotateWithLine' '='
		//rotateWithLine=BOOLEAN)?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('xoffset' '=' xOffset=Float)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'xoffset'
		public Keyword getXoffsetKeyword_3_0_0() { return cXoffsetKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }
		
		//xOffset=Float
		public Assignment getXOffsetAssignment_3_0_2() { return cXOffsetAssignment_3_0_2; }
		
		//Float
		public RuleCall getXOffsetFloatParserRuleCall_3_0_2_0() { return cXOffsetFloatParserRuleCall_3_0_2_0; }
		
		//('yoffset' '=' yOffset=Float)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'yoffset'
		public Keyword getYoffsetKeyword_3_1_0() { return cYoffsetKeyword_3_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }
		
		//yOffset=Float
		public Assignment getYOffsetAssignment_3_1_2() { return cYOffsetAssignment_3_1_2; }
		
		//Float
		public RuleCall getYOffsetFloatParserRuleCall_3_1_2_0() { return cYOffsetFloatParserRuleCall_3_1_2_0; }
		
		//('width' '=' width=Float)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'width'
		public Keyword getWidthKeyword_3_2_0() { return cWidthKeyword_3_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }
		
		//width=Float
		public Assignment getWidthAssignment_3_2_2() { return cWidthAssignment_3_2_2; }
		
		//Float
		public RuleCall getWidthFloatParserRuleCall_3_2_2_0() { return cWidthFloatParserRuleCall_3_2_2_0; }
		
		//('height' '=' height=Float)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'height'
		public Keyword getHeightKeyword_3_3_0() { return cHeightKeyword_3_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_3_1() { return cEqualsSignKeyword_3_3_1; }
		
		//height=Float
		public Assignment getHeightAssignment_3_3_2() { return cHeightAssignment_3_3_2; }
		
		//Float
		public RuleCall getHeightFloatParserRuleCall_3_3_2_0() { return cHeightFloatParserRuleCall_3_3_2_0; }
		
		//('relativePos' '=' relative=Float)?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'relativePos'
		public Keyword getRelativePosKeyword_3_4_0() { return cRelativePosKeyword_3_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_4_1() { return cEqualsSignKeyword_3_4_1; }
		
		//relative=Float
		public Assignment getRelativeAssignment_3_4_2() { return cRelativeAssignment_3_4_2; }
		
		//Float
		public RuleCall getRelativeFloatParserRuleCall_3_4_2_0() { return cRelativeFloatParserRuleCall_3_4_2_0; }
		
		//('absolutePos' '=' absolute=Float)?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'absolutePos'
		public Keyword getAbsolutePosKeyword_3_5_0() { return cAbsolutePosKeyword_3_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_5_1() { return cEqualsSignKeyword_3_5_1; }
		
		//absolute=Float
		public Assignment getAbsoluteAssignment_3_5_2() { return cAbsoluteAssignment_3_5_2; }
		
		//Float
		public RuleCall getAbsoluteFloatParserRuleCall_3_5_2_0() { return cAbsoluteFloatParserRuleCall_3_5_2_0; }
		
		//('rotateWithLine' '=' rotateWithLine=BOOLEAN)?
		public Group getGroup_3_6() { return cGroup_3_6; }
		
		//'rotateWithLine'
		public Keyword getRotateWithLineKeyword_3_6_0() { return cRotateWithLineKeyword_3_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_6_1() { return cEqualsSignKeyword_3_6_1; }
		
		//rotateWithLine=BOOLEAN
		public Assignment getRotateWithLineAssignment_3_6_2() { return cRotateWithLineAssignment_3_6_2; }
		
		//BOOLEAN
		public RuleCall getRotateWithLineBOOLEANTerminalRuleCall_3_6_2_0() { return cRotateWithLineBOOLEANTerminalRuleCall_3_6_2_0; }
	}
	public class KActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTriggerAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTriggerTriggerEnumRuleCall_0_0 = (RuleCall)cTriggerAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionIdQualifiedIDParserRuleCall_2_0 = (RuleCall)cActionIdAssignment_2.eContents().get(0);
		
		//KAction:
		//	trigger=Trigger '=>' actionId=QualifiedID;
		@Override public ParserRule getRule() { return rule; }
		
		//trigger=Trigger '=>' actionId=QualifiedID
		public Group getGroup() { return cGroup; }
		
		//trigger=Trigger
		public Assignment getTriggerAssignment_0() { return cTriggerAssignment_0; }
		
		//Trigger
		public RuleCall getTriggerTriggerEnumRuleCall_0_0() { return cTriggerTriggerEnumRuleCall_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//actionId=QualifiedID
		public Assignment getActionIdAssignment_2() { return cActionIdAssignment_2; }
		
		//QualifiedID
		public RuleCall getActionIdQualifiedIDParserRuleCall_2_0() { return cActionIdQualifiedIDParserRuleCall_2_0; }
	}
	public class KPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cXKXPositionParserRuleCall_0_0 = (RuleCall)cXAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cYAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYKYPositionParserRuleCall_2_0 = (RuleCall)cYAssignment_2.eContents().get(0);
		
		//KPosition:
		//	x=KXPosition ',' y=KYPosition;
		@Override public ParserRule getRule() { return rule; }
		
		//x=KXPosition ',' y=KYPosition
		public Group getGroup() { return cGroup; }
		
		//x=KXPosition
		public Assignment getXAssignment_0() { return cXAssignment_0; }
		
		//KXPosition
		public RuleCall getXKXPositionParserRuleCall_0_0() { return cXKXPositionParserRuleCall_0_0; }
		
		//','
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
		
		//y=KYPosition
		public Assignment getYAssignment_2() { return cYAssignment_2; }
		
		//KYPosition
		public RuleCall getYKYPositionParserRuleCall_2_0() { return cYKYPositionParserRuleCall_2_0; }
	}
	public class KXPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KXPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKLeftPositionParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKRightPositionParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cRelativeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cRelativePERCENTTerminalRuleCall_1_0_0 = (RuleCall)cRelativeAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cGroup_1_1.eContents().get(0);
		private final Assignment cRelativeAssignment_1_1_0_0 = (Assignment)cGroup_1_1_0.eContents().get(0);
		private final RuleCall cRelativePERCENTTerminalRuleCall_1_1_0_0_0 = (RuleCall)cRelativeAssignment_1_1_0_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_1_1_0_1 = (Keyword)cGroup_1_1_0.eContents().get(1);
		private final Assignment cAbsoluteAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cAbsoluteFloatParserRuleCall_1_1_1_0 = (RuleCall)cAbsoluteAssignment_1_1_1.eContents().get(0);
		
		//KXPosition:
		//	(KLeftPosition | KRightPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(KLeftPosition | KRightPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?
		public Group getGroup() { return cGroup; }
		
		//(KLeftPosition | KRightPosition)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KLeftPosition
		public RuleCall getKLeftPositionParserRuleCall_0_0() { return cKLeftPositionParserRuleCall_0_0; }
		
		//KRightPosition
		public RuleCall getKRightPositionParserRuleCall_0_1() { return cKRightPositionParserRuleCall_0_1; }
		
		//(relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//relative=PERCENT
		public Assignment getRelativeAssignment_1_0() { return cRelativeAssignment_1_0; }
		
		//PERCENT
		public RuleCall getRelativePERCENTTerminalRuleCall_1_0_0() { return cRelativePERCENTTerminalRuleCall_1_0_0; }
		
		//(relative=PERCENT '+')? absolute=Float
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//(relative=PERCENT '+')?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//relative=PERCENT
		public Assignment getRelativeAssignment_1_1_0_0() { return cRelativeAssignment_1_1_0_0; }
		
		//PERCENT
		public RuleCall getRelativePERCENTTerminalRuleCall_1_1_0_0_0() { return cRelativePERCENTTerminalRuleCall_1_1_0_0_0; }
		
		//'+'
		public Keyword getPlusSignKeyword_1_1_0_1() { return cPlusSignKeyword_1_1_0_1; }
		
		//absolute=Float
		public Assignment getAbsoluteAssignment_1_1_1() { return cAbsoluteAssignment_1_1_1; }
		
		//Float
		public RuleCall getAbsoluteFloatParserRuleCall_1_1_1_0() { return cAbsoluteFloatParserRuleCall_1_1_1_0; }
	}
	public class KLeftPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KLeftPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKLeftPositionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KLeftPosition:
		//	{KLeftPosition}
		//	'left';
		@Override public ParserRule getRule() { return rule; }
		
		//{KLeftPosition} 'left'
		public Group getGroup() { return cGroup; }
		
		//{KLeftPosition}
		public Action getKLeftPositionAction_0() { return cKLeftPositionAction_0; }
		
		//'left'
		public Keyword getLeftKeyword_1() { return cLeftKeyword_1; }
	}
	public class KRightPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KRightPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKRightPositionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRightKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KRightPosition:
		//	{KRightPosition}
		//	'right';
		@Override public ParserRule getRule() { return rule; }
		
		//{KRightPosition} 'right'
		public Group getGroup() { return cGroup; }
		
		//{KRightPosition}
		public Action getKRightPositionAction_0() { return cKRightPositionAction_0; }
		
		//'right'
		public Keyword getRightKeyword_1() { return cRightKeyword_1; }
	}
	public class KYPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KYPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cKTopPositionParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cKBottomPositionParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cRelativeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cRelativePERCENTTerminalRuleCall_1_0_0 = (RuleCall)cRelativeAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cGroup_1_1.eContents().get(0);
		private final Assignment cRelativeAssignment_1_1_0_0 = (Assignment)cGroup_1_1_0.eContents().get(0);
		private final RuleCall cRelativePERCENTTerminalRuleCall_1_1_0_0_0 = (RuleCall)cRelativeAssignment_1_1_0_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_1_1_0_1 = (Keyword)cGroup_1_1_0.eContents().get(1);
		private final Assignment cAbsoluteAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cAbsoluteFloatParserRuleCall_1_1_1_0 = (RuleCall)cAbsoluteAssignment_1_1_1.eContents().get(0);
		
		//KYPosition:
		//	(KTopPosition | KBottomPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(KTopPosition | KBottomPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?
		public Group getGroup() { return cGroup; }
		
		//(KTopPosition | KBottomPosition)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//KTopPosition
		public RuleCall getKTopPositionParserRuleCall_0_0() { return cKTopPositionParserRuleCall_0_0; }
		
		//KBottomPosition
		public RuleCall getKBottomPositionParserRuleCall_0_1() { return cKBottomPositionParserRuleCall_0_1; }
		
		//(relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//relative=PERCENT
		public Assignment getRelativeAssignment_1_0() { return cRelativeAssignment_1_0; }
		
		//PERCENT
		public RuleCall getRelativePERCENTTerminalRuleCall_1_0_0() { return cRelativePERCENTTerminalRuleCall_1_0_0; }
		
		//(relative=PERCENT '+')? absolute=Float
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//(relative=PERCENT '+')?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//relative=PERCENT
		public Assignment getRelativeAssignment_1_1_0_0() { return cRelativeAssignment_1_1_0_0; }
		
		//PERCENT
		public RuleCall getRelativePERCENTTerminalRuleCall_1_1_0_0_0() { return cRelativePERCENTTerminalRuleCall_1_1_0_0_0; }
		
		//'+'
		public Keyword getPlusSignKeyword_1_1_0_1() { return cPlusSignKeyword_1_1_0_1; }
		
		//absolute=Float
		public Assignment getAbsoluteAssignment_1_1_1() { return cAbsoluteAssignment_1_1_1; }
		
		//Float
		public RuleCall getAbsoluteFloatParserRuleCall_1_1_1_0() { return cAbsoluteFloatParserRuleCall_1_1_1_0; }
	}
	public class KTopPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KTopPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKTopPositionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KTopPosition:
		//	{KTopPosition}
		//	'top';
		@Override public ParserRule getRule() { return rule; }
		
		//{KTopPosition} 'top'
		public Group getGroup() { return cGroup; }
		
		//{KTopPosition}
		public Action getKTopPositionAction_0() { return cKTopPositionAction_0; }
		
		//'top'
		public Keyword getTopKeyword_1() { return cTopKeyword_1; }
	}
	public class KBottomPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KBottomPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKBottomPositionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBottomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//KBottomPosition:
		//	{KBottomPosition}
		//	'bottom';
		@Override public ParserRule getRule() { return rule; }
		
		//{KBottomPosition} 'bottom'
		public Group getGroup() { return cGroup; }
		
		//{KBottomPosition}
		public Action getKBottomPositionAction_0() { return cKBottomPositionAction_0; }
		
		//'bottom'
		public Keyword getBottomKeyword_1() { return cBottomKeyword_1; }
	}
	public class KColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.KColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cRedAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cRedREDTerminalRuleCall_0_0_0 = (RuleCall)cRedAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cGreenAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cGreenGREENTerminalRuleCall_0_1_1_0 = (RuleCall)cGreenAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cCommaKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cBlueAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cBlueBLUETerminalRuleCall_0_2_1_0 = (RuleCall)cBlueAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cGreenAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cGreenGREENTerminalRuleCall_1_0_0 = (RuleCall)cGreenAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cBlueAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cBlueBLUETerminalRuleCall_1_1_1_0 = (RuleCall)cBlueAssignment_1_1_1.eContents().get(0);
		private final Assignment cBlueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cBlueBLUETerminalRuleCall_2_0 = (RuleCall)cBlueAssignment_2.eContents().get(0);
		
		//KColor:
		//	red=RED (',' green=GREEN)? (',' blue=BLUE)? | green=GREEN (',' blue=BLUE)? | blue=BLUE;
		@Override public ParserRule getRule() { return rule; }
		
		//red=RED (',' green=GREEN)? (',' blue=BLUE)? | green=GREEN (',' blue=BLUE)? | blue=BLUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//red=RED (',' green=GREEN)? (',' blue=BLUE)?
		public Group getGroup_0() { return cGroup_0; }
		
		//red=RED
		public Assignment getRedAssignment_0_0() { return cRedAssignment_0_0; }
		
		//RED
		public RuleCall getRedREDTerminalRuleCall_0_0_0() { return cRedREDTerminalRuleCall_0_0_0; }
		
		//(',' green=GREEN)?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_0() { return cCommaKeyword_0_1_0; }
		
		//green=GREEN
		public Assignment getGreenAssignment_0_1_1() { return cGreenAssignment_0_1_1; }
		
		//GREEN
		public RuleCall getGreenGREENTerminalRuleCall_0_1_1_0() { return cGreenGREENTerminalRuleCall_0_1_1_0; }
		
		//(',' blue=BLUE)?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//','
		public Keyword getCommaKeyword_0_2_0() { return cCommaKeyword_0_2_0; }
		
		//blue=BLUE
		public Assignment getBlueAssignment_0_2_1() { return cBlueAssignment_0_2_1; }
		
		//BLUE
		public RuleCall getBlueBLUETerminalRuleCall_0_2_1_0() { return cBlueBLUETerminalRuleCall_0_2_1_0; }
		
		//green=GREEN (',' blue=BLUE)?
		public Group getGroup_1() { return cGroup_1; }
		
		//green=GREEN
		public Assignment getGreenAssignment_1_0() { return cGreenAssignment_1_0; }
		
		//GREEN
		public RuleCall getGreenGREENTerminalRuleCall_1_0_0() { return cGreenGREENTerminalRuleCall_1_0_0; }
		
		//(',' blue=BLUE)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//blue=BLUE
		public Assignment getBlueAssignment_1_1_1() { return cBlueAssignment_1_1_1; }
		
		//BLUE
		public RuleCall getBlueBLUETerminalRuleCall_1_1_1_0() { return cBlueBLUETerminalRuleCall_1_1_1_0; }
		
		//blue=BLUE
		public Assignment getBlueAssignment_2() { return cBlueAssignment_2; }
		
		//BLUE
		public RuleCall getBlueBLUETerminalRuleCall_2_0() { return cBlueBLUETerminalRuleCall_2_0; }
	}
	public class QualifiedIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.QualifiedID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		////--------------- Terminals ----------------
		//QualifiedID:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class PropertyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.PropertyValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFloatParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQualifiedIDParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//PropertyValue:
		//	BOOLEAN | STRING | Float | QualifiedID;
		@Override public ParserRule getRule() { return rule; }
		
		//BOOLEAN | STRING | Float | QualifiedID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_0() { return cBOOLEANTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
		
		//Float
		public RuleCall getFloatParserRuleCall_2() { return cFloatParserRuleCall_2; }
		
		//QualifiedID
		public RuleCall getQualifiedIDParserRuleCall_3() { return cQualifiedIDParserRuleCall_3; }
	}
	public class FloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.Float");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTFLOATTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNATURALTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Float ecore::EFloat:
		//	TFLOAT | NATURAL
		@Override public ParserRule getRule() { return rule; }
		
		//TFLOAT | NATURAL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TFLOAT
		public RuleCall getTFLOATTerminalRuleCall_0() { return cTFLOATTerminalRuleCall_0; }
		
		//NATURAL
		public RuleCall getNATURALTerminalRuleCall_1() { return cNATURALTerminalRuleCall_1; }
	}
	
	public class ArcElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.Arc");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOPENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOPENOpenKeyword_0_0 = (Keyword)cOPENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCHORDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCHORDChordKeyword_1_0 = (Keyword)cCHORDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPIEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPIEPieKeyword_2_0 = (Keyword)cPIEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Arc:
		//	OPEN='open' | CHORD='chord' | PIE='pie';
		public EnumRule getRule() { return rule; }
		
		//OPEN='open' | CHORD='chord' | PIE='pie'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OPEN='open'
		public EnumLiteralDeclaration getOPENEnumLiteralDeclaration_0() { return cOPENEnumLiteralDeclaration_0; }
		
		//'open'
		public Keyword getOPENOpenKeyword_0_0() { return cOPENOpenKeyword_0_0; }
		
		//CHORD='chord'
		public EnumLiteralDeclaration getCHORDEnumLiteralDeclaration_1() { return cCHORDEnumLiteralDeclaration_1; }
		
		//'chord'
		public Keyword getCHORDChordKeyword_1_0() { return cCHORDChordKeyword_1_0; }
		
		//PIE='pie'
		public EnumLiteralDeclaration getPIEEnumLiteralDeclaration_2() { return cPIEEnumLiteralDeclaration_2; }
		
		//'pie'
		public Keyword getPIEPieKeyword_2_0() { return cPIEPieKeyword_2_0; }
	}
	public class HorizontalAlignmentElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.HorizontalAlignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLEFTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLEFTLeftKeyword_0_0 = (Keyword)cLEFTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCENTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCENTERCenterKeyword_1_0 = (Keyword)cCENTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRIGHTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRIGHTRightKeyword_2_0 = (Keyword)cRIGHTEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum HorizontalAlignment:
		//	LEFT='left' | CENTER='center' | RIGHT='right';
		public EnumRule getRule() { return rule; }
		
		//LEFT='left' | CENTER='center' | RIGHT='right'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LEFT='left'
		public EnumLiteralDeclaration getLEFTEnumLiteralDeclaration_0() { return cLEFTEnumLiteralDeclaration_0; }
		
		//'left'
		public Keyword getLEFTLeftKeyword_0_0() { return cLEFTLeftKeyword_0_0; }
		
		//CENTER='center'
		public EnumLiteralDeclaration getCENTEREnumLiteralDeclaration_1() { return cCENTEREnumLiteralDeclaration_1; }
		
		//'center'
		public Keyword getCENTERCenterKeyword_1_0() { return cCENTERCenterKeyword_1_0; }
		
		//RIGHT='right'
		public EnumLiteralDeclaration getRIGHTEnumLiteralDeclaration_2() { return cRIGHTEnumLiteralDeclaration_2; }
		
		//'right'
		public Keyword getRIGHTRightKeyword_2_0() { return cRIGHTRightKeyword_2_0; }
	}
	public class VerticalAlignmentElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.VerticalAlignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTOPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTOPTopKeyword_0_0 = (Keyword)cTOPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCENTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCENTERCenterKeyword_1_0 = (Keyword)cCENTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOTTOMEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOTTOMBottomKeyword_2_0 = (Keyword)cBOTTOMEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VerticalAlignment:
		//	TOP='top' | CENTER='center' | BOTTOM='bottom';
		public EnumRule getRule() { return rule; }
		
		//TOP='top' | CENTER='center' | BOTTOM='bottom'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TOP='top'
		public EnumLiteralDeclaration getTOPEnumLiteralDeclaration_0() { return cTOPEnumLiteralDeclaration_0; }
		
		//'top'
		public Keyword getTOPTopKeyword_0_0() { return cTOPTopKeyword_0_0; }
		
		//CENTER='center'
		public EnumLiteralDeclaration getCENTEREnumLiteralDeclaration_1() { return cCENTEREnumLiteralDeclaration_1; }
		
		//'center'
		public Keyword getCENTERCenterKeyword_1_0() { return cCENTERCenterKeyword_1_0; }
		
		//BOTTOM='bottom'
		public EnumLiteralDeclaration getBOTTOMEnumLiteralDeclaration_2() { return cBOTTOMEnumLiteralDeclaration_2; }
		
		//'bottom'
		public Keyword getBOTTOMBottomKeyword_2_0() { return cBOTTOMBottomKeyword_2_0; }
	}
	public class UnderlineElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.Underline");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENoneKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSINGLESingleKeyword_1_0 = (Keyword)cSINGLEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDOUBLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDOUBLEDoubleKeyword_2_0 = (Keyword)cDOUBLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cERROREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cERRORErrorKeyword_3_0 = (Keyword)cERROREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSQUIGGLEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSQUIGGLESquiggleKeyword_4_0 = (Keyword)cSQUIGGLEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cLINKEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cLINKLinkKeyword_5_0 = (Keyword)cLINKEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Underline:
		//	NONE='none' | SINGLE='single' | DOUBLE='double' | ERROR='error' | SQUIGGLE="squiggle" | LINK='link';
		public EnumRule getRule() { return rule; }
		
		//NONE='none' | SINGLE='single' | DOUBLE='double' | ERROR='error' | SQUIGGLE="squiggle" | LINK='link'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NONE='none'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }
		
		//'none'
		public Keyword getNONENoneKeyword_0_0() { return cNONENoneKeyword_0_0; }
		
		//SINGLE='single'
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_1() { return cSINGLEEnumLiteralDeclaration_1; }
		
		//'single'
		public Keyword getSINGLESingleKeyword_1_0() { return cSINGLESingleKeyword_1_0; }
		
		//DOUBLE='double'
		public EnumLiteralDeclaration getDOUBLEEnumLiteralDeclaration_2() { return cDOUBLEEnumLiteralDeclaration_2; }
		
		//'double'
		public Keyword getDOUBLEDoubleKeyword_2_0() { return cDOUBLEDoubleKeyword_2_0; }
		
		//ERROR='error'
		public EnumLiteralDeclaration getERROREnumLiteralDeclaration_3() { return cERROREnumLiteralDeclaration_3; }
		
		//'error'
		public Keyword getERRORErrorKeyword_3_0() { return cERRORErrorKeyword_3_0; }
		
		//SQUIGGLE="squiggle"
		public EnumLiteralDeclaration getSQUIGGLEEnumLiteralDeclaration_4() { return cSQUIGGLEEnumLiteralDeclaration_4; }
		
		//"squiggle"
		public Keyword getSQUIGGLESquiggleKeyword_4_0() { return cSQUIGGLESquiggleKeyword_4_0; }
		
		//LINK='link'
		public EnumLiteralDeclaration getLINKEnumLiteralDeclaration_5() { return cLINKEnumLiteralDeclaration_5; }
		
		//'link'
		public Keyword getLINKLinkKeyword_5_0() { return cLINKLinkKeyword_5_0; }
	}
	public class LineStyleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.LineStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSOLIDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSOLIDSolidKeyword_0_0 = (Keyword)cSOLIDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDASHEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDASHDashKeyword_1_0 = (Keyword)cDASHEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDOTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDOTDotKeyword_2_0 = (Keyword)cDOTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDASHDOTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDASHDOTDashDotKeyword_3_0 = (Keyword)cDASHDOTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDASHDOTDOTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDASHDOTDOTDashDotDotKeyword_4_0 = (Keyword)cDASHDOTDOTEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCUSTOMEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCUSTOMCustomKeyword_5_0 = (Keyword)cCUSTOMEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum LineStyle:
		//	SOLID='solid' | DASH='dash' | DOT='dot' | DASHDOT='dash-dot' | DASHDOTDOT='dash-dot-dot' | CUSTOM='custom';
		public EnumRule getRule() { return rule; }
		
		//SOLID='solid' | DASH='dash' | DOT='dot' | DASHDOT='dash-dot' | DASHDOTDOT='dash-dot-dot' | CUSTOM='custom'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SOLID='solid'
		public EnumLiteralDeclaration getSOLIDEnumLiteralDeclaration_0() { return cSOLIDEnumLiteralDeclaration_0; }
		
		//'solid'
		public Keyword getSOLIDSolidKeyword_0_0() { return cSOLIDSolidKeyword_0_0; }
		
		//DASH='dash'
		public EnumLiteralDeclaration getDASHEnumLiteralDeclaration_1() { return cDASHEnumLiteralDeclaration_1; }
		
		//'dash'
		public Keyword getDASHDashKeyword_1_0() { return cDASHDashKeyword_1_0; }
		
		//DOT='dot'
		public EnumLiteralDeclaration getDOTEnumLiteralDeclaration_2() { return cDOTEnumLiteralDeclaration_2; }
		
		//'dot'
		public Keyword getDOTDotKeyword_2_0() { return cDOTDotKeyword_2_0; }
		
		//DASHDOT='dash-dot'
		public EnumLiteralDeclaration getDASHDOTEnumLiteralDeclaration_3() { return cDASHDOTEnumLiteralDeclaration_3; }
		
		//'dash-dot'
		public Keyword getDASHDOTDashDotKeyword_3_0() { return cDASHDOTDashDotKeyword_3_0; }
		
		//DASHDOTDOT='dash-dot-dot'
		public EnumLiteralDeclaration getDASHDOTDOTEnumLiteralDeclaration_4() { return cDASHDOTDOTEnumLiteralDeclaration_4; }
		
		//'dash-dot-dot'
		public Keyword getDASHDOTDOTDashDotDotKeyword_4_0() { return cDASHDOTDOTDashDotDotKeyword_4_0; }
		
		//CUSTOM='custom'
		public EnumLiteralDeclaration getCUSTOMEnumLiteralDeclaration_5() { return cCUSTOMEnumLiteralDeclaration_5; }
		
		//'custom'
		public Keyword getCUSTOMCustomKeyword_5_0() { return cCUSTOMCustomKeyword_5_0; }
	}
	public class LineCapElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.LineCap");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCAP_FLATEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCAP_FLATFlatKeyword_0_0 = (Keyword)cCAP_FLATEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCAP_ROUNDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCAP_ROUNDRoundKeyword_1_0 = (Keyword)cCAP_ROUNDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCAP_SQUAREEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCAP_SQUARESquareKeyword_2_0 = (Keyword)cCAP_SQUAREEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum LineCap:
		//	CAP_FLAT='flat' | CAP_ROUND='round' | CAP_SQUARE='square';
		public EnumRule getRule() { return rule; }
		
		//CAP_FLAT='flat' | CAP_ROUND='round' | CAP_SQUARE='square'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CAP_FLAT='flat'
		public EnumLiteralDeclaration getCAP_FLATEnumLiteralDeclaration_0() { return cCAP_FLATEnumLiteralDeclaration_0; }
		
		//'flat'
		public Keyword getCAP_FLATFlatKeyword_0_0() { return cCAP_FLATFlatKeyword_0_0; }
		
		//CAP_ROUND='round'
		public EnumLiteralDeclaration getCAP_ROUNDEnumLiteralDeclaration_1() { return cCAP_ROUNDEnumLiteralDeclaration_1; }
		
		//'round'
		public Keyword getCAP_ROUNDRoundKeyword_1_0() { return cCAP_ROUNDRoundKeyword_1_0; }
		
		//CAP_SQUARE='square'
		public EnumLiteralDeclaration getCAP_SQUAREEnumLiteralDeclaration_2() { return cCAP_SQUAREEnumLiteralDeclaration_2; }
		
		//'square'
		public Keyword getCAP_SQUARESquareKeyword_2_0() { return cCAP_SQUARESquareKeyword_2_0; }
	}
	public class LineJoinElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.LineJoin");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJOIN_MITEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJOIN_MITERMiterKeyword_0_0 = (Keyword)cJOIN_MITEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJOIN_ROUNDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJOIN_ROUNDRoundKeyword_1_0 = (Keyword)cJOIN_ROUNDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cJOIN_BEVELEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cJOIN_BEVELBevelKeyword_2_0 = (Keyword)cJOIN_BEVELEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum LineJoin:
		//	JOIN_MITER='miter' | JOIN_ROUND='round' | JOIN_BEVEL='bevel';
		public EnumRule getRule() { return rule; }
		
		//JOIN_MITER='miter' | JOIN_ROUND='round' | JOIN_BEVEL='bevel'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JOIN_MITER='miter'
		public EnumLiteralDeclaration getJOIN_MITEREnumLiteralDeclaration_0() { return cJOIN_MITEREnumLiteralDeclaration_0; }
		
		//'miter'
		public Keyword getJOIN_MITERMiterKeyword_0_0() { return cJOIN_MITERMiterKeyword_0_0; }
		
		//JOIN_ROUND='round'
		public EnumLiteralDeclaration getJOIN_ROUNDEnumLiteralDeclaration_1() { return cJOIN_ROUNDEnumLiteralDeclaration_1; }
		
		//'round'
		public Keyword getJOIN_ROUNDRoundKeyword_1_0() { return cJOIN_ROUNDRoundKeyword_1_0; }
		
		//JOIN_BEVEL='bevel'
		public EnumLiteralDeclaration getJOIN_BEVELEnumLiteralDeclaration_2() { return cJOIN_BEVELEnumLiteralDeclaration_2; }
		
		//'bevel'
		public Keyword getJOIN_BEVELBevelKeyword_2_0() { return cJOIN_BEVELBevelKeyword_2_0; }
	}
	public class TriggerElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.Trigger");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLECLICKEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLECLICKSingleClickKeyword_0_0 = (Keyword)cSINGLECLICKEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDOUBLECLICKEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDOUBLECLICKDoubleClickKeyword_1_0 = (Keyword)cDOUBLECLICKEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLE_OR_MULTICLICKEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSINGLE_OR_MULTICLICKSingleOrMultiClickKeyword_2_0 = (Keyword)cSINGLE_OR_MULTICLICKEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_SINGLECLICKEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMIDDLE_SINGLECLICKMiddleSingleClickKeyword_3_0 = (Keyword)cMIDDLE_SINGLECLICKEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_DOUBLECLICKEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMIDDLE_DOUBLECLICKMiddleDoubleClickKeyword_4_0 = (Keyword)cMIDDLE_DOUBLECLICKEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_SINGLE_OR_MULTICLICKEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMIDDLE_SINGLE_OR_MULTICLICKMiddleSingleOrMultiClickKeyword_5_0 = (Keyword)cMIDDLE_SINGLE_OR_MULTICLICKEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Trigger:
		//	SINGLECLICK='singleClick' | DOUBLECLICK='doubleClick' | SINGLE_OR_MULTICLICK='singleOrMultiClick'
		//	| MIDDLE_SINGLECLICK='middleSingleClick' | MIDDLE_DOUBLECLICK='middleDoubleClick' |
		//	MIDDLE_SINGLE_OR_MULTICLICK='middleSingleOrMultiClick';
		public EnumRule getRule() { return rule; }
		
		//SINGLECLICK='singleClick' | DOUBLECLICK='doubleClick' | SINGLE_OR_MULTICLICK='singleOrMultiClick' |
		//MIDDLE_SINGLECLICK='middleSingleClick' | MIDDLE_DOUBLECLICK='middleDoubleClick' |
		//MIDDLE_SINGLE_OR_MULTICLICK='middleSingleOrMultiClick'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SINGLECLICK='singleClick'
		public EnumLiteralDeclaration getSINGLECLICKEnumLiteralDeclaration_0() { return cSINGLECLICKEnumLiteralDeclaration_0; }
		
		//'singleClick'
		public Keyword getSINGLECLICKSingleClickKeyword_0_0() { return cSINGLECLICKSingleClickKeyword_0_0; }
		
		//DOUBLECLICK='doubleClick'
		public EnumLiteralDeclaration getDOUBLECLICKEnumLiteralDeclaration_1() { return cDOUBLECLICKEnumLiteralDeclaration_1; }
		
		//'doubleClick'
		public Keyword getDOUBLECLICKDoubleClickKeyword_1_0() { return cDOUBLECLICKDoubleClickKeyword_1_0; }
		
		//SINGLE_OR_MULTICLICK='singleOrMultiClick'
		public EnumLiteralDeclaration getSINGLE_OR_MULTICLICKEnumLiteralDeclaration_2() { return cSINGLE_OR_MULTICLICKEnumLiteralDeclaration_2; }
		
		//'singleOrMultiClick'
		public Keyword getSINGLE_OR_MULTICLICKSingleOrMultiClickKeyword_2_0() { return cSINGLE_OR_MULTICLICKSingleOrMultiClickKeyword_2_0; }
		
		//MIDDLE_SINGLECLICK='middleSingleClick'
		public EnumLiteralDeclaration getMIDDLE_SINGLECLICKEnumLiteralDeclaration_3() { return cMIDDLE_SINGLECLICKEnumLiteralDeclaration_3; }
		
		//'middleSingleClick'
		public Keyword getMIDDLE_SINGLECLICKMiddleSingleClickKeyword_3_0() { return cMIDDLE_SINGLECLICKMiddleSingleClickKeyword_3_0; }
		
		//MIDDLE_DOUBLECLICK='middleDoubleClick'
		public EnumLiteralDeclaration getMIDDLE_DOUBLECLICKEnumLiteralDeclaration_4() { return cMIDDLE_DOUBLECLICKEnumLiteralDeclaration_4; }
		
		//'middleDoubleClick'
		public Keyword getMIDDLE_DOUBLECLICKMiddleDoubleClickKeyword_4_0() { return cMIDDLE_DOUBLECLICKMiddleDoubleClickKeyword_4_0; }
		
		//MIDDLE_SINGLE_OR_MULTICLICK='middleSingleOrMultiClick'
		public EnumLiteralDeclaration getMIDDLE_SINGLE_OR_MULTICLICKEnumLiteralDeclaration_5() { return cMIDDLE_SINGLE_OR_MULTICLICKEnumLiteralDeclaration_5; }
		
		//'middleSingleOrMultiClick'
		public Keyword getMIDDLE_SINGLE_OR_MULTICLICKMiddleSingleOrMultiClickKeyword_5_0() { return cMIDDLE_SINGLE_OR_MULTICLICKMiddleSingleOrMultiClickKeyword_5_0; }
	}
	
	private final ParentKNodeElements pParentKNode;
	private final KNodeElements pKNode;
	private final KEdgeElements pKEdge;
	private final KLabelElements pKLabel;
	private final KPortElements pKPort;
	private final PropertyElements pProperty;
	private final KIdentifierElements pKIdentifier;
	private final KInsetsElements pKInsets;
	private final EmptyKInsetsElements pEmptyKInsets;
	private final KPointElements pKPoint;
	private final EmptyKPointElements pEmptyKPoint;
	private final KRenderingElements pKRendering;
	private final KSimpleRenderingElements pKSimpleRendering;
	private final KContainerRenderingElements pKContainerRendering;
	private final KRenderingRefElements pKRenderingRef;
	private final KChildAreaElements pKChildArea;
	private final KTextElements pKText;
	private final KRectangleElements pKRectangle;
	private final KRoundedRectangleElements pKRoundedRectangle;
	private final KEllipseElements pKEllipse;
	private final KArcElements pKArc;
	private final KCustomRenderingElements pKCustomRendering;
	private final KImageElements pKImage;
	private final KPolylineElements pKPolyline;
	private final KSimplePolylineElements pKSimplePolyline;
	private final KPolygonElements pKPolygon;
	private final KRoundedBendsPolylineElements pKRoundedBendsPolyline;
	private final KSplineElements pKSpline;
	private final KStyleElements pKStyle;
	private final KColoringElements pKColoring;
	private final KForegroundElements pKForeground;
	private final KBackgroundElements pKBackground;
	private final KFontBoldElements pKFontBold;
	private final KFontItalicElements pKFontItalic;
	private final KFontNameElements pKFontName;
	private final KFontSizeElements pKFontSize;
	private final KTextUnderlineElements pKTextUnderline;
	private final KHorizontalAlignmentElements pKHorizontalAlignment;
	private final KVerticalAlignmentElements pKVerticalAlignment;
	private final KInvisibilityElements pKInvisibility;
	private final KLineCapElements pKLineCap;
	private final KLineJoinElements pKLineJoin;
	private final KLineStyleElements pKLineStyle;
	private final KLineWidthElements pKLineWidth;
	private final KRotationElements pKRotation;
	private final KShadowElements pKShadow;
	private final KStyleRefElements pKStyleRef;
	private final KRenderingLibraryElements pKRenderingLibrary;
	private final KStyleHolderElements pKStyleHolder;
	private final KPlacementElements pKPlacement;
	private final KGridPlacementElements pKGridPlacement;
	private final KPlacementDataElements pKPlacementData;
	private final KAreaPlacementDataElements pKAreaPlacementData;
	private final KPointPlacementDataElements pKPointPlacementData;
	private final KGridPlacementDataElements pKGridPlacementData;
	private final KDecoratorPlacementDataElements pKDecoratorPlacementData;
	private final KActionElements pKAction;
	private final KPositionElements pKPosition;
	private final KXPositionElements pKXPosition;
	private final KLeftPositionElements pKLeftPosition;
	private final KRightPositionElements pKRightPosition;
	private final KYPositionElements pKYPosition;
	private final KTopPositionElements pKTopPosition;
	private final KBottomPositionElements pKBottomPosition;
	private final KColorElements pKColor;
	private final QualifiedIDElements pQualifiedID;
	private final PropertyValueElements pPropertyValue;
	private final FloatElements pFloat;
	private final ArcElements eArc;
	private final HorizontalAlignmentElements eHorizontalAlignment;
	private final VerticalAlignmentElements eVerticalAlignment;
	private final UnderlineElements eUnderline;
	private final LineStyleElements eLineStyle;
	private final LineCapElements eLineCap;
	private final LineJoinElements eLineJoin;
	private final TriggerElements eTrigger;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tRED;
	private final TerminalRule tGREEN;
	private final TerminalRule tBLUE;
	private final TerminalRule tALPHA;
	private final TerminalRule tFSIZE;
	private final TerminalRule tDEGREES;
	private final TerminalRule tPERCENT;
	private final TerminalRule tTFLOAT;
	private final TerminalRule tNATURAL;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public KGraphGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pParentKNode = new ParentKNodeElements();
		this.pKNode = new KNodeElements();
		this.pKEdge = new KEdgeElements();
		this.pKLabel = new KLabelElements();
		this.pKPort = new KPortElements();
		this.pProperty = new PropertyElements();
		this.pKIdentifier = new KIdentifierElements();
		this.pKInsets = new KInsetsElements();
		this.pEmptyKInsets = new EmptyKInsetsElements();
		this.pKPoint = new KPointElements();
		this.pEmptyKPoint = new EmptyKPointElements();
		this.pKRendering = new KRenderingElements();
		this.pKSimpleRendering = new KSimpleRenderingElements();
		this.pKContainerRendering = new KContainerRenderingElements();
		this.pKRenderingRef = new KRenderingRefElements();
		this.pKChildArea = new KChildAreaElements();
		this.pKText = new KTextElements();
		this.pKRectangle = new KRectangleElements();
		this.pKRoundedRectangle = new KRoundedRectangleElements();
		this.pKEllipse = new KEllipseElements();
		this.pKArc = new KArcElements();
		this.pKCustomRendering = new KCustomRenderingElements();
		this.pKImage = new KImageElements();
		this.pKPolyline = new KPolylineElements();
		this.pKSimplePolyline = new KSimplePolylineElements();
		this.pKPolygon = new KPolygonElements();
		this.pKRoundedBendsPolyline = new KRoundedBendsPolylineElements();
		this.pKSpline = new KSplineElements();
		this.pKStyle = new KStyleElements();
		this.pKColoring = new KColoringElements();
		this.pKForeground = new KForegroundElements();
		this.pKBackground = new KBackgroundElements();
		this.pKFontBold = new KFontBoldElements();
		this.pKFontItalic = new KFontItalicElements();
		this.pKFontName = new KFontNameElements();
		this.pKFontSize = new KFontSizeElements();
		this.pKTextUnderline = new KTextUnderlineElements();
		this.pKHorizontalAlignment = new KHorizontalAlignmentElements();
		this.pKVerticalAlignment = new KVerticalAlignmentElements();
		this.pKInvisibility = new KInvisibilityElements();
		this.pKLineCap = new KLineCapElements();
		this.pKLineJoin = new KLineJoinElements();
		this.pKLineStyle = new KLineStyleElements();
		this.pKLineWidth = new KLineWidthElements();
		this.pKRotation = new KRotationElements();
		this.pKShadow = new KShadowElements();
		this.pKStyleRef = new KStyleRefElements();
		this.pKRenderingLibrary = new KRenderingLibraryElements();
		this.pKStyleHolder = new KStyleHolderElements();
		this.pKPlacement = new KPlacementElements();
		this.pKGridPlacement = new KGridPlacementElements();
		this.pKPlacementData = new KPlacementDataElements();
		this.pKAreaPlacementData = new KAreaPlacementDataElements();
		this.pKPointPlacementData = new KPointPlacementDataElements();
		this.pKGridPlacementData = new KGridPlacementDataElements();
		this.pKDecoratorPlacementData = new KDecoratorPlacementDataElements();
		this.pKAction = new KActionElements();
		this.pKPosition = new KPositionElements();
		this.pKXPosition = new KXPositionElements();
		this.pKLeftPosition = new KLeftPositionElements();
		this.pKRightPosition = new KRightPositionElements();
		this.pKYPosition = new KYPositionElements();
		this.pKTopPosition = new KTopPositionElements();
		this.pKBottomPosition = new KBottomPositionElements();
		this.pKColor = new KColorElements();
		this.pQualifiedID = new QualifiedIDElements();
		this.pPropertyValue = new PropertyValueElements();
		this.pFloat = new FloatElements();
		this.eArc = new ArcElements();
		this.eHorizontalAlignment = new HorizontalAlignmentElements();
		this.eVerticalAlignment = new VerticalAlignmentElements();
		this.eUnderline = new UnderlineElements();
		this.eLineStyle = new LineStyleElements();
		this.eLineCap = new LineCapElements();
		this.eLineJoin = new LineJoinElements();
		this.eTrigger = new TriggerElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.BOOLEAN");
		this.tRED = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.RED");
		this.tGREEN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.GREEN");
		this.tBLUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.BLUE");
		this.tALPHA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.ALPHA");
		this.tFSIZE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.FSIZE");
		this.tDEGREES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.DEGREES");
		this.tPERCENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.PERCENT");
		this.tTFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.TFLOAT");
		this.tNATURAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.NATURAL");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.kgraph.text.KGraph.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.kgraph.text.KGraph".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	////----------------- KGraph -----------------
	//ParentKNode KNode:
	//	{KNode} ('kgraph' data+=KIdentifier?)? (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
	//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
	//	& ('properties' ':' persistentEntries+=Property*)?) ('insets' ':' insets=KInsets | insets=EmptyKInsets)
	//	(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge
	//	| data+=KRendering | data+=KRenderingLibrary)*
	public ParentKNodeElements getParentKNodeAccess() {
		return pParentKNode;
	}
	
	public ParserRule getParentKNodeRule() {
		return getParentKNodeAccess().getRule();
	}
	
	//KNode:
	//	{KNode}
	//	'knode' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
	//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
	//	& ('properties' ':' persistentEntries+=Property*)?) ('insets' ':' insets=KInsets | insets=EmptyKInsets)
	//	(labels+=KLabel | children+=KNode | ports+=KPort | outgoingEdges+=KEdge
	//	| data+=KRendering | data+=KRenderingLibrary)*
	//	'}')?;
	public KNodeElements getKNodeAccess() {
		return pKNode;
	}
	
	public ParserRule getKNodeRule() {
		return getKNodeAccess().getRule();
	}
	
	//KEdge:
	//	'kedge' data+=KIdentifier? '(' (':' sourcePort=[KPort|QualifiedID])?
	//	'->' target=[KNode|QualifiedID] (':' targetPort=[KPort|QualifiedID])? ')' ('{' ('points' ':' (sourcePoint=KPoint (';'
	//	(bendPoints+=KPoint ';')* targetPoint=KPoint | targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint
	//	targetPoint=EmptyKPoint) | sourcePoint=EmptyKPoint targetPoint=EmptyKPoint) ('properties' ':'
	//	persistentEntries+=Property*)? (labels+=KLabel | data+=KRendering)*
	//	'}')?;
	public KEdgeElements getKEdgeAccess() {
		return pKEdge;
	}
	
	public ParserRule getKEdgeRule() {
		return getKEdgeAccess().getRule();
	}
	
	//KLabel:
	//	{KLabel}
	//	'klabel' data+=KIdentifier? text=STRING? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
	//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
	//	& ('properties' ':' persistentEntries+=Property*)?) data+=KRendering*
	//	'}')?;
	public KLabelElements getKLabelAccess() {
		return pKLabel;
	}
	
	public ParserRule getKLabelRule() {
		return getKLabelAccess().getRule();
	}
	
	//KPort:
	//	{KPort}
	//	'kport' data+=KIdentifier? ('{' (('pos' ':' (('x' '=' xpos=Float)? & ('y' '=' ypos=Float)?))?
	//	& ('size' ':' (('width' '=' width=Float)? & ('height' '=' height=Float)?))?
	//	& ('properties' ':' persistentEntries+=Property*)?) (labels+=KLabel | data+=KRendering)*
	//	'}')?;
	public KPortElements getKPortAccess() {
		return pKPort;
	}
	
	public ParserRule getKPortRule() {
		return getKPortAccess().getRule();
	}
	
	////-------------- KLayoutData ---------------
	//Property PersistentEntry:
	//	key=QualifiedID '=' value=PropertyValue
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//KIdentifier:
	//	id=QualifiedID ('[' persistentEntries+=Property* ']')?;
	public KIdentifierElements getKIdentifierAccess() {
		return pKIdentifier;
	}
	
	public ParserRule getKIdentifierRule() {
		return getKIdentifierAccess().getRule();
	}
	
	//KInsets:
	//	{KInsets} (('top' '=' top=Float)? & ('bottom' '=' bottom=Float)?
	//	& ('left' '=' left=Float)? & ('right' '=' right=Float)?);
	public KInsetsElements getKInsetsAccess() {
		return pKInsets;
	}
	
	public ParserRule getKInsetsRule() {
		return getKInsetsAccess().getRule();
	}
	
	//EmptyKInsets KInsets:
	//	{KInsets}
	public EmptyKInsetsElements getEmptyKInsetsAccess() {
		return pEmptyKInsets;
	}
	
	public ParserRule getEmptyKInsetsRule() {
		return getEmptyKInsetsAccess().getRule();
	}
	
	//KPoint:
	//	x=Float ',' y=Float;
	public KPointElements getKPointAccess() {
		return pKPoint;
	}
	
	public ParserRule getKPointRule() {
		return getKPointAccess().getRule();
	}
	
	//EmptyKPoint KPoint:
	//	{KPoint}
	public EmptyKPointElements getEmptyKPointAccess() {
		return pEmptyKPoint;
	}
	
	public ParserRule getEmptyKPointRule() {
		return getEmptyKPointAccess().getRule();
	}
	
	////--------------- KRendering ---------------
	//KRendering:
	//	KSimpleRendering | KContainerRendering | KPolyline;
	public KRenderingElements getKRenderingAccess() {
		return pKRendering;
	}
	
	public ParserRule getKRenderingRule() {
		return getKRenderingAccess().getRule();
	}
	
	//KSimpleRendering KRendering:
	//	(KRenderingRef | KChildArea | KText) id=QualifiedID? ('[' persistentEntries+=Property* ']')? ('{' (('styles' ':'
	//	styles+=KStyle*)?
	//	& ('actions' ':' actions+=KAction*)?
	//	& placementData=KPlacementData?)
	//	'}')?
	public KSimpleRenderingElements getKSimpleRenderingAccess() {
		return pKSimpleRendering;
	}
	
	public ParserRule getKSimpleRenderingRule() {
		return getKSimpleRenderingAccess().getRule();
	}
	
	//KContainerRendering:
	//	(KRectangle | KRoundedRectangle | KEllipse | KArc | KCustomRendering | KImage) id=QualifiedID? ('['
	//	persistentEntries+=Property* ']')? ('{' (('styles' ':' styles+=KStyle*)?
	//	& ('actions' ':' actions+=KAction*)?
	//	& placementData=KPlacementData?
	//	& childPlacement=KPlacement?) children+=KRendering*
	//	'}')?;
	public KContainerRenderingElements getKContainerRenderingAccess() {
		return pKContainerRendering;
	}
	
	public ParserRule getKContainerRenderingRule() {
		return getKContainerRenderingAccess().getRule();
	}
	
	//KRenderingRef:
	//	'krendering' '*' rendering=[KRendering|QualifiedID];
	public KRenderingRefElements getKRenderingRefAccess() {
		return pKRenderingRef;
	}
	
	public ParserRule getKRenderingRefRule() {
		return getKRenderingRefAccess().getRule();
	}
	
	//KChildArea:
	//	{KChildArea}
	//	'kchildArea';
	public KChildAreaElements getKChildAreaAccess() {
		return pKChildArea;
	}
	
	public ParserRule getKChildAreaRule() {
		return getKChildAreaAccess().getRule();
	}
	
	//KText:
	//	{KText}
	//	'ktext' ('(' text=STRING (',' cursorSelectable=BOOLEAN)? ')')?;
	public KTextElements getKTextAccess() {
		return pKText;
	}
	
	public ParserRule getKTextRule() {
		return getKTextAccess().getRule();
	}
	
	//KRectangle:
	//	{KRectangle}
	//	'krectangle';
	public KRectangleElements getKRectangleAccess() {
		return pKRectangle;
	}
	
	public ParserRule getKRectangleRule() {
		return getKRectangleAccess().getRule();
	}
	
	//KRoundedRectangle:
	//	{KRoundedRectangle}
	//	'kroundedRectangle' ('(' cornerWidth=Float ',' cornerHeight=Float ')')?;
	public KRoundedRectangleElements getKRoundedRectangleAccess() {
		return pKRoundedRectangle;
	}
	
	public ParserRule getKRoundedRectangleRule() {
		return getKRoundedRectangleAccess().getRule();
	}
	
	//KEllipse:
	//	{KEllipse}
	//	'kellipse';
	public KEllipseElements getKEllipseAccess() {
		return pKEllipse;
	}
	
	public ParserRule getKEllipseRule() {
		return getKEllipseAccess().getRule();
	}
	
	//KArc:
	//	{KArc}
	//	'karc' ('(' startAngle=DEGREES ',' arcAngle=DEGREES (',' arcType=Arc)? ')');
	public KArcElements getKArcAccess() {
		return pKArc;
	}
	
	public ParserRule getKArcRule() {
		return getKArcAccess().getRule();
	}
	
	//KCustomRendering:
	//	{KCustomRendering}
	//	'kcustomRendering' ('(' (bundleName=QualifiedID ':')? className=QualifiedID ')')?;
	public KCustomRenderingElements getKCustomRenderingAccess() {
		return pKCustomRendering;
	}
	
	public ParserRule getKCustomRenderingRule() {
		return getKCustomRenderingAccess().getRule();
	}
	
	//KImage:
	//	{KImage}
	//	'kimage' ('(' (bundleName=QualifiedID ':')? imagePath=STRING ('clipShape' clipShape=KRendering)? ')')?;
	public KImageElements getKImageAccess() {
		return pKImage;
	}
	
	public ParserRule getKImageRule() {
		return getKImageAccess().getRule();
	}
	
	//KPolyline:
	//	(KSimplePolyline | KPolygon | KRoundedBendsPolyline | KSpline) id=QualifiedID? ('[' persistentEntries+=Property* ']')?
	//	('{' (('points' ':' (points+=KPosition (';' points+=KPosition)*)?)?
	//	& ('styles' ':' styles+=KStyle*)?
	//	& ('actions' ':' actions+=KAction*)?
	//	& placementData=KPlacementData?
	//	& childPlacement=KPlacement?) ('junction' junctionPointRendering=KRendering)?
	//	children+=KRendering*
	//	'}')?;
	public KPolylineElements getKPolylineAccess() {
		return pKPolyline;
	}
	
	public ParserRule getKPolylineRule() {
		return getKPolylineAccess().getRule();
	}
	
	//KSimplePolyline KPolyline:
	//	{KPolyline}
	//	'kpolyline'
	public KSimplePolylineElements getKSimplePolylineAccess() {
		return pKSimplePolyline;
	}
	
	public ParserRule getKSimplePolylineRule() {
		return getKSimplePolylineAccess().getRule();
	}
	
	//KPolygon:
	//	{KPolygon}
	//	'kpolygon';
	public KPolygonElements getKPolygonAccess() {
		return pKPolygon;
	}
	
	public ParserRule getKPolygonRule() {
		return getKPolygonAccess().getRule();
	}
	
	//KRoundedBendsPolyline:
	//	{KRoundedBendsPolyline}
	//	'kroundedPolyline' ('(' bendRadius=Float ')')?;
	public KRoundedBendsPolylineElements getKRoundedBendsPolylineAccess() {
		return pKRoundedBendsPolyline;
	}
	
	public ParserRule getKRoundedBendsPolylineRule() {
		return getKRoundedBendsPolylineAccess().getRule();
	}
	
	//KSpline:
	//	{KSpline}
	//	'kspline';
	public KSplineElements getKSplineAccess() {
		return pKSpline;
	}
	
	public ParserRule getKSplineRule() {
		return getKSplineAccess().getRule();
	}
	
	////----------------- KStyle -----------------
	//KStyle:
	//	(KColoring | KFontBold | KFontItalic | KFontName | KFontSize | KTextUnderline
	//	| KHorizontalAlignment | KVerticalAlignment | KInvisibility | KLineCap | KLineJoin
	//	| KLineStyle | KLineWidth | KRotation | KShadow | KStyleRef) ('modifier' modifierId=QualifiedID)?;
	public KStyleElements getKStyleAccess() {
		return pKStyle;
	}
	
	public ParserRule getKStyleRule() {
		return getKStyleAccess().getRule();
	}
	
	//KColoring:
	//	(KForeground | KBackground) '=' ('null' | color=KColor (',' alpha=ALPHA)? ('->' targetColor=KColor (','
	//	targetAlpha=ALPHA)? ('(' gradientAngle=Float ')')?)?);
	public KColoringElements getKColoringAccess() {
		return pKColoring;
	}
	
	public ParserRule getKColoringRule() {
		return getKColoringAccess().getRule();
	}
	
	//KForeground:
	//	{KForeground} propagateToChildren?='propagate'? selection?='selection'? 'foreground';
	public KForegroundElements getKForegroundAccess() {
		return pKForeground;
	}
	
	public ParserRule getKForegroundRule() {
		return getKForegroundAccess().getRule();
	}
	
	//KBackground:
	//	{KBackground} propagateToChildren?='propagate'? selection?='selection'? 'background';
	public KBackgroundElements getKBackgroundAccess() {
		return pKBackground;
	}
	
	public ParserRule getKBackgroundRule() {
		return getKBackgroundAccess().getRule();
	}
	
	//KFontBold:
	//	propagateToChildren?='propagate'? selection?='selection'? 'bold' '=' bold=BOOLEAN;
	public KFontBoldElements getKFontBoldAccess() {
		return pKFontBold;
	}
	
	public ParserRule getKFontBoldRule() {
		return getKFontBoldAccess().getRule();
	}
	
	//KFontItalic:
	//	propagateToChildren?='propagate'? selection?='selection'? 'italic' '=' italic=BOOLEAN;
	public KFontItalicElements getKFontItalicAccess() {
		return pKFontItalic;
	}
	
	public ParserRule getKFontItalicRule() {
		return getKFontItalicAccess().getRule();
	}
	
	//KFontName:
	//	propagateToChildren?='propagate'? selection?='selection'? 'fontName' '=' name=STRING;
	public KFontNameElements getKFontNameAccess() {
		return pKFontName;
	}
	
	public ParserRule getKFontNameRule() {
		return getKFontNameAccess().getRule();
	}
	
	//KFontSize:
	//	propagateToChildren?='propagate'? selection?='selection'? scaleWithZoom?='scale'?
	//	'fontSize' '=' size=FSIZE;
	public KFontSizeElements getKFontSizeAccess() {
		return pKFontSize;
	}
	
	public ParserRule getKFontSizeRule() {
		return getKFontSizeAccess().getRule();
	}
	
	//KTextUnderline:
	//	propagateToChildren?='propagate'? selection?='selection'? 'underline' '=' underline=Underline;
	public KTextUnderlineElements getKTextUnderlineAccess() {
		return pKTextUnderline;
	}
	
	public ParserRule getKTextUnderlineRule() {
		return getKTextUnderlineAccess().getRule();
	}
	
	//KHorizontalAlignment:
	//	propagateToChildren?='propagate'? selection?='selection'? 'hAlign' '=' horizontalAlignment=HorizontalAlignment;
	public KHorizontalAlignmentElements getKHorizontalAlignmentAccess() {
		return pKHorizontalAlignment;
	}
	
	public ParserRule getKHorizontalAlignmentRule() {
		return getKHorizontalAlignmentAccess().getRule();
	}
	
	//KVerticalAlignment:
	//	propagateToChildren?='propagate'? selection?='selection'? 'vAlign' '=' verticalAlignment=VerticalAlignment;
	public KVerticalAlignmentElements getKVerticalAlignmentAccess() {
		return pKVerticalAlignment;
	}
	
	public ParserRule getKVerticalAlignmentRule() {
		return getKVerticalAlignmentAccess().getRule();
	}
	
	//KInvisibility:
	//	propagateToChildren?='propagate'? selection?='selection'? 'invisible' '=' invisible=BOOLEAN;
	public KInvisibilityElements getKInvisibilityAccess() {
		return pKInvisibility;
	}
	
	public ParserRule getKInvisibilityRule() {
		return getKInvisibilityAccess().getRule();
	}
	
	//KLineCap:
	//	propagateToChildren?='propagate'? selection?='selection'? 'lineCap' '=' lineCap=LineCap;
	public KLineCapElements getKLineCapAccess() {
		return pKLineCap;
	}
	
	public ParserRule getKLineCapRule() {
		return getKLineCapAccess().getRule();
	}
	
	//KLineJoin:
	//	propagateToChildren?='propagate'? selection?='selection'? 'lineJoin' '=' lineJoin=LineJoin;
	public KLineJoinElements getKLineJoinAccess() {
		return pKLineJoin;
	}
	
	public ParserRule getKLineJoinRule() {
		return getKLineJoinAccess().getRule();
	}
	
	//KLineStyle:
	//	propagateToChildren?='propagate'? selection?='selection'? 'lineStyle' '=' lineStyle=LineStyle ('dashOffset' '='
	//	dashOffset=Float)? ('dashPattern' '=' dashPattern+=Float*)?;
	public KLineStyleElements getKLineStyleAccess() {
		return pKLineStyle;
	}
	
	public ParserRule getKLineStyleRule() {
		return getKLineStyleAccess().getRule();
	}
	
	//KLineWidth:
	//	propagateToChildren?='propagate'? selection?='selection'? 'lineWidth' '=' lineWidth=Float;
	public KLineWidthElements getKLineWidthAccess() {
		return pKLineWidth;
	}
	
	public ParserRule getKLineWidthRule() {
		return getKLineWidthAccess().getRule();
	}
	
	//KRotation:
	//	propagateToChildren?='propagate'? selection?='selection'? 'rotation' '=' rotation=Float ('(' 'anchor' '='
	//	rotationAnchor=KPosition ')')?;
	public KRotationElements getKRotationAccess() {
		return pKRotation;
	}
	
	public ParserRule getKRotationRule() {
		return getKRotationAccess().getRule();
	}
	
	//KShadow:
	//	{KShadow} propagateToChildren?='propagate'? selection?='selection'? 'shadow' '=' color=KColor? ('(' xOffset=Float ','
	//	yOffset=Float (',' blur=Float)? ')')?;
	public KShadowElements getKShadowAccess() {
		return pKShadow;
	}
	
	public ParserRule getKShadowRule() {
		return getKShadowAccess().getRule();
	}
	
	//KStyleRef:
	//	selection?='selection'? 'reference' '=' styleHolder=[KStyleHolder|QualifiedID];
	public KStyleRefElements getKStyleRefAccess() {
		return pKStyleRef;
	}
	
	public ParserRule getKStyleRefRule() {
		return getKStyleRefAccess().getRule();
	}
	
	////----------- KRendering Utility ------------
	//KRenderingLibrary:
	//	{KRenderingLibrary}
	//	'krenderingLibrary' ('[' persistentEntries+=Property* ']')? '{' (renderings+=KRendering | renderings+=KStyleHolder)*
	//	'}';
	public KRenderingLibraryElements getKRenderingLibraryAccess() {
		return pKRenderingLibrary;
	}
	
	public ParserRule getKRenderingLibraryRule() {
		return getKRenderingLibraryAccess().getRule();
	}
	
	//KStyleHolder:
	//	{KStyleHolder}
	//	'kstylesTemplate' id=QualifiedID? '{'
	//	styles+=KStyle*
	//	'}';
	public KStyleHolderElements getKStyleHolderAccess() {
		return pKStyleHolder;
	}
	
	public ParserRule getKStyleHolderRule() {
		return getKStyleHolderAccess().getRule();
	}
	
	//KPlacement:
	//	KGridPlacement;
	public KPlacementElements getKPlacementAccess() {
		return pKPlacement;
	}
	
	public ParserRule getKPlacementRule() {
		return getKPlacementAccess().getRule();
	}
	
	//KGridPlacement:
	//	{KGridPlacement}
	//	'grid' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
	//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?
	//	& ('columns' '=' numColumns=NATURAL)?);
	public KGridPlacementElements getKGridPlacementAccess() {
		return pKGridPlacement;
	}
	
	public ParserRule getKGridPlacementRule() {
		return getKGridPlacementAccess().getRule();
	}
	
	//KPlacementData:
	//	KAreaPlacementData | KPointPlacementData | KGridPlacementData | KDecoratorPlacementData;
	public KPlacementDataElements getKPlacementDataAccess() {
		return pKPlacementData;
	}
	
	public ParserRule getKPlacementDataRule() {
		return getKPlacementDataAccess().getRule();
	}
	
	//KAreaPlacementData:
	//	{KAreaPlacementData}
	//	'areaData' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
	//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?);
	public KAreaPlacementDataElements getKAreaPlacementDataAccess() {
		return pKAreaPlacementData;
	}
	
	public ParserRule getKAreaPlacementDataRule() {
		return getKAreaPlacementDataAccess().getRule();
	}
	
	//KPointPlacementData:
	//	{KPointPlacementData}
	//	'pointData' ':' (('referencePoint' '=' referencePoint=KPosition)?
	//	& ('minimalWidth' '=' minWidth=Float)?
	//	& ('minimalHeight' '=' minHeight=Float)?
	//	& ('horizontalAlignment' '=' horizontalAlignment=HorizontalAlignment)?
	//	& ('verticalAlignment' '=' verticalAlignment=VerticalAlignment)?
	//	& ('horizontalMargin' '=' horizontalMargin=Float)?
	//	& ('verticalMargin' '=' verticalMargin=Float)?);
	public KPointPlacementDataElements getKPointPlacementDataAccess() {
		return pKPointPlacementData;
	}
	
	public ParserRule getKPointPlacementDataRule() {
		return getKPointPlacementDataAccess().getRule();
	}
	
	//KGridPlacementData:
	//	{KGridPlacementData}
	//	'gridData' ':' (('topLeftAnchor' '=' topLeft=KPosition)?
	//	& ('bottomRightAnchor' '=' bottomRight=KPosition)?
	//	& ('minCellWidth' '=' minCellWidth=Float)?
	//	& ('minCellHeight' '=' minCellHeight=Float)?
	//	& ('flexibleWidth' '=' flexibleWidth=BOOLEAN)?
	//	& ('flexibleHeight' '=' flexibleHeight=BOOLEAN)?);
	public KGridPlacementDataElements getKGridPlacementDataAccess() {
		return pKGridPlacementData;
	}
	
	public ParserRule getKGridPlacementDataRule() {
		return getKGridPlacementDataAccess().getRule();
	}
	
	//KDecoratorPlacementData:
	//	{KDecoratorPlacementData}
	//	'decoratorData' ':' (('xoffset' '=' xOffset=Float)?
	//	& ('yoffset' '=' yOffset=Float)?
	//	& ('width' '=' width=Float)?
	//	& ('height' '=' height=Float)?
	//	& ('relativePos' '=' relative=Float)?
	//	& ('absolutePos' '=' absolute=Float)?
	//	& ('rotateWithLine' '=' rotateWithLine=BOOLEAN)?);
	public KDecoratorPlacementDataElements getKDecoratorPlacementDataAccess() {
		return pKDecoratorPlacementData;
	}
	
	public ParserRule getKDecoratorPlacementDataRule() {
		return getKDecoratorPlacementDataAccess().getRule();
	}
	
	//KAction:
	//	trigger=Trigger '=>' actionId=QualifiedID;
	public KActionElements getKActionAccess() {
		return pKAction;
	}
	
	public ParserRule getKActionRule() {
		return getKActionAccess().getRule();
	}
	
	//KPosition:
	//	x=KXPosition ',' y=KYPosition;
	public KPositionElements getKPositionAccess() {
		return pKPosition;
	}
	
	public ParserRule getKPositionRule() {
		return getKPositionAccess().getRule();
	}
	
	//KXPosition:
	//	(KLeftPosition | KRightPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?;
	public KXPositionElements getKXPositionAccess() {
		return pKXPosition;
	}
	
	public ParserRule getKXPositionRule() {
		return getKXPositionAccess().getRule();
	}
	
	//KLeftPosition:
	//	{KLeftPosition}
	//	'left';
	public KLeftPositionElements getKLeftPositionAccess() {
		return pKLeftPosition;
	}
	
	public ParserRule getKLeftPositionRule() {
		return getKLeftPositionAccess().getRule();
	}
	
	//KRightPosition:
	//	{KRightPosition}
	//	'right';
	public KRightPositionElements getKRightPositionAccess() {
		return pKRightPosition;
	}
	
	public ParserRule getKRightPositionRule() {
		return getKRightPositionAccess().getRule();
	}
	
	//KYPosition:
	//	(KTopPosition | KBottomPosition) (relative=PERCENT | (relative=PERCENT '+')? absolute=Float)?;
	public KYPositionElements getKYPositionAccess() {
		return pKYPosition;
	}
	
	public ParserRule getKYPositionRule() {
		return getKYPositionAccess().getRule();
	}
	
	//KTopPosition:
	//	{KTopPosition}
	//	'top';
	public KTopPositionElements getKTopPositionAccess() {
		return pKTopPosition;
	}
	
	public ParserRule getKTopPositionRule() {
		return getKTopPositionAccess().getRule();
	}
	
	//KBottomPosition:
	//	{KBottomPosition}
	//	'bottom';
	public KBottomPositionElements getKBottomPositionAccess() {
		return pKBottomPosition;
	}
	
	public ParserRule getKBottomPositionRule() {
		return getKBottomPositionAccess().getRule();
	}
	
	//KColor:
	//	red=RED (',' green=GREEN)? (',' blue=BLUE)? | green=GREEN (',' blue=BLUE)? | blue=BLUE;
	public KColorElements getKColorAccess() {
		return pKColor;
	}
	
	public ParserRule getKColorRule() {
		return getKColorAccess().getRule();
	}
	
	////--------------- Terminals ----------------
	//QualifiedID:
	//	ID ('.' ID)*;
	public QualifiedIDElements getQualifiedIDAccess() {
		return pQualifiedID;
	}
	
	public ParserRule getQualifiedIDRule() {
		return getQualifiedIDAccess().getRule();
	}
	
	//PropertyValue:
	//	BOOLEAN | STRING | Float | QualifiedID;
	public PropertyValueElements getPropertyValueAccess() {
		return pPropertyValue;
	}
	
	public ParserRule getPropertyValueRule() {
		return getPropertyValueAccess().getRule();
	}
	
	//Float ecore::EFloat:
	//	TFLOAT | NATURAL
	public FloatElements getFloatAccess() {
		return pFloat;
	}
	
	public ParserRule getFloatRule() {
		return getFloatAccess().getRule();
	}
	
	//enum Arc:
	//	OPEN='open' | CHORD='chord' | PIE='pie';
	public ArcElements getArcAccess() {
		return eArc;
	}
	
	public EnumRule getArcRule() {
		return getArcAccess().getRule();
	}
	
	//enum HorizontalAlignment:
	//	LEFT='left' | CENTER='center' | RIGHT='right';
	public HorizontalAlignmentElements getHorizontalAlignmentAccess() {
		return eHorizontalAlignment;
	}
	
	public EnumRule getHorizontalAlignmentRule() {
		return getHorizontalAlignmentAccess().getRule();
	}
	
	//enum VerticalAlignment:
	//	TOP='top' | CENTER='center' | BOTTOM='bottom';
	public VerticalAlignmentElements getVerticalAlignmentAccess() {
		return eVerticalAlignment;
	}
	
	public EnumRule getVerticalAlignmentRule() {
		return getVerticalAlignmentAccess().getRule();
	}
	
	//enum Underline:
	//	NONE='none' | SINGLE='single' | DOUBLE='double' | ERROR='error' | SQUIGGLE="squiggle" | LINK='link';
	public UnderlineElements getUnderlineAccess() {
		return eUnderline;
	}
	
	public EnumRule getUnderlineRule() {
		return getUnderlineAccess().getRule();
	}
	
	//enum LineStyle:
	//	SOLID='solid' | DASH='dash' | DOT='dot' | DASHDOT='dash-dot' | DASHDOTDOT='dash-dot-dot' | CUSTOM='custom';
	public LineStyleElements getLineStyleAccess() {
		return eLineStyle;
	}
	
	public EnumRule getLineStyleRule() {
		return getLineStyleAccess().getRule();
	}
	
	//enum LineCap:
	//	CAP_FLAT='flat' | CAP_ROUND='round' | CAP_SQUARE='square';
	public LineCapElements getLineCapAccess() {
		return eLineCap;
	}
	
	public EnumRule getLineCapRule() {
		return getLineCapAccess().getRule();
	}
	
	//enum LineJoin:
	//	JOIN_MITER='miter' | JOIN_ROUND='round' | JOIN_BEVEL='bevel';
	public LineJoinElements getLineJoinAccess() {
		return eLineJoin;
	}
	
	public EnumRule getLineJoinRule() {
		return getLineJoinAccess().getRule();
	}
	
	//enum Trigger:
	//	SINGLECLICK='singleClick' | DOUBLECLICK='doubleClick' | SINGLE_OR_MULTICLICK='singleOrMultiClick'
	//	| MIDDLE_SINGLECLICK='middleSingleClick' | MIDDLE_DOUBLECLICK='middleDoubleClick' |
	//	MIDDLE_SINGLE_OR_MULTICLICK='middleSingleOrMultiClick';
	public TriggerElements getTriggerAccess() {
		return eTrigger;
	}
	
	public EnumRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal RED returns ecore::EInt:
	//	'0'..'9'+ 'r';
	public TerminalRule getREDRule() {
		return tRED;
	}
	
	//terminal GREEN returns ecore::EInt:
	//	'0'..'9'+ 'g';
	public TerminalRule getGREENRule() {
		return tGREEN;
	}
	
	//terminal BLUE returns ecore::EInt:
	//	'0'..'9'+ 'b';
	public TerminalRule getBLUERule() {
		return tBLUE;
	}
	
	//terminal ALPHA returns ecore::EInt:
	//	'0'..'9'+ 'a';
	public TerminalRule getALPHARule() {
		return tALPHA;
	}
	
	//terminal FSIZE returns ecore::EInt:
	//	'0'..'9'+ 'pt';
	public TerminalRule getFSIZERule() {
		return tFSIZE;
	}
	
	//terminal DEGREES returns ecore::EFloat:
	//	('+' | '-')? ('0'..'9'+ ('.' '0'..'9'*)? | '.' '0'..'9'+) 'deg';
	public TerminalRule getDEGREESRule() {
		return tDEGREES;
	}
	
	//terminal PERCENT returns ecore::EFloat:
	//	('+' | '-')? ('0'..'9'+ ('.' '0'..'9'*)? | '.' '0'..'9'+) '%';
	public TerminalRule getPERCENTRule() {
		return tPERCENT;
	}
	
	//terminal TFLOAT returns ecore::EFloat:
	//	('+' | '-') ('0'..'9'+ ('.' '0'..'9'*)? (('e' | 'E') ('+' | '-')? '0'..'9'+)?
	//	| '.' '0'..'9'+ (('e' | 'E') ('+' | '-')? '0'..'9'+)?) | '0'..'9'+ '.' '0'..'9'* (('e' | 'E') ('+' | '-')? '0'..'9'+)?
	//	| '.' '0'..'9'+ (('e' | 'E') ('+' | '-')? '0'..'9'+)?
	//	| '0'..'9'+ ('e' | 'E') ('+' | '-')? '0'..'9'+;
	public TerminalRule getTFLOATRule() {
		return tTFLOAT;
	}
	
	//terminal NATURAL returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getNATURALRule() {
		return tNATURAL;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | '\'' | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
